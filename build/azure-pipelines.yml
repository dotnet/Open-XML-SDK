variables:
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'
  ProjectLoadStyle: 'All'

trigger:
- master

pr:
  autoCancel: true
  branches:
    include:
    - master

stages:
  - stage: Build
    jobs:
      - job: Build
        displayName: Build SDK
        pool:
          name: Hosted Windows 2019 with VS2019
        steps:
          - template: build.yml

  - stage: PerformanceTests
    jobs:
    - template: perf.yml
      parameters:
        frameworks:
          - tfm: net461
            name: net461
          - tfm: netcoreapp2.1
            name: netcoreapp2_1
          - tfm: netcoreapp3.0
            name: netcoreapp3_0
    dependsOn: Build
    condition: succeeded()

  - stage: UnitTests
    jobs:
    - template: test.yml
      parameters:
        frameworks:
          - tfm: net452
            name: net452
          - tfm: net46
            name: net46
          - tfm: netcoreapp1.1
            name: netcoreapp1_1
            runtime: '1.1.14'
          - tfm: netcoreapp2.1
            name: netcoreapp2_1
          - tfm: netcoreapp3.0
            name: netcoreapp3_0
    dependsOn: Build
    condition: succeeded()

  - stage: Sign
    jobs:
    - job: Sign
      displayName: Sign assemblies and package
      pool:
        name: Hosted Windows 2019 with VS2019
      steps:
        - template: sign.yml
    dependsOn: Build
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  
  - stage: MyGet
    jobs:
      - deployment: OpenXmlMyGet
        displayName: Deploy to MyGet
        pool:
          name: Hosted Windows 2019 with VS2019
        environment: 'openxmlsdk-dotnet-myget'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: nuget.yml
                  parameters:
                    feed: 'OpenXML MyGet Feed'
    dependsOn: 
      - Sign
      - PerformanceTests
      - UnitTests
    condition: succeeded()

  - stage: NuGet
    jobs:
      - deployment: OpenXmlNuGet
        displayName: Deploy to NuGet
        pool:
          name: Hosted Windows 2019 with VS2019
        environment: 'openxmlsdk-dotnet-nuget'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: nuget.yml
                  parameters:
                    feed: 'OpenXML NuGet Feed'
    dependsOn: 
      - MyGet
    # Only run this on tagged builds on master
    condition: and(succeeded(), not(contains(variables['Build.BuildNumber'], '-ci.')), eq(variables['Build.SourceBranchName'], 'master'))
