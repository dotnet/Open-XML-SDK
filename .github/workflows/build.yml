name: Build
 
on:
  push:
    branches: 
      - 'main'
      - 'release/*'
  pull_request:
    branches: 
      - 'main'
      - 'release/*'
      - '!/docs/'
      - '!/*.md'
  
jobs: 
  event_file: # Used for test reporting
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: Event File
        path: ${{ github.event_path }}
  pack:
    name: "Pack"
    runs-on: ubuntu-latest
    env:
      Configuration: Release
      ProjectLoadStyle: All
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'
      - name: GitVersion
        run: |
          dotnet tool install --global GitVersion.Tool --version 5.12.0
          dotnet gitversion /output buildserver /nofetch
      - name: Restore
        run: dotnet restore --verbosity normal
      - name: Build
        run: dotnet build --no-restore --verbosity normal
      - name: Pack
        run: dotnet pack --no-build
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Unsigned
          path: "bin/${{ env.Configuration }}/packages/shipping/*"

  validate_gen:
    name: "Validate generated files"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Remove generated files for baseline
      run: Remove-Item generated/ -Include *.g.cs -Recurse
      shell: pwsh
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
    - name: Restore
      run: dotnet restore --verbosity normal          
    - name: Build
      run: dotnet build --no-restore --verbosity normal    
    - name: Validate generated files
      run: |
        if [ "$(git diff --ignore-space-at-eol generated/ | wc -l)" -gt "0" ]; then
          echo "Detected uncommitted changes after build.  See status below:"
          git diff
          exit 1
        fi

  build_and_test:
    name: "Build and Test"
    strategy:
      fail-fast: false
      matrix:
        configuration: [ debug, release ]
        projectloadstyle: [ net35, net40, net46, net6_0, net7_0 ]
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        exclude: 
          - projectloadstyle: net35
            os: ubuntu-latest
          - projectloadstyle: net40
            os: ubuntu-latest
          - projectloadstyle: net46
            os: ubuntu-latest
          - projectloadstyle: net35
            os: macos-latest
          - projectloadstyle: net40
            os: macos-latest
          - projectloadstyle: net46
            os: macos-latest

    env:
      RunPeVerify: true 
      Solution_Name: Open-XML-SDK.sln  
      Configuration: ${{ matrix.configuration }}
      ProjectLoadStyle: ${{ matrix.projectloadstyle }}
          
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
          dotnet-version: 6.0.x
    - name: Restore
      run: dotnet restore --verbosity normal          
    - name: Build
      run: dotnet build --no-restore --verbosity normal
    - name: Test
      run: dotnet test --no-restore --verbosity normal --logger trx --results-directory test-results/
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Test Results (${{ matrix.os }} ${{ matrix.configuration }} ${{ matrix.projectloadstyle }})
        path: test-results/*
        
  sign:
    name: "Sign NUPKGs and DLLs"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [ pack ]
    steps: 
         - name: Install .NET Core
           uses: actions/setup-dotnet@v3
           with:
              dotnet-version: 6.0.x
         - name: Install SignTool tool
           run: dotnet tool install --tool-path . sign --version 0.9.0-beta.23127.3

         - name: Download Unsigned Packages
           uses: actions/download-artifact@v3
           with: 
                name: Unsigned
                path: '$(github.workspace)/unsigned' 

         - name: Expand Packages For Signing
           shell: pwsh 
           run: |
              mkdir raw
              cd raw
              gci ..\*.nupkg | % { Expand-Archive $_ }
              cd ..
              gci -r

         - name: Sign the DLLs
           shell: pwsh
           run: |
               ./sign code azure-key-vault `
               '**./DocumentFormat.OpenXml*.dll' ` 
               --base-directory  '$(github.workspace)/unsigned/raw' ` 
               --publisher-name "Microsoft" ` 
               --description "DocumentFormat.OpenXml DLL Signing" `
               --description-url "https://github.com/dotnet/sign" `
               --azure-key-vault-tenant-id "$(secrets.SignTenantId)" `
               --azure-key-vault-client-id "$(secrets.SignClientId)" `
               --azure-key-vault-client-secret '$(secrets.SignClientSecret)' `
               --azure-key-vault-certificate "$(secrets.SignKeyVaultCertificate)" `
               --azure-key-vault-url "$(secrets.SignKeyVaultUrl)"

         - name: Create Signed NUPKG
           shell: pwsh 
           run: | 
               gci -r CodeSignSummary | rm
               gci -Directory | % { [IO.Compression.ZipFile]::CreateFromDirectory($_, "$_.nupkg") }
               workingDirectory: '$(github.workspace)/unsigned/raw'

         - name: Sign the NUPKGs
           shell: pwsh
           run: |
              ./sign code azure-key-vault `
              '*.nupkg' `
              --base-directory  '$(github.workspace)/unsigned/raw' `
              --publisher-name "Microsoft" `
              --description "DocumentFormat.OpenXml DLL Signing" `
              --description-url "https://github.com/dotnet/sign" `
              --azure-key-vault-tenant-id "$(secrets.SignTenantId)" `
              --azure-key-vault-client-id "$(secrets.SignClientId)" `
              --azure-key-vault-client-secret '$(secrets.SignClientSecret)' `
              --azure-key-vault-certificate "$(secrets.SignKeyVaultCertificate)" `
              --azure-key-vault-url "$(secrets.SignKeyVaultUrl)"

         - uses: actions/upload-artifact@v3
           with:
             name: Signed
             path: |
               '$(github.workspace)/unsigned/*.snupkg'
               '$(github.workspace)/unsigned/raw/*.nupkg'
 
        
  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ sign ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: Signed
          path: "${github.workspace}/signed"

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3

      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${github.workspace}/signed" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }