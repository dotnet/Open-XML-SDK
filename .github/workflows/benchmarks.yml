name: Benchmarks
on:
  push:
    branches:
      - master
      - benchmarks
  pull_request:
    branches:
      - master

permissions:
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Run benchmarks
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
      - name: Build benchmarks
        run: cd test/DocumentFormat.OpenXml.Benchmarks; dotnet build -c RELEASE
        shell: pwsh
      - name: Run benchmarks
        run: cd test/DocumentFormat.OpenXml.Benchmarks; dotnet run -c RELEASE -- results --exporters json --filter '*'
        shell: pwsh
      - name: List folders
        shell: pwsh
        run: cd test/DocumentFormat.OpenXml.Benchmarks; ls -recurse
      - name: Combine results
        shell: pwsh
        run: |
          cd test/DocumentFormat.OpenXml.Benchmarks/results/results

          function fold([scriptblock]$fold, [Collections.IEnumerable]$x, $a) {
              $x.ForEach({
                  $a = & $fold $a $_
              })
              return $a
          }

          $filesk = gci *-full-compressed.json | % { Get-Content $_ -Raw } | ConvertFrom-Json
          $empty = "" | ConvertFrom-Json
          fold { param($x, $y) $x + $y } $files $empty | ConvertTo-Json -Depth 15 | Out-File -FilePath result.json
          
      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: OpenXmlSdk Benchmark
          tool: 'benchmarkdotnet'
          output-file-path: tests/DocumentFormat.OpenXml.Benchmarks/results/results/results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@twsouthwick'

