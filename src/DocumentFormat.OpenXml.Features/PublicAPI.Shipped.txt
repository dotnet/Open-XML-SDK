#nullable enable
DocumentFormat.OpenXml.Features.IParagraphIdCollectionFeature
DocumentFormat.OpenXml.Features.IParagraphIdCollectionFeature.Contains(string! id) -> bool
DocumentFormat.OpenXml.Features.IParagraphIdCollectionFeature.Count.get -> int
DocumentFormat.OpenXml.Features.IParagraphIdGeneratorFeature
DocumentFormat.OpenXml.Features.IParagraphIdGeneratorFeature.CreateUniqueParagraphId() -> string!
DocumentFormat.OpenXml.Features.IRandomNumberGeneratorFeature
DocumentFormat.OpenXml.Features.IRandomNumberGeneratorFeature.GetBytes(byte[]! bytes) -> void
DocumentFormat.OpenXml.Features.ISharedFeature<T>
DocumentFormat.OpenXml.Features.ISharedFeature<T>.Add(T feature) -> void
DocumentFormat.OpenXml.Features.ISharedFeature<T>.Composite.get -> T
DocumentFormat.OpenXml.Features.ISharedFeature<T>.Count.get -> int
DocumentFormat.OpenXml.Features.ISharedFeature<T>.Remove(T feature) -> bool
DocumentFormat.OpenXml.Features.ParagraphIdFeatureExtensions
DocumentFormat.OpenXml.Features.ParagraphIdOptions
DocumentFormat.OpenXml.Features.ParagraphIdOptions.AutoGenerateIds.get -> bool
DocumentFormat.OpenXml.Features.ParagraphIdOptions.AutoGenerateIds.set -> void
DocumentFormat.OpenXml.Features.ParagraphIdOptions.EnsureUniquenessOnExistingNodes.get -> bool
DocumentFormat.OpenXml.Features.ParagraphIdOptions.EnsureUniquenessOnExistingNodes.set -> void
DocumentFormat.OpenXml.Features.ParagraphIdOptions.ParagraphIdOptions() -> void
DocumentFormat.OpenXml.Features.RandomNumberGeneratorFeatureExtensions
DocumentFormat.OpenXml.Features.SharedParagraphIdFeatureExtensions
static DocumentFormat.OpenXml.Features.ParagraphIdFeatureExtensions.AddParagraphIdFeature(this DocumentFormat.OpenXml.Packaging.WordprocessingDocument! doc, DocumentFormat.OpenXml.Features.ParagraphIdOptions? options = null) -> void
static DocumentFormat.OpenXml.Features.ParagraphIdFeatureExtensions.AddParagraphIdGeneratorFeature(this DocumentFormat.OpenXml.Packaging.WordprocessingDocument! doc) -> void
static DocumentFormat.OpenXml.Features.RandomNumberGeneratorFeatureExtensions.AddRandomNumberGeneratorFeature(this DocumentFormat.OpenXml.Packaging.OpenXmlPackage! package) -> void
static DocumentFormat.OpenXml.Features.SharedParagraphIdFeatureExtensions.Add(this DocumentFormat.OpenXml.Features.ISharedFeature<DocumentFormat.OpenXml.Features.IParagraphIdCollectionFeature!>! shared, DocumentFormat.OpenXml.Packaging.WordprocessingDocument! doc) -> DocumentFormat.OpenXml.Features.ISharedFeature<DocumentFormat.OpenXml.Features.IParagraphIdCollectionFeature!>!
static DocumentFormat.OpenXml.Features.SharedParagraphIdFeatureExtensions.Add(this DocumentFormat.OpenXml.Features.ISharedFeature<DocumentFormat.OpenXml.Features.IParagraphIdCollectionFeature!>! shared, System.Collections.Generic.IEnumerable<string!>! paragraphIds) -> DocumentFormat.OpenXml.Features.ISharedFeature<DocumentFormat.OpenXml.Features.IParagraphIdCollectionFeature!>!
static DocumentFormat.OpenXml.Features.SharedParagraphIdFeatureExtensions.AddSharedParagraphIdFeature(this DocumentFormat.OpenXml.Packaging.WordprocessingDocument! doc) -> DocumentFormat.OpenXml.Features.ISharedFeature<DocumentFormat.OpenXml.Features.IParagraphIdCollectionFeature!>!
DocumentFormat.OpenXml.Features.IDisposableFeature (forwarded, contained in DocumentFormat.OpenXml.Framework)
DocumentFormat.OpenXml.Features.IDisposableFeature.Register(System.Action! disposable) -> void (forwarded, contained in DocumentFormat.OpenXml.Framework)