// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;
using System.IO;

using A = DocumentFormat.OpenXml.Drawing;
using Ap = DocumentFormat.OpenXml.ExtendedProperties;
using C = DocumentFormat.OpenXml.Drawing.Charts;
using C14 = DocumentFormat.OpenXml.Office2010.Drawing.Charts;
using S = DocumentFormat.OpenXml.Spreadsheet;
using Tsle = DocumentFormat.OpenXml.Office2013.Drawing.TimeSlicer;
using Vt = DocumentFormat.OpenXml.VariantTypes;
using X14 = DocumentFormat.OpenXml.Office2010.Excel;
using X15 = DocumentFormat.OpenXml.Office2013.Excel;
using X15ac = DocumentFormat.OpenXml.Office2013.ExcelAc;
using Xdr = DocumentFormat.OpenXml.Drawing.Spreadsheet;

namespace DocumentFormat.OpenXml.Tests.TimelineClass
{
    public static class GeneratedDocument
    {
        // Creates a SpreadsheetDocument.
        public static void CreatePackage(Stream stream)
        {
            using(SpreadsheetDocument package = SpreadsheetDocument.Create(stream, SpreadsheetDocumentType.Workbook))
            {
                CreateParts(package);
            }
        }

        // Adds child parts and generates content of the specified part.
        private static void CreateParts(SpreadsheetDocument document)
        {
            ExtendedFilePropertiesPart extendedFilePropertiesPart1 = document.AddNewPart<ExtendedFilePropertiesPart>("rId3");
            GenerateExtendedFilePropertiesPart1Content(extendedFilePropertiesPart1);

            WorkbookPart workbookPart1 = document.AddWorkbookPart();
            GenerateWorkbookPart1Content(workbookPart1);

            WorksheetPart worksheetPart1 = workbookPart1.AddNewPart<WorksheetPart>("rId8");
            GenerateWorksheetPart1Content(worksheetPart1);

            TimeLinePart timeLinePart1 = worksheetPart1.AddNewPart<TimeLinePart>("rId3");
            GenerateTimeLinePart1Content(timeLinePart1);

            DrawingsPart drawingsPart1 = worksheetPart1.AddNewPart<DrawingsPart>("rId2");
            GenerateDrawingsPart1Content(drawingsPart1);

            ChartPart chartPart1 = drawingsPart1.AddNewPart<ChartPart>("rId2");
            GenerateChartPart1Content(chartPart1);

            ChartPart chartPart2 = drawingsPart1.AddNewPart<ChartPart>("rId1");
            GenerateChartPart2Content(chartPart2);

            PivotTablePart pivotTablePart1 = worksheetPart1.AddNewPart<PivotTablePart>("rId1");
            GeneratePivotTablePart1Content(pivotTablePart1);

            PivotTableCacheDefinitionPart pivotTableCacheDefinitionPart1 = pivotTablePart1.AddNewPart<PivotTableCacheDefinitionPart>("rId1");
            GeneratePivotTableCacheDefinitionPart1Content(pivotTableCacheDefinitionPart1);

            PivotTableCacheRecordsPart pivotTableCacheRecordsPart1 = pivotTableCacheDefinitionPart1.AddNewPart<PivotTableCacheRecordsPart>("rId1");
            GeneratePivotTableCacheRecordsPart1Content(pivotTableCacheRecordsPart1);

            workbookPart1.AddPart(pivotTableCacheDefinitionPart1, "rId13");

            TimeLineCachePart timeLineCachePart1 = workbookPart1.AddNewPart<TimeLineCachePart>("rId18");
            GenerateTimeLineCachePart1Content(timeLineCachePart1);

            WorksheetPart worksheetPart2 = workbookPart1.AddNewPart<WorksheetPart>("rId3");
            GenerateWorksheetPart2Content(worksheetPart2);

            TimeLinePart timeLinePart2 = worksheetPart2.AddNewPart<TimeLinePart>("rId3");
            GenerateTimeLinePart2Content(timeLinePart2);

            DrawingsPart drawingsPart2 = worksheetPart2.AddNewPart<DrawingsPart>("rId2");
            GenerateDrawingsPart2Content(drawingsPart2);

            ChartPart chartPart3 = drawingsPart2.AddNewPart<ChartPart>("rId2");
            GenerateChartPart3Content(chartPart3);

            ChartPart chartPart4 = drawingsPart2.AddNewPart<ChartPart>("rId1");
            GenerateChartPart4Content(chartPart4);

            PivotTablePart pivotTablePart2 = worksheetPart2.AddNewPart<PivotTablePart>("rId1");
            GeneratePivotTablePart2Content(pivotTablePart2);

            PivotTableCacheDefinitionPart pivotTableCacheDefinitionPart2 = pivotTablePart2.AddNewPart<PivotTableCacheDefinitionPart>("rId1");
            GeneratePivotTableCacheDefinitionPart2Content(pivotTableCacheDefinitionPart2);

            PivotTableCacheRecordsPart pivotTableCacheRecordsPart2 = pivotTableCacheDefinitionPart2.AddNewPart<PivotTableCacheRecordsPart>("rId1");
            GeneratePivotTableCacheRecordsPart2Content(pivotTableCacheRecordsPart2);

            TimeLineCachePart timeLineCachePart2 = workbookPart1.AddNewPart<TimeLineCachePart>("rId21");
            GenerateTimeLineCachePart2Content(timeLineCachePart2);

            WorksheetPart worksheetPart3 = workbookPart1.AddNewPart<WorksheetPart>("rId7");
            GenerateWorksheetPart3Content(worksheetPart3);

            TimeLinePart timeLinePart3 = worksheetPart3.AddNewPart<TimeLinePart>("rId3");
            GenerateTimeLinePart3Content(timeLinePart3);

            DrawingsPart drawingsPart3 = worksheetPart3.AddNewPart<DrawingsPart>("rId2");
            GenerateDrawingsPart3Content(drawingsPart3);

            ChartPart chartPart5 = drawingsPart3.AddNewPart<ChartPart>("rId2");
            GenerateChartPart5Content(chartPart5);

            ChartPart chartPart6 = drawingsPart3.AddNewPart<ChartPart>("rId1");
            GenerateChartPart6Content(chartPart6);

            PivotTablePart pivotTablePart3 = worksheetPart3.AddNewPart<PivotTablePart>("rId1");
            GeneratePivotTablePart3Content(pivotTablePart3);

            pivotTablePart3.AddPart(pivotTableCacheDefinitionPart1, "rId1");

            workbookPart1.AddPart(pivotTableCacheDefinitionPart2, "rId12");

            TimeLineCachePart timeLineCachePart3 = workbookPart1.AddNewPart<TimeLineCachePart>("rId17");
            GenerateTimeLineCachePart3Content(timeLineCachePart3);

            SharedStringTablePart sharedStringTablePart1 = workbookPart1.AddNewPart<SharedStringTablePart>("rId25");
            GenerateSharedStringTablePart1Content(sharedStringTablePart1);

            WorksheetPart worksheetPart4 = workbookPart1.AddNewPart<WorksheetPart>("rId2");
            GenerateWorksheetPart4Content(worksheetPart4);

            TableDefinitionPart tableDefinitionPart1 = worksheetPart4.AddNewPart<TableDefinitionPart>("rId3");
            GenerateTableDefinitionPart1Content(tableDefinitionPart1);

            TableDefinitionPart tableDefinitionPart2 = worksheetPart4.AddNewPart<TableDefinitionPart>("rId2");
            GenerateTableDefinitionPart2Content(tableDefinitionPart2);

            TableDefinitionPart tableDefinitionPart3 = worksheetPart4.AddNewPart<TableDefinitionPart>("rId1");
            GenerateTableDefinitionPart3Content(tableDefinitionPart3);

            TimeLineCachePart timeLineCachePart4 = workbookPart1.AddNewPart<TimeLineCachePart>("rId16");
            GenerateTimeLineCachePart4Content(timeLineCachePart4);

            TimeLineCachePart timeLineCachePart5 = workbookPart1.AddNewPart<TimeLineCachePart>("rId20");
            GenerateTimeLineCachePart5Content(timeLineCachePart5);

            WorksheetPart worksheetPart5 = workbookPart1.AddNewPart<WorksheetPart>("rId1");
            GenerateWorksheetPart5Content(worksheetPart5);

            TableDefinitionPart tableDefinitionPart4 = worksheetPart5.AddNewPart<TableDefinitionPart>("rId3");
            GenerateTableDefinitionPart4Content(tableDefinitionPart4);

            TableDefinitionPart tableDefinitionPart5 = worksheetPart5.AddNewPart<TableDefinitionPart>("rId2");
            GenerateTableDefinitionPart5Content(tableDefinitionPart5);

            TableDefinitionPart tableDefinitionPart6 = worksheetPart5.AddNewPart<TableDefinitionPart>("rId1");
            GenerateTableDefinitionPart6Content(tableDefinitionPart6);

            WorksheetPart worksheetPart6 = workbookPart1.AddNewPart<WorksheetPart>("rId6");
            GenerateWorksheetPart6Content(worksheetPart6);

            TimeLinePart timeLinePart4 = worksheetPart6.AddNewPart<TimeLinePart>("rId3");
            GenerateTimeLinePart4Content(timeLinePart4);

            DrawingsPart drawingsPart4 = worksheetPart6.AddNewPart<DrawingsPart>("rId2");
            GenerateDrawingsPart4Content(drawingsPart4);

            ChartPart chartPart7 = drawingsPart4.AddNewPart<ChartPart>("rId2");
            GenerateChartPart7Content(chartPart7);

            ChartPart chartPart8 = drawingsPart4.AddNewPart<ChartPart>("rId1");
            GenerateChartPart8Content(chartPart8);

            PivotTablePart pivotTablePart4 = worksheetPart6.AddNewPart<PivotTablePart>("rId1");
            GeneratePivotTablePart4Content(pivotTablePart4);

            pivotTablePart4.AddPart(pivotTableCacheDefinitionPart1, "rId1");

            WorksheetPart worksheetPart7 = workbookPart1.AddNewPart<WorksheetPart>("rId11");
            GenerateWorksheetPart7Content(worksheetPart7);

            TimeLinePart timeLinePart5 = worksheetPart7.AddNewPart<TimeLinePart>("rId3");
            GenerateTimeLinePart5Content(timeLinePart5);

            DrawingsPart drawingsPart5 = worksheetPart7.AddNewPart<DrawingsPart>("rId2");
            GenerateDrawingsPart5Content(drawingsPart5);

            ChartPart chartPart9 = drawingsPart5.AddNewPart<ChartPart>("rId2");
            GenerateChartPart9Content(chartPart9);

            ChartPart chartPart10 = drawingsPart5.AddNewPart<ChartPart>("rId1");
            GenerateChartPart10Content(chartPart10);

            PivotTablePart pivotTablePart5 = worksheetPart7.AddNewPart<PivotTablePart>("rId1");
            GeneratePivotTablePart5Content(pivotTablePart5);

            pivotTablePart5.AddPart(pivotTableCacheDefinitionPart1, "rId1");

            WorkbookStylesPart workbookStylesPart1 = workbookPart1.AddNewPart<WorkbookStylesPart>("rId24");
            GenerateWorkbookStylesPart1Content(workbookStylesPart1);

            WorksheetPart worksheetPart8 = workbookPart1.AddNewPart<WorksheetPart>("rId5");
            GenerateWorksheetPart8Content(worksheetPart8);

            TimeLinePart timeLinePart6 = worksheetPart8.AddNewPart<TimeLinePart>("rId3");
            GenerateTimeLinePart6Content(timeLinePart6);

            DrawingsPart drawingsPart6 = worksheetPart8.AddNewPart<DrawingsPart>("rId2");
            GenerateDrawingsPart6Content(drawingsPart6);

            ChartPart chartPart11 = drawingsPart6.AddNewPart<ChartPart>("rId2");
            GenerateChartPart11Content(chartPart11);

            ChartPart chartPart12 = drawingsPart6.AddNewPart<ChartPart>("rId1");
            GenerateChartPart12Content(chartPart12);

            PivotTablePart pivotTablePart6 = worksheetPart8.AddNewPart<PivotTablePart>("rId1");
            GeneratePivotTablePart6Content(pivotTablePart6);

            pivotTablePart6.AddPart(pivotTableCacheDefinitionPart1, "rId1");

            TimeLineCachePart timeLineCachePart6 = workbookPart1.AddNewPart<TimeLineCachePart>("rId15");
            GenerateTimeLineCachePart6Content(timeLineCachePart6);

            ThemePart themePart1 = workbookPart1.AddNewPart<ThemePart>("rId23");
            GenerateThemePart1Content(themePart1);

            WorksheetPart worksheetPart9 = workbookPart1.AddNewPart<WorksheetPart>("rId10");
            GenerateWorksheetPart9Content(worksheetPart9);

            TimeLinePart timeLinePart7 = worksheetPart9.AddNewPart<TimeLinePart>("rId3");
            GenerateTimeLinePart7Content(timeLinePart7);

            DrawingsPart drawingsPart7 = worksheetPart9.AddNewPart<DrawingsPart>("rId2");
            GenerateDrawingsPart7Content(drawingsPart7);

            ChartPart chartPart13 = drawingsPart7.AddNewPart<ChartPart>("rId2");
            GenerateChartPart13Content(chartPart13);

            ChartPart chartPart14 = drawingsPart7.AddNewPart<ChartPart>("rId1");
            GenerateChartPart14Content(chartPart14);

            PivotTablePart pivotTablePart7 = worksheetPart9.AddNewPart<PivotTablePart>("rId1");
            GeneratePivotTablePart7Content(pivotTablePart7);

            pivotTablePart7.AddPart(pivotTableCacheDefinitionPart1, "rId1");

            TimeLineCachePart timeLineCachePart7 = workbookPart1.AddNewPart<TimeLineCachePart>("rId19");
            GenerateTimeLineCachePart7Content(timeLineCachePart7);

            WorksheetPart worksheetPart10 = workbookPart1.AddNewPart<WorksheetPart>("rId4");
            GenerateWorksheetPart10Content(worksheetPart10);

            TimeLinePart timeLinePart8 = worksheetPart10.AddNewPart<TimeLinePart>("rId3");
            GenerateTimeLinePart8Content(timeLinePart8);

            DrawingsPart drawingsPart8 = worksheetPart10.AddNewPart<DrawingsPart>("rId2");
            GenerateDrawingsPart8Content(drawingsPart8);

            ChartPart chartPart15 = drawingsPart8.AddNewPart<ChartPart>("rId2");
            GenerateChartPart15Content(chartPart15);

            ChartPart chartPart16 = drawingsPart8.AddNewPart<ChartPart>("rId1");
            GenerateChartPart16Content(chartPart16);

            PivotTablePart pivotTablePart8 = worksheetPart10.AddNewPart<PivotTablePart>("rId1");
            GeneratePivotTablePart8Content(pivotTablePart8);

            pivotTablePart8.AddPart(pivotTableCacheDefinitionPart1, "rId1");

            WorksheetPart worksheetPart11 = workbookPart1.AddNewPart<WorksheetPart>("rId9");
            GenerateWorksheetPart11Content(worksheetPart11);

            TimeLinePart timeLinePart9 = worksheetPart11.AddNewPart<TimeLinePart>("rId3");
            GenerateTimeLinePart9Content(timeLinePart9);

            DrawingsPart drawingsPart9 = worksheetPart11.AddNewPart<DrawingsPart>("rId2");
            GenerateDrawingsPart9Content(drawingsPart9);

            ChartPart chartPart17 = drawingsPart9.AddNewPart<ChartPart>("rId2");
            GenerateChartPart17Content(chartPart17);

            ChartPart chartPart18 = drawingsPart9.AddNewPart<ChartPart>("rId1");
            GenerateChartPart18Content(chartPart18);

            PivotTablePart pivotTablePart9 = worksheetPart11.AddNewPart<PivotTablePart>("rId1");
            GeneratePivotTablePart9Content(pivotTablePart9);

            pivotTablePart9.AddPart(pivotTableCacheDefinitionPart1, "rId1");

            TimeLineCachePart timeLineCachePart8 = workbookPart1.AddNewPart<TimeLineCachePart>("rId14");
            GenerateTimeLineCachePart8Content(timeLineCachePart8);

            TimeLineCachePart timeLineCachePart9 = workbookPart1.AddNewPart<TimeLineCachePart>("rId22");
            GenerateTimeLineCachePart9Content(timeLineCachePart9);

            SetPackageProperties(document);
        }

        // Generates content of extendedFilePropertiesPart1.
        private static void GenerateExtendedFilePropertiesPart1Content(ExtendedFilePropertiesPart extendedFilePropertiesPart1)
        {
            Ap.Properties properties1 = new Ap.Properties();
            properties1.AddNamespaceDeclaration("vt", "http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes");
            Ap.Application application1 = new Ap.Application();
            application1.Text = "Microsoft Excel";
            Ap.DocumentSecurity documentSecurity1 = new Ap.DocumentSecurity();
            documentSecurity1.Text = "0";
            Ap.ScaleCrop scaleCrop1 = new Ap.ScaleCrop();
            scaleCrop1.Text = "false";

            Ap.HeadingPairs headingPairs1 = new Ap.HeadingPairs();

            Vt.VTVector vTVector1 = new Vt.VTVector(){ BaseType = Vt.VectorBaseValues.Variant, Size = 2U };

            Vt.Variant variant1 = new Vt.Variant();
            Vt.VTLPSTR vTLPSTR1 = new Vt.VTLPSTR();
            vTLPSTR1.Text = "Worksheets";

            variant1.Append(vTLPSTR1);

            Vt.Variant variant2 = new Vt.Variant();
            Vt.VTInt32 vTInt321 = new Vt.VTInt32();
            vTInt321.Text = "11";

            variant2.Append(vTInt321);

            vTVector1.Append(variant1);
            vTVector1.Append(variant2);

            headingPairs1.Append(vTVector1);

            Ap.TitlesOfParts titlesOfParts1 = new Ap.TitlesOfParts();

            Vt.VTVector vTVector2 = new Vt.VTVector(){ BaseType = Vt.VectorBaseValues.Lpstr, Size = 11U };
            Vt.VTLPSTR vTLPSTR2 = new Vt.VTLPSTR();
            vTLPSTR2.Text = "data";
            Vt.VTLPSTR vTLPSTR3 = new Vt.VTLPSTR();
            vTLPSTR3.Text = "data2";
            Vt.VTLPSTR vTLPSTR4 = new Vt.VTLPSTR();
            vTLPSTR4.Text = "Cache";
            Vt.VTLPSTR vTLPSTR5 = new Vt.VTLPSTR();
            vTLPSTR5.Text = "Level";
            Vt.VTLPSTR vTLPSTR6 = new Vt.VTLPSTR();
            vTLPSTR6.Text = "Caption";
            Vt.VTLPSTR vTLPSTR7 = new Vt.VTLPSTR();
            vTLPSTR7.Text = "ShowHeader";
            Vt.VTLPSTR vTLPSTR8 = new Vt.VTLPSTR();
            vTLPSTR8.Text = "ShowSelectionLabel";
            Vt.VTLPSTR vTLPSTR9 = new Vt.VTLPSTR();
            vTLPSTR9.Text = "ShowTimeLevel";
            Vt.VTLPSTR vTLPSTR10 = new Vt.VTLPSTR();
            vTLPSTR10.Text = "ShowHorizontalScrollbar";
            Vt.VTLPSTR vTLPSTR11 = new Vt.VTLPSTR();
            vTLPSTR11.Text = "ScrollPosition";
            Vt.VTLPSTR vTLPSTR12 = new Vt.VTLPSTR();
            vTLPSTR12.Text = "Style";

            vTVector2.Append(vTLPSTR2);
            vTVector2.Append(vTLPSTR3);
            vTVector2.Append(vTLPSTR4);
            vTVector2.Append(vTLPSTR5);
            vTVector2.Append(vTLPSTR6);
            vTVector2.Append(vTLPSTR7);
            vTVector2.Append(vTLPSTR8);
            vTVector2.Append(vTLPSTR9);
            vTVector2.Append(vTLPSTR10);
            vTVector2.Append(vTLPSTR11);
            vTVector2.Append(vTLPSTR12);

            titlesOfParts1.Append(vTVector2);
            Ap.LinksUpToDate linksUpToDate1 = new Ap.LinksUpToDate();
            linksUpToDate1.Text = "false";
            Ap.SharedDocument sharedDocument1 = new Ap.SharedDocument();
            sharedDocument1.Text = "false";
            Ap.HyperlinksChanged hyperlinksChanged1 = new Ap.HyperlinksChanged();
            hyperlinksChanged1.Text = "false";
            Ap.ApplicationVersion applicationVersion1 = new Ap.ApplicationVersion();
            applicationVersion1.Text = "15.0300";

            properties1.Append(application1);
            properties1.Append(documentSecurity1);
            properties1.Append(scaleCrop1);
            properties1.Append(headingPairs1);
            properties1.Append(titlesOfParts1);
            properties1.Append(linksUpToDate1);
            properties1.Append(sharedDocument1);
            properties1.Append(hyperlinksChanged1);
            properties1.Append(applicationVersion1);

            extendedFilePropertiesPart1.Properties = properties1;
        }

        // Generates content of workbookPart1.
        private static void GenerateWorkbookPart1Content(WorkbookPart workbookPart1)
        {
            Workbook workbook1 = new Workbook(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x15" }  };
            workbook1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            workbook1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            workbook1.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");
            FileVersion fileVersion1 = new FileVersion(){ ApplicationName = "xl", LastEdited = "6", LowestEdited = "6", BuildVersion = "14420" };
            WorkbookProperties workbookProperties1 = new WorkbookProperties();

            AlternateContent alternateContent1 = new AlternateContent();
            alternateContent1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice1 = new AlternateContentChoice(){ Requires = "x15" };

            X15ac.AbsolutePath absolutePath1 = new X15ac.AbsolutePath(){ Url = "D:\\Users\\dito\\Desktop\\TestDocumentResaver\\OpenXmlApiConversion\\Timeline\\" };
            absolutePath1.AddNamespaceDeclaration("x15ac", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/ac");

            alternateContentChoice1.Append(absolutePath1);

            alternateContent1.Append(alternateContentChoice1);

            BookViews bookViews1 = new BookViews();
            WorkbookView workbookView1 = new WorkbookView(){ XWindow = 0, YWindow = 0, WindowWidth = 26940U, WindowHeight = 15120U };

            bookViews1.Append(workbookView1);

            Sheets sheets1 = new Sheets();
            Sheet sheet1 = new Sheet(){ Name = "data", SheetId = 1U, Id = "rId1" };
            Sheet sheet2 = new Sheet(){ Name = "data2", SheetId = 3U, Id = "rId2" };
            Sheet sheet3 = new Sheet(){ Name = "Cache", SheetId = 4U, Id = "rId3" };
            Sheet sheet4 = new Sheet(){ Name = "Level", SheetId = 2U, Id = "rId4" };
            Sheet sheet5 = new Sheet(){ Name = "Caption", SheetId = 5U, Id = "rId5" };
            Sheet sheet6 = new Sheet(){ Name = "ShowHeader", SheetId = 6U, Id = "rId6" };
            Sheet sheet7 = new Sheet(){ Name = "ShowSelectionLabel", SheetId = 7U, Id = "rId7" };
            Sheet sheet8 = new Sheet(){ Name = "ShowTimeLevel", SheetId = 8U, Id = "rId8" };
            Sheet sheet9 = new Sheet(){ Name = "ShowHorizontalScrollbar", SheetId = 9U, Id = "rId9" };
            Sheet sheet10 = new Sheet(){ Name = "ScrollPosition", SheetId = 10U, Id = "rId10" };
            Sheet sheet11 = new Sheet(){ Name = "Style", SheetId = 11U, Id = "rId11" };

            sheets1.Append(sheet1);
            sheets1.Append(sheet2);
            sheets1.Append(sheet3);
            sheets1.Append(sheet4);
            sheets1.Append(sheet5);
            sheets1.Append(sheet6);
            sheets1.Append(sheet7);
            sheets1.Append(sheet8);
            sheets1.Append(sheet9);
            sheets1.Append(sheet10);
            sheets1.Append(sheet11);

            DefinedNames definedNames1 = new DefinedNames();
            DefinedName definedName1 = new DefinedName(){ Name = "NativeTimeline_Date" };
            definedName1.Text = "#N/A";
            DefinedName definedName2 = new DefinedName(){ Name = "NativeTimeline_DeliveryDate" };
            definedName2.Text = "#N/A";
            DefinedName definedName3 = new DefinedName(){ Name = "NativeTimeline_DeliveryDate1" };
            definedName3.Text = "#N/A";
            DefinedName definedName4 = new DefinedName(){ Name = "NativeTimeline_DeliveryDate2" };
            definedName4.Text = "#N/A";
            DefinedName definedName5 = new DefinedName(){ Name = "NativeTimeline_DeliveryDate3" };
            definedName5.Text = "#N/A";
            DefinedName definedName6 = new DefinedName(){ Name = "NativeTimeline_DeliveryDate4" };
            definedName6.Text = "#N/A";
            DefinedName definedName7 = new DefinedName(){ Name = "NativeTimeline_DeliveryDate5" };
            definedName7.Text = "#N/A";
            DefinedName definedName8 = new DefinedName(){ Name = "NativeTimeline_DeliveryDate6" };
            definedName8.Text = "#N/A";
            DefinedName definedName9 = new DefinedName(){ Name = "NativeTimeline_DeliveryDate7" };
            definedName9.Text = "#N/A";

            definedNames1.Append(definedName1);
            definedNames1.Append(definedName2);
            definedNames1.Append(definedName3);
            definedNames1.Append(definedName4);
            definedNames1.Append(definedName5);
            definedNames1.Append(definedName6);
            definedNames1.Append(definedName7);
            definedNames1.Append(definedName8);
            definedNames1.Append(definedName9);
            CalculationProperties calculationProperties1 = new CalculationProperties(){ CalculationId = 152511U };

            PivotCaches pivotCaches1 = new PivotCaches();
            PivotCache pivotCache1 = new PivotCache(){ CacheId = 0U, Id = "rId12" };
            PivotCache pivotCache2 = new PivotCache(){ CacheId = 1U, Id = "rId13" };

            pivotCaches1.Append(pivotCache1);
            pivotCaches1.Append(pivotCache2);

            WorkbookExtensionList workbookExtensionList1 = new WorkbookExtensionList();

            WorkbookExtension workbookExtension1 = new WorkbookExtension(){ Uri = "{79F54976-1DA5-4618-B147-4CDE4B953A38}" };
            workbookExtension1.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");
            X14.WorkbookProperties workbookProperties2 = new X14.WorkbookProperties();

            workbookExtension1.Append(workbookProperties2);

            WorkbookExtension workbookExtension2 = new WorkbookExtension(){ Uri = "{D0CA8CA8-9F24-4464-BF8E-62219DCF47F9}" };
            workbookExtension2.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCacheReferences timelineCacheReferences1 = new X15.TimelineCacheReferences();
            X15.TimelineCacheReference timelineCacheReference1 = new X15.TimelineCacheReference(){ Id = "rId14" };
            X15.TimelineCacheReference timelineCacheReference2 = new X15.TimelineCacheReference(){ Id = "rId15" };
            X15.TimelineCacheReference timelineCacheReference3 = new X15.TimelineCacheReference(){ Id = "rId16" };
            X15.TimelineCacheReference timelineCacheReference4 = new X15.TimelineCacheReference(){ Id = "rId17" };
            X15.TimelineCacheReference timelineCacheReference5 = new X15.TimelineCacheReference(){ Id = "rId18" };
            X15.TimelineCacheReference timelineCacheReference6 = new X15.TimelineCacheReference(){ Id = "rId19" };
            X15.TimelineCacheReference timelineCacheReference7 = new X15.TimelineCacheReference(){ Id = "rId20" };
            X15.TimelineCacheReference timelineCacheReference8 = new X15.TimelineCacheReference(){ Id = "rId21" };
            X15.TimelineCacheReference timelineCacheReference9 = new X15.TimelineCacheReference(){ Id = "rId22" };

            timelineCacheReferences1.Append(timelineCacheReference1);
            timelineCacheReferences1.Append(timelineCacheReference2);
            timelineCacheReferences1.Append(timelineCacheReference3);
            timelineCacheReferences1.Append(timelineCacheReference4);
            timelineCacheReferences1.Append(timelineCacheReference5);
            timelineCacheReferences1.Append(timelineCacheReference6);
            timelineCacheReferences1.Append(timelineCacheReference7);
            timelineCacheReferences1.Append(timelineCacheReference8);
            timelineCacheReferences1.Append(timelineCacheReference9);

            workbookExtension2.Append(timelineCacheReferences1);

            WorkbookExtension workbookExtension3 = new WorkbookExtension(){ Uri = "{140A7094-0E35-4892-8432-C4D2E57EDEB5}" };
            workbookExtension3.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");
            X15.WorkbookProperties workbookProperties3 = new X15.WorkbookProperties(){ ChartTrackingReferenceBase = true };

            workbookExtension3.Append(workbookProperties3);

            workbookExtensionList1.Append(workbookExtension1);
            workbookExtensionList1.Append(workbookExtension2);
            workbookExtensionList1.Append(workbookExtension3);

            workbook1.Append(fileVersion1);
            workbook1.Append(workbookProperties1);
            workbook1.Append(alternateContent1);
            workbook1.Append(bookViews1);
            workbook1.Append(sheets1);
            workbook1.Append(definedNames1);
            workbook1.Append(calculationProperties1);
            workbook1.Append(pivotCaches1);
            workbook1.Append(workbookExtensionList1);

            workbookPart1.Workbook = workbook1;
        }

        // Generates content of worksheetPart1.
        private static void GenerateWorksheetPart1Content(WorksheetPart worksheetPart1)
        {
            Worksheet worksheet1 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet1.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension1 = new SheetDimension(){ Reference = "A1:B5" };

            SheetViews sheetViews1 = new SheetViews();
            SheetView sheetView1 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews1.Append(sheetView1);
            SheetFormatProperties sheetFormatProperties1 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns1 = new Columns();
            Column column1 = new Column(){ Min = 1U, Max = 1U, Width = 14.140625D, BestFit = true, CustomWidth = true };
            Column column2 = new Column(){ Min = 2U, Max = 2U, Width = 17.42578125D, CustomWidth = true };
            Column column3 = new Column(){ Min = 3U, Max = 3U, Width = 12.42578125D, CustomWidth = true };
            Column column4 = new Column(){ Min = 4U, Max = 11U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column5 = new Column(){ Min = 12U, Max = 12U, Width = 13D, CustomWidth = true };
            Column column6 = new Column(){ Min = 13U, Max = 20U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column7 = new Column(){ Min = 21U, Max = 23U, Width = 20.42578125D, BestFit = true, CustomWidth = true };

            columns1.Append(column1);
            columns1.Append(column2);
            columns1.Append(column3);
            columns1.Append(column4);
            columns1.Append(column5);
            columns1.Append(column6);
            columns1.Append(column7);

            SheetData sheetData1 = new SheetData();

            Row row1 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell1 = new Cell(){ CellReference = "A1", StyleIndex = 5U, DataType = CellValues.SharedString };
            CellValue cellValue1 = new CellValue();
            cellValue1.Text = "29";

            cell1.Append(cellValue1);

            Cell cell2 = new Cell(){ CellReference = "B1", DataType = CellValues.SharedString };
            CellValue cellValue2 = new CellValue();
            cellValue2.Text = "28";

            cell2.Append(cellValue2);

            row1.Append(cell1);
            row1.Append(cell2);

            Row row2 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell3 = new Cell(){ CellReference = "A2", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue3 = new CellValue();
            cellValue3.Text = "6";

            cell3.Append(cellValue3);

            Cell cell4 = new Cell(){ CellReference = "B2", StyleIndex = 7U };
            CellValue cellValue4 = new CellValue();
            cellValue4.Text = "19";

            cell4.Append(cellValue4);

            row2.Append(cell3);
            row2.Append(cell4);

            Row row3 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell5 = new Cell(){ CellReference = "A3", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue5 = new CellValue();
            cellValue5.Text = "8";

            cell5.Append(cellValue5);

            Cell cell6 = new Cell(){ CellReference = "B3", StyleIndex = 7U };
            CellValue cellValue6 = new CellValue();
            cellValue6.Text = "13";

            cell6.Append(cellValue6);

            row3.Append(cell5);
            row3.Append(cell6);

            Row row4 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell7 = new Cell(){ CellReference = "A4", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue7 = new CellValue();
            cellValue7.Text = "11";

            cell7.Append(cellValue7);

            Cell cell8 = new Cell(){ CellReference = "B4", StyleIndex = 7U };
            CellValue cellValue8 = new CellValue();
            cellValue8.Text = "33";

            cell8.Append(cellValue8);

            row4.Append(cell7);
            row4.Append(cell8);

            Row row5 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell9 = new Cell(){ CellReference = "A5", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue9 = new CellValue();
            cellValue9.Text = "30";

            cell9.Append(cellValue9);

            Cell cell10 = new Cell(){ CellReference = "B5", StyleIndex = 7U };
            CellValue cellValue10 = new CellValue();
            cellValue10.Text = "65";

            cell10.Append(cellValue10);

            row5.Append(cell9);
            row5.Append(cell10);

            sheetData1.Append(row1);
            sheetData1.Append(row2);
            sheetData1.Append(row3);
            sheetData1.Append(row4);
            sheetData1.Append(row5);
            PhoneticProperties phoneticProperties1 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins1 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            S.Drawing drawing1 = new S.Drawing(){ Id = "rId2" };

            WorksheetExtensionList worksheetExtensionList1 = new WorksheetExtensionList();

            WorksheetExtension worksheetExtension1 = new WorksheetExtension(){ Uri = "{7E03D99C-DC04-49d9-9315-930204A7B6E9}" };
            worksheetExtension1.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineReferences timelineReferences1 = new X15.TimelineReferences();
            X15.TimelineReference timelineReference1 = new X15.TimelineReference(){ Id = "rId3" };

            timelineReferences1.Append(timelineReference1);

            worksheetExtension1.Append(timelineReferences1);

            worksheetExtensionList1.Append(worksheetExtension1);

            worksheet1.Append(sheetDimension1);
            worksheet1.Append(sheetViews1);
            worksheet1.Append(sheetFormatProperties1);
            worksheet1.Append(columns1);
            worksheet1.Append(sheetData1);
            worksheet1.Append(phoneticProperties1);
            worksheet1.Append(pageMargins1);
            worksheet1.Append(drawing1);
            worksheet1.Append(worksheetExtensionList1);

            worksheetPart1.Worksheet = worksheet1;
        }

        // Generates content of timeLinePart1.
        private static void GenerateTimeLinePart1Content(TimeLinePart timeLinePart1)
        {
            X15.Timelines timelines1 = new X15.Timelines(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x" }  };
            timelines1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            timelines1.AddNamespaceDeclaration("x", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");
            X15.Timeline timeline1 = new X15.Timeline(){ Name = "DeliveryDate 10", Cache = "NativeTimeline_DeliveryDate4", Caption = "ShowTimeLevel1", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline2 = new X15.Timeline(){ Name = "DeliveryDate 11", Cache = "NativeTimeline_DeliveryDate4", Caption = "ShowTimeLevel2", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-06T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelines1.Append(timeline1);
            timelines1.Append(timeline2);

            timeLinePart1.Timelines = timelines1;
        }

        // Generates content of drawingsPart1.
        private static void GenerateDrawingsPart1Content(DrawingsPart drawingsPart1)
        {
            Xdr.WorksheetDrawing worksheetDrawing1 = new Xdr.WorksheetDrawing();
            worksheetDrawing1.AddNamespaceDeclaration("xdr", "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing");
            worksheetDrawing1.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            Xdr.TwoCellAnchor twoCellAnchor1 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker1 = new Xdr.FromMarker();
            Xdr.ColumnId columnId1 = new Xdr.ColumnId();
            columnId1.Text = "2";
            Xdr.ColumnOffset columnOffset1 = new Xdr.ColumnOffset();
            columnOffset1.Text = "185737";
            Xdr.RowId rowId1 = new Xdr.RowId();
            rowId1.Text = "0";
            Xdr.RowOffset rowOffset1 = new Xdr.RowOffset();
            rowOffset1.Text = "0";

            fromMarker1.Append(columnId1);
            fromMarker1.Append(columnOffset1);
            fromMarker1.Append(rowId1);
            fromMarker1.Append(rowOffset1);

            Xdr.ToMarker toMarker1 = new Xdr.ToMarker();
            Xdr.ColumnId columnId2 = new Xdr.ColumnId();
            columnId2.Text = "9";
            Xdr.ColumnOffset columnOffset2 = new Xdr.ColumnOffset();
            columnOffset2.Text = "90487";
            Xdr.RowId rowId2 = new Xdr.RowId();
            rowId2.Text = "14";
            Xdr.RowOffset rowOffset2 = new Xdr.RowOffset();
            rowOffset2.Text = "76200";

            toMarker1.Append(columnId2);
            toMarker1.Append(columnOffset2);
            toMarker1.Append(rowId2);
            toMarker1.Append(rowOffset2);

            Xdr.GraphicFrame graphicFrame1 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties1 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties1 = new Xdr.NonVisualDrawingProperties(){ Id = 2U, Name = "Chart 1" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties1 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks1 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties1.Append(graphicFrameLocks1);

            nonVisualGraphicFrameProperties1.Append(nonVisualDrawingProperties1);
            nonVisualGraphicFrameProperties1.Append(nonVisualGraphicFrameDrawingProperties1);

            Xdr.Transform transform1 = new Xdr.Transform();
            A.Offset offset1 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents1 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform1.Append(offset1);
            transform1.Append(extents1);

            A.Graphic graphic1 = new A.Graphic();

            A.GraphicData graphicData1 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference1 = new C.ChartReference(){ Id = "rId1" };
            chartReference1.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData1.Append(chartReference1);

            graphic1.Append(graphicData1);

            graphicFrame1.Append(nonVisualGraphicFrameProperties1);
            graphicFrame1.Append(transform1);
            graphicFrame1.Append(graphic1);
            Xdr.ClientData clientData1 = new Xdr.ClientData();

            twoCellAnchor1.Append(fromMarker1);
            twoCellAnchor1.Append(toMarker1);
            twoCellAnchor1.Append(graphicFrame1);
            twoCellAnchor1.Append(clientData1);

            Xdr.TwoCellAnchor twoCellAnchor2 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker2 = new Xdr.FromMarker();
            Xdr.ColumnId columnId3 = new Xdr.ColumnId();
            columnId3.Text = "2";
            Xdr.ColumnOffset columnOffset3 = new Xdr.ColumnOffset();
            columnOffset3.Text = "200025";
            Xdr.RowId rowId3 = new Xdr.RowId();
            rowId3.Text = "14";
            Xdr.RowOffset rowOffset3 = new Xdr.RowOffset();
            rowOffset3.Text = "147637";

            fromMarker2.Append(columnId3);
            fromMarker2.Append(columnOffset3);
            fromMarker2.Append(rowId3);
            fromMarker2.Append(rowOffset3);

            Xdr.ToMarker toMarker2 = new Xdr.ToMarker();
            Xdr.ColumnId columnId4 = new Xdr.ColumnId();
            columnId4.Text = "7";
            Xdr.ColumnOffset columnOffset4 = new Xdr.ColumnOffset();
            columnOffset4.Text = "476250";
            Xdr.RowId rowId4 = new Xdr.RowId();
            rowId4.Text = "29";
            Xdr.RowOffset rowOffset4 = new Xdr.RowOffset();
            rowOffset4.Text = "33337";

            toMarker2.Append(columnId4);
            toMarker2.Append(columnOffset4);
            toMarker2.Append(rowId4);
            toMarker2.Append(rowOffset4);

            Xdr.GraphicFrame graphicFrame2 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties2 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties2 = new Xdr.NonVisualDrawingProperties(){ Id = 3U, Name = "グラフ 2" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties2 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks2 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties2.Append(graphicFrameLocks2);

            nonVisualGraphicFrameProperties2.Append(nonVisualDrawingProperties2);
            nonVisualGraphicFrameProperties2.Append(nonVisualGraphicFrameDrawingProperties2);

            Xdr.Transform transform2 = new Xdr.Transform();
            A.Offset offset2 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents2 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform2.Append(offset2);
            transform2.Append(extents2);

            A.Graphic graphic2 = new A.Graphic();

            A.GraphicData graphicData2 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference2 = new C.ChartReference(){ Id = "rId2" };
            chartReference2.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference2.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData2.Append(chartReference2);

            graphic2.Append(graphicData2);

            graphicFrame2.Append(nonVisualGraphicFrameProperties2);
            graphicFrame2.Append(transform2);
            graphicFrame2.Append(graphic2);
            Xdr.ClientData clientData2 = new Xdr.ClientData();

            twoCellAnchor2.Append(fromMarker2);
            twoCellAnchor2.Append(toMarker2);
            twoCellAnchor2.Append(graphicFrame2);
            twoCellAnchor2.Append(clientData2);

            Xdr.TwoCellAnchor twoCellAnchor3 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker3 = new Xdr.FromMarker();
            Xdr.ColumnId columnId5 = new Xdr.ColumnId();
            columnId5.Text = "10";
            Xdr.ColumnOffset columnOffset5 = new Xdr.ColumnOffset();
            columnOffset5.Text = "9525";
            Xdr.RowId rowId5 = new Xdr.RowId();
            rowId5.Text = "0";
            Xdr.RowOffset rowOffset5 = new Xdr.RowOffset();
            rowOffset5.Text = "171450";

            fromMarker3.Append(columnId5);
            fromMarker3.Append(columnOffset5);
            fromMarker3.Append(rowId5);
            fromMarker3.Append(rowOffset5);

            Xdr.ToMarker toMarker3 = new Xdr.ToMarker();
            Xdr.ColumnId columnId6 = new Xdr.ColumnId();
            columnId6.Text = "13";
            Xdr.ColumnOffset columnOffset6 = new Xdr.ColumnOffset();
            columnOffset6.Text = "742950";
            Xdr.RowId rowId6 = new Xdr.RowId();
            rowId6.Text = "7";
            Xdr.RowOffset rowOffset6 = new Xdr.RowOffset();
            rowOffset6.Text = "28575";

            toMarker3.Append(columnId6);
            toMarker3.Append(columnOffset6);
            toMarker3.Append(rowId6);
            toMarker3.Append(rowOffset6);

            AlternateContent alternateContent2 = new AlternateContent();
            alternateContent2.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent2.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice2 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame3 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties3 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties3 = new Xdr.NonVisualDrawingProperties(){ Id = 4U, Name = "DeliveryDate 10" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties3 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties3.Append(nonVisualDrawingProperties3);
            nonVisualGraphicFrameProperties3.Append(nonVisualGraphicFrameDrawingProperties3);

            Xdr.Transform transform3 = new Xdr.Transform();
            A.Offset offset3 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents3 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform3.Append(offset3);
            transform3.Append(extents3);

            A.Graphic graphic3 = new A.Graphic();

            A.GraphicData graphicData3 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer1 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 10" };
            timeSlicer1.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData3.Append(timeSlicer1);

            graphic3.Append(graphicData3);

            graphicFrame3.Append(nonVisualGraphicFrameProperties3);
            graphicFrame3.Append(transform3);
            graphicFrame3.Append(graphic3);

            alternateContentChoice2.Append(graphicFrame3);

            AlternateContentFallback alternateContentFallback1 = new AlternateContentFallback();
            alternateContentFallback1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback1.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape1 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties1 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties4 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties1 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks1 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties1.Append(shapeLocks1);

            nonVisualShapeProperties1.Append(nonVisualDrawingProperties4);
            nonVisualShapeProperties1.Append(nonVisualShapeDrawingProperties1);

            Xdr.ShapeProperties shapeProperties1 = new Xdr.ShapeProperties();

            A.Transform2D transform2D1 = new A.Transform2D();
            A.Offset offset4 = new A.Offset(){ X = 8610600L, Y = 171450L };
            A.Extents extents4 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D1.Append(offset4);
            transform2D1.Append(extents4);

            A.PresetGeometry presetGeometry1 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList1 = new A.AdjustValueList();

            presetGeometry1.Append(adjustValueList1);

            A.SolidFill solidFill1 = new A.SolidFill();
            A.PresetColor presetColor1 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill1.Append(presetColor1);

            A.Outline outline1 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill2 = new A.SolidFill();
            A.PresetColor presetColor2 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill2.Append(presetColor2);

            outline1.Append(solidFill2);

            shapeProperties1.Append(transform2D1);
            shapeProperties1.Append(presetGeometry1);
            shapeProperties1.Append(solidFill1);
            shapeProperties1.Append(outline1);

            Xdr.TextBody textBody1 = new Xdr.TextBody();
            A.BodyProperties bodyProperties1 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle1 = new A.ListStyle();

            A.Paragraph paragraph1 = new A.Paragraph();

            A.Run run1 = new A.Run();
            A.RunProperties runProperties1 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text1 = new A.Text();
            text1.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run1.Append(runProperties1);
            run1.Append(text1);

            paragraph1.Append(run1);

            textBody1.Append(bodyProperties1);
            textBody1.Append(listStyle1);
            textBody1.Append(paragraph1);

            shape1.Append(nonVisualShapeProperties1);
            shape1.Append(shapeProperties1);
            shape1.Append(textBody1);

            alternateContentFallback1.Append(shape1);

            alternateContent2.Append(alternateContentChoice2);
            alternateContent2.Append(alternateContentFallback1);
            Xdr.ClientData clientData3 = new Xdr.ClientData();

            twoCellAnchor3.Append(fromMarker3);
            twoCellAnchor3.Append(toMarker3);
            twoCellAnchor3.Append(alternateContent2);
            twoCellAnchor3.Append(clientData3);

            Xdr.TwoCellAnchor twoCellAnchor4 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker4 = new Xdr.FromMarker();
            Xdr.ColumnId columnId7 = new Xdr.ColumnId();
            columnId7.Text = "10";
            Xdr.ColumnOffset columnOffset7 = new Xdr.ColumnOffset();
            columnOffset7.Text = "9525";
            Xdr.RowId rowId7 = new Xdr.RowId();
            rowId7.Text = "8";
            Xdr.RowOffset rowOffset7 = new Xdr.RowOffset();
            rowOffset7.Text = "57150";

            fromMarker4.Append(columnId7);
            fromMarker4.Append(columnOffset7);
            fromMarker4.Append(rowId7);
            fromMarker4.Append(rowOffset7);

            Xdr.ToMarker toMarker4 = new Xdr.ToMarker();
            Xdr.ColumnId columnId8 = new Xdr.ColumnId();
            columnId8.Text = "13";
            Xdr.ColumnOffset columnOffset8 = new Xdr.ColumnOffset();
            columnOffset8.Text = "866775";
            Xdr.RowId rowId8 = new Xdr.RowId();
            rowId8.Text = "14";
            Xdr.RowOffset rowOffset8 = new Xdr.RowOffset();
            rowOffset8.Text = "85725";

            toMarker4.Append(columnId8);
            toMarker4.Append(columnOffset8);
            toMarker4.Append(rowId8);
            toMarker4.Append(rowOffset8);

            AlternateContent alternateContent3 = new AlternateContent();
            alternateContent3.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent3.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice3 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame4 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties4 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties5 = new Xdr.NonVisualDrawingProperties(){ Id = 5U, Name = "DeliveryDate 11" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties4 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties4.Append(nonVisualDrawingProperties5);
            nonVisualGraphicFrameProperties4.Append(nonVisualGraphicFrameDrawingProperties4);

            Xdr.Transform transform4 = new Xdr.Transform();
            A.Offset offset5 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents5 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform4.Append(offset5);
            transform4.Append(extents5);

            A.Graphic graphic4 = new A.Graphic();

            A.GraphicData graphicData4 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer2 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 11" };
            timeSlicer2.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData4.Append(timeSlicer2);

            graphic4.Append(graphicData4);

            graphicFrame4.Append(nonVisualGraphicFrameProperties4);
            graphicFrame4.Append(transform4);
            graphicFrame4.Append(graphic4);

            alternateContentChoice3.Append(graphicFrame4);

            AlternateContentFallback alternateContentFallback2 = new AlternateContentFallback();

            Xdr.Shape shape2 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties2 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties6 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties2 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks2 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties2.Append(shapeLocks2);

            nonVisualShapeProperties2.Append(nonVisualDrawingProperties6);
            nonVisualShapeProperties2.Append(nonVisualShapeDrawingProperties2);

            Xdr.ShapeProperties shapeProperties2 = new Xdr.ShapeProperties();

            A.Transform2D transform2D2 = new A.Transform2D();
            A.Offset offset6 = new A.Offset(){ X = 10296525L, Y = 1428750L };
            A.Extents extents6 = new A.Extents(){ Cx = 3829050L, Cy = 1057275L };

            transform2D2.Append(offset6);
            transform2D2.Append(extents6);

            A.PresetGeometry presetGeometry2 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList2 = new A.AdjustValueList();

            presetGeometry2.Append(adjustValueList2);

            A.SolidFill solidFill3 = new A.SolidFill();
            A.PresetColor presetColor3 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill3.Append(presetColor3);

            A.Outline outline2 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill4 = new A.SolidFill();
            A.PresetColor presetColor4 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill4.Append(presetColor4);

            outline2.Append(solidFill4);

            shapeProperties2.Append(transform2D2);
            shapeProperties2.Append(presetGeometry2);
            shapeProperties2.Append(solidFill3);
            shapeProperties2.Append(outline2);

            Xdr.TextBody textBody2 = new Xdr.TextBody();
            A.BodyProperties bodyProperties2 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle2 = new A.ListStyle();

            A.Paragraph paragraph2 = new A.Paragraph();

            A.Run run2 = new A.Run();
            A.RunProperties runProperties2 = new A.RunProperties(){ Language = "ja-JP", AlternativeLanguage = "en-US", FontSize = 1100 };
            A.Text text2 = new A.Text();
            text2.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run2.Append(runProperties2);
            run2.Append(text2);

            paragraph2.Append(run2);

            textBody2.Append(bodyProperties2);
            textBody2.Append(listStyle2);
            textBody2.Append(paragraph2);

            shape2.Append(nonVisualShapeProperties2);
            shape2.Append(shapeProperties2);
            shape2.Append(textBody2);

            alternateContentFallback2.Append(shape2);

            alternateContent3.Append(alternateContentChoice3);
            alternateContent3.Append(alternateContentFallback2);
            Xdr.ClientData clientData4 = new Xdr.ClientData();

            twoCellAnchor4.Append(fromMarker4);
            twoCellAnchor4.Append(toMarker4);
            twoCellAnchor4.Append(alternateContent3);
            twoCellAnchor4.Append(clientData4);

            worksheetDrawing1.Append(twoCellAnchor1);
            worksheetDrawing1.Append(twoCellAnchor2);
            worksheetDrawing1.Append(twoCellAnchor3);
            worksheetDrawing1.Append(twoCellAnchor4);

            drawingsPart1.WorksheetDrawing = worksheetDrawing1;
        }

        // Generates content of chartPart1.
        private static void GenerateChartPart1Content(ChartPart chartPart1)
        {
            C.ChartSpace chartSpace1 = new C.ChartSpace();
            chartSpace1.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace1.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date19041 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage1 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners1 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent4 = new AlternateContent();
            alternateContent4.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice4 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice4.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style1 = new C14.Style(){ Val = 102 };

            alternateContentChoice4.Append(style1);

            AlternateContentFallback alternateContentFallback3 = new AlternateContentFallback();
            C.Style style2 = new C.Style(){ Val = 2 };

            alternateContentFallback3.Append(style2);

            alternateContent4.Append(alternateContentChoice4);
            alternateContent4.Append(alternateContentFallback3);

            C.PivotSource pivotSource1 = new C.PivotSource();
            C.PivotTableName pivotTableName1 = new C.PivotTableName();
            pivotTableName1.Text = "[GeneratedDocument.xlsx]ShowTimeLevel!PivotTable1";
            C.FormatId formatId1 = new C.FormatId(){ Val = 14U };

            pivotSource1.Append(pivotTableName1);
            pivotSource1.Append(formatId1);

            C.Chart chart1 = new C.Chart();

            C.Title title1 = new C.Title();
            C.Overlay overlay1 = new C.Overlay(){ Val = false };

            title1.Append(overlay1);
            C.AutoTitleDeleted autoTitleDeleted1 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats1 = new C.PivotFormats();

            C.PivotFormat pivotFormat1 = new C.PivotFormat();
            C.Index index1 = new C.Index(){ Val = 0U };

            C.Marker marker1 = new C.Marker();
            C.Symbol symbol1 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker1.Append(symbol1);

            pivotFormat1.Append(index1);
            pivotFormat1.Append(marker1);

            C.PivotFormat pivotFormat2 = new C.PivotFormat();
            C.Index index2 = new C.Index(){ Val = 1U };

            C.Marker marker2 = new C.Marker();
            C.Symbol symbol2 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker2.Append(symbol2);

            pivotFormat2.Append(index2);
            pivotFormat2.Append(marker2);

            C.PivotFormat pivotFormat3 = new C.PivotFormat();
            C.Index index3 = new C.Index(){ Val = 2U };

            C.Marker marker3 = new C.Marker();
            C.Symbol symbol3 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker3.Append(symbol3);

            pivotFormat3.Append(index3);
            pivotFormat3.Append(marker3);

            C.PivotFormat pivotFormat4 = new C.PivotFormat();
            C.Index index4 = new C.Index(){ Val = 3U };

            C.Marker marker4 = new C.Marker();
            C.Symbol symbol4 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker4.Append(symbol4);

            pivotFormat4.Append(index4);
            pivotFormat4.Append(marker4);

            C.PivotFormat pivotFormat5 = new C.PivotFormat();
            C.Index index5 = new C.Index(){ Val = 4U };

            C.Marker marker5 = new C.Marker();
            C.Symbol symbol5 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker5.Append(symbol5);

            pivotFormat5.Append(index5);
            pivotFormat5.Append(marker5);

            pivotFormats1.Append(pivotFormat1);
            pivotFormats1.Append(pivotFormat2);
            pivotFormats1.Append(pivotFormat3);
            pivotFormats1.Append(pivotFormat4);
            pivotFormats1.Append(pivotFormat5);

            C.PlotArea plotArea1 = new C.PlotArea();
            C.Layout layout1 = new C.Layout();

            C.PieChart pieChart1 = new C.PieChart();
            C.VaryColors varyColors1 = new C.VaryColors(){ Val = true };

            C.PieChartSeries pieChartSeries1 = new C.PieChartSeries();
            C.Index index6 = new C.Index(){ Val = 0U };
            C.Order order1 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText1 = new C.SeriesText();

            C.StringReference stringReference1 = new C.StringReference();
            C.Formula formula1 = new C.Formula();
            formula1.Text = "ShowTimeLevel!$B$1";

            C.StringCache stringCache1 = new C.StringCache();
            C.PointCount pointCount1 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint1 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue1 = new C.NumericValue();
            numericValue1.Text = "Total";

            stringPoint1.Append(numericValue1);

            stringCache1.Append(pointCount1);
            stringCache1.Append(stringPoint1);

            stringReference1.Append(formula1);
            stringReference1.Append(stringCache1);

            seriesText1.Append(stringReference1);

            C.CategoryAxisData categoryAxisData1 = new C.CategoryAxisData();

            C.StringReference stringReference2 = new C.StringReference();
            C.Formula formula2 = new C.Formula();
            formula2.Text = "ShowTimeLevel!$A$2:$A$5";

            C.StringCache stringCache2 = new C.StringCache();
            C.PointCount pointCount2 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint2 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue2 = new C.NumericValue();
            numericValue2.Text = "product_A";

            stringPoint2.Append(numericValue2);

            C.StringPoint stringPoint3 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue3 = new C.NumericValue();
            numericValue3.Text = "product_D";

            stringPoint3.Append(numericValue3);

            C.StringPoint stringPoint4 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue4 = new C.NumericValue();
            numericValue4.Text = "product_E";

            stringPoint4.Append(numericValue4);

            stringCache2.Append(pointCount2);
            stringCache2.Append(stringPoint2);
            stringCache2.Append(stringPoint3);
            stringCache2.Append(stringPoint4);

            stringReference2.Append(formula2);
            stringReference2.Append(stringCache2);

            categoryAxisData1.Append(stringReference2);

            C.Values values1 = new C.Values();

            C.NumberReference numberReference1 = new C.NumberReference();
            C.Formula formula3 = new C.Formula();
            formula3.Text = "ShowTimeLevel!$B$2:$B$5";

            C.NumberingCache numberingCache1 = new C.NumberingCache();
            C.FormatCode formatCode1 = new C.FormatCode();
            formatCode1.Text = "General";
            C.PointCount pointCount3 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint1 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue5 = new C.NumericValue();
            numericValue5.Text = "19";

            numericPoint1.Append(numericValue5);

            C.NumericPoint numericPoint2 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue6 = new C.NumericValue();
            numericValue6.Text = "13";

            numericPoint2.Append(numericValue6);

            C.NumericPoint numericPoint3 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue7 = new C.NumericValue();
            numericValue7.Text = "33";

            numericPoint3.Append(numericValue7);

            numberingCache1.Append(formatCode1);
            numberingCache1.Append(pointCount3);
            numberingCache1.Append(numericPoint1);
            numberingCache1.Append(numericPoint2);
            numberingCache1.Append(numericPoint3);

            numberReference1.Append(formula3);
            numberReference1.Append(numberingCache1);

            values1.Append(numberReference1);

            pieChartSeries1.Append(index6);
            pieChartSeries1.Append(order1);
            pieChartSeries1.Append(seriesText1);
            pieChartSeries1.Append(categoryAxisData1);
            pieChartSeries1.Append(values1);

            C.DataLabels dataLabels1 = new C.DataLabels();
            C.ShowLegendKey showLegendKey1 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue1 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName1 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName1 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent1 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize1 = new C.ShowBubbleSize(){ Val = false };
            C.ShowLeaderLines showLeaderLines1 = new C.ShowLeaderLines(){ Val = true };

            dataLabels1.Append(showLegendKey1);
            dataLabels1.Append(showValue1);
            dataLabels1.Append(showCategoryName1);
            dataLabels1.Append(showSeriesName1);
            dataLabels1.Append(showPercent1);
            dataLabels1.Append(showBubbleSize1);
            dataLabels1.Append(showLeaderLines1);
            C.FirstSliceAngle firstSliceAngle1 = new C.FirstSliceAngle(){ Val = (UInt16Value)0U };

            pieChart1.Append(varyColors1);
            pieChart1.Append(pieChartSeries1);
            pieChart1.Append(dataLabels1);
            pieChart1.Append(firstSliceAngle1);

            plotArea1.Append(layout1);
            plotArea1.Append(pieChart1);

            C.Legend legend1 = new C.Legend();
            C.LegendPosition legendPosition1 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay2 = new C.Overlay(){ Val = false };

            legend1.Append(legendPosition1);
            legend1.Append(overlay2);
            C.PlotVisibleOnly plotVisibleOnly1 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs1 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum1 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart1.Append(title1);
            chart1.Append(autoTitleDeleted1);
            chart1.Append(pivotFormats1);
            chart1.Append(plotArea1);
            chart1.Append(legend1);
            chart1.Append(plotVisibleOnly1);
            chart1.Append(displayBlanksAs1);
            chart1.Append(showDataLabelsOverMaximum1);

            C.PrintSettings printSettings1 = new C.PrintSettings();
            C.HeaderFooter headerFooter1 = new C.HeaderFooter();
            C.PageMargins pageMargins2 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup1 = new C.PageSetup();

            printSettings1.Append(headerFooter1);
            printSettings1.Append(pageMargins2);
            printSettings1.Append(pageSetup1);

            C.ChartSpaceExtensionList chartSpaceExtensionList1 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList1.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension1 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension1.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions1 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter1 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories1 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData1 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries1 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible1 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions1.Append(dropZoneFilter1);
            pivotOptions1.Append(dropZoneCategories1);
            pivotOptions1.Append(dropZoneData1);
            pivotOptions1.Append(dropZoneSeries1);
            pivotOptions1.Append(dropZonesVisible1);

            chartSpaceExtension1.Append(pivotOptions1);

            chartSpaceExtensionList1.Append(chartSpaceExtension1);

            chartSpace1.Append(date19041);
            chartSpace1.Append(editingLanguage1);
            chartSpace1.Append(roundedCorners1);
            chartSpace1.Append(alternateContent4);
            chartSpace1.Append(pivotSource1);
            chartSpace1.Append(chart1);
            chartSpace1.Append(printSettings1);
            chartSpace1.Append(chartSpaceExtensionList1);

            chartPart1.ChartSpace = chartSpace1;
        }

        // Generates content of chartPart2.
        private static void GenerateChartPart2Content(ChartPart chartPart2)
        {
            C.ChartSpace chartSpace2 = new C.ChartSpace();
            chartSpace2.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace2.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace2.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date19042 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage2 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners2 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent5 = new AlternateContent();
            alternateContent5.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice5 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice5.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style3 = new C14.Style(){ Val = 101 };

            alternateContentChoice5.Append(style3);

            AlternateContentFallback alternateContentFallback4 = new AlternateContentFallback();
            C.Style style4 = new C.Style(){ Val = 1 };

            alternateContentFallback4.Append(style4);

            alternateContent5.Append(alternateContentChoice5);
            alternateContent5.Append(alternateContentFallback4);

            C.PivotSource pivotSource2 = new C.PivotSource();
            C.PivotTableName pivotTableName2 = new C.PivotTableName();
            pivotTableName2.Text = "[GeneratedDocument.xlsx]ShowTimeLevel!PivotTable1";
            C.FormatId formatId2 = new C.FormatId(){ Val = 13U };

            pivotSource2.Append(pivotTableName2);
            pivotSource2.Append(formatId2);

            C.Chart chart2 = new C.Chart();

            C.Title title2 = new C.Title();
            C.Overlay overlay3 = new C.Overlay(){ Val = false };

            title2.Append(overlay3);
            C.AutoTitleDeleted autoTitleDeleted2 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats2 = new C.PivotFormats();

            C.PivotFormat pivotFormat6 = new C.PivotFormat();
            C.Index index7 = new C.Index(){ Val = 0U };

            C.ShapeProperties shapeProperties3 = new C.ShapeProperties();

            A.SolidFill solidFill5 = new A.SolidFill();

            A.SchemeColor schemeColor1 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint1 = new A.Tint(){ Val = 100000 };

            schemeColor1.Append(tint1);

            solidFill5.Append(schemeColor1);

            A.Outline outline3 = new A.Outline();
            A.NoFill noFill1 = new A.NoFill();

            outline3.Append(noFill1);
            A.EffectList effectList1 = new A.EffectList();

            shapeProperties3.Append(solidFill5);
            shapeProperties3.Append(outline3);
            shapeProperties3.Append(effectList1);

            C.Marker marker6 = new C.Marker();
            C.Symbol symbol6 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker6.Append(symbol6);

            pivotFormat6.Append(index7);
            pivotFormat6.Append(shapeProperties3);
            pivotFormat6.Append(marker6);

            C.PivotFormat pivotFormat7 = new C.PivotFormat();
            C.Index index8 = new C.Index(){ Val = 1U };

            C.ShapeProperties shapeProperties4 = new C.ShapeProperties();

            A.SolidFill solidFill6 = new A.SolidFill();

            A.SchemeColor schemeColor2 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent2 };
            A.Tint tint2 = new A.Tint(){ Val = 100000 };

            schemeColor2.Append(tint2);

            solidFill6.Append(schemeColor2);

            A.Outline outline4 = new A.Outline();
            A.NoFill noFill2 = new A.NoFill();

            outline4.Append(noFill2);
            A.EffectList effectList2 = new A.EffectList();

            shapeProperties4.Append(solidFill6);
            shapeProperties4.Append(outline4);
            shapeProperties4.Append(effectList2);

            C.Marker marker7 = new C.Marker();
            C.Symbol symbol7 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker7.Append(symbol7);

            pivotFormat7.Append(index8);
            pivotFormat7.Append(shapeProperties4);
            pivotFormat7.Append(marker7);

            C.PivotFormat pivotFormat8 = new C.PivotFormat();
            C.Index index9 = new C.Index(){ Val = 2U };

            C.Marker marker8 = new C.Marker();
            C.Symbol symbol8 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker8.Append(symbol8);

            pivotFormat8.Append(index9);
            pivotFormat8.Append(marker8);

            C.PivotFormat pivotFormat9 = new C.PivotFormat();
            C.Index index10 = new C.Index(){ Val = 3U };

            C.Marker marker9 = new C.Marker();
            C.Symbol symbol9 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker9.Append(symbol9);

            pivotFormat9.Append(index10);
            pivotFormat9.Append(marker9);

            C.PivotFormat pivotFormat10 = new C.PivotFormat();
            C.Index index11 = new C.Index(){ Val = 4U };

            C.Marker marker10 = new C.Marker();
            C.Symbol symbol10 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker10.Append(symbol10);

            pivotFormat10.Append(index11);
            pivotFormat10.Append(marker10);

            C.PivotFormat pivotFormat11 = new C.PivotFormat();
            C.Index index12 = new C.Index(){ Val = 5U };

            C.Marker marker11 = new C.Marker();
            C.Symbol symbol11 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker11.Append(symbol11);

            pivotFormat11.Append(index12);
            pivotFormat11.Append(marker11);

            C.PivotFormat pivotFormat12 = new C.PivotFormat();
            C.Index index13 = new C.Index(){ Val = 6U };

            C.Marker marker12 = new C.Marker();
            C.Symbol symbol12 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker12.Append(symbol12);

            pivotFormat12.Append(index13);
            pivotFormat12.Append(marker12);

            C.PivotFormat pivotFormat13 = new C.PivotFormat();
            C.Index index14 = new C.Index(){ Val = 7U };

            C.Marker marker13 = new C.Marker();
            C.Symbol symbol13 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker13.Append(symbol13);

            pivotFormat13.Append(index14);
            pivotFormat13.Append(marker13);

            C.PivotFormat pivotFormat14 = new C.PivotFormat();
            C.Index index15 = new C.Index(){ Val = 8U };

            C.Marker marker14 = new C.Marker();
            C.Symbol symbol14 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker14.Append(symbol14);

            pivotFormat14.Append(index15);
            pivotFormat14.Append(marker14);

            C.PivotFormat pivotFormat15 = new C.PivotFormat();
            C.Index index16 = new C.Index(){ Val = 9U };

            C.Marker marker15 = new C.Marker();
            C.Symbol symbol15 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker15.Append(symbol15);

            pivotFormat15.Append(index16);
            pivotFormat15.Append(marker15);

            C.PivotFormat pivotFormat16 = new C.PivotFormat();
            C.Index index17 = new C.Index(){ Val = 10U };

            C.Marker marker16 = new C.Marker();
            C.Symbol symbol16 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker16.Append(symbol16);

            pivotFormat16.Append(index17);
            pivotFormat16.Append(marker16);

            C.PivotFormat pivotFormat17 = new C.PivotFormat();
            C.Index index18 = new C.Index(){ Val = 11U };

            C.Marker marker17 = new C.Marker();
            C.Symbol symbol17 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker17.Append(symbol17);

            pivotFormat17.Append(index18);
            pivotFormat17.Append(marker17);

            C.PivotFormat pivotFormat18 = new C.PivotFormat();
            C.Index index19 = new C.Index(){ Val = 12U };

            C.Marker marker18 = new C.Marker();
            C.Symbol symbol18 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker18.Append(symbol18);

            pivotFormat18.Append(index19);
            pivotFormat18.Append(marker18);

            C.PivotFormat pivotFormat19 = new C.PivotFormat();
            C.Index index20 = new C.Index(){ Val = 13U };

            C.Marker marker19 = new C.Marker();
            C.Symbol symbol19 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker19.Append(symbol19);

            pivotFormat19.Append(index20);
            pivotFormat19.Append(marker19);

            C.PivotFormat pivotFormat20 = new C.PivotFormat();
            C.Index index21 = new C.Index(){ Val = 14U };

            C.ShapeProperties shapeProperties5 = new C.ShapeProperties();

            A.SolidFill solidFill7 = new A.SolidFill();

            A.SchemeColor schemeColor3 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint3 = new A.Tint(){ Val = 100000 };

            schemeColor3.Append(tint3);

            solidFill7.Append(schemeColor3);

            A.Outline outline5 = new A.Outline();
            A.NoFill noFill3 = new A.NoFill();

            outline5.Append(noFill3);
            A.EffectList effectList3 = new A.EffectList();

            shapeProperties5.Append(solidFill7);
            shapeProperties5.Append(outline5);
            shapeProperties5.Append(effectList3);

            C.Marker marker20 = new C.Marker();
            C.Symbol symbol20 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker20.Append(symbol20);

            pivotFormat20.Append(index21);
            pivotFormat20.Append(shapeProperties5);
            pivotFormat20.Append(marker20);

            C.PivotFormat pivotFormat21 = new C.PivotFormat();
            C.Index index22 = new C.Index(){ Val = 15U };

            C.ShapeProperties shapeProperties6 = new C.ShapeProperties();

            A.SolidFill solidFill8 = new A.SolidFill();

            A.SchemeColor schemeColor4 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint4 = new A.Tint(){ Val = 100000 };

            schemeColor4.Append(tint4);

            solidFill8.Append(schemeColor4);

            A.Outline outline6 = new A.Outline();
            A.NoFill noFill4 = new A.NoFill();

            outline6.Append(noFill4);
            A.EffectList effectList4 = new A.EffectList();

            shapeProperties6.Append(solidFill8);
            shapeProperties6.Append(outline6);
            shapeProperties6.Append(effectList4);

            C.Marker marker21 = new C.Marker();
            C.Symbol symbol21 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker21.Append(symbol21);

            pivotFormat21.Append(index22);
            pivotFormat21.Append(shapeProperties6);
            pivotFormat21.Append(marker21);

            C.PivotFormat pivotFormat22 = new C.PivotFormat();
            C.Index index23 = new C.Index(){ Val = 16U };

            C.ShapeProperties shapeProperties7 = new C.ShapeProperties();

            A.SolidFill solidFill9 = new A.SolidFill();

            A.SchemeColor schemeColor5 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint5 = new A.Tint(){ Val = 100000 };

            schemeColor5.Append(tint5);

            solidFill9.Append(schemeColor5);

            A.Outline outline7 = new A.Outline();
            A.NoFill noFill5 = new A.NoFill();

            outline7.Append(noFill5);
            A.EffectList effectList5 = new A.EffectList();

            shapeProperties7.Append(solidFill9);
            shapeProperties7.Append(outline7);
            shapeProperties7.Append(effectList5);

            C.Marker marker22 = new C.Marker();
            C.Symbol symbol22 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker22.Append(symbol22);

            pivotFormat22.Append(index23);
            pivotFormat22.Append(shapeProperties7);
            pivotFormat22.Append(marker22);

            C.PivotFormat pivotFormat23 = new C.PivotFormat();
            C.Index index24 = new C.Index(){ Val = 17U };

            C.ShapeProperties shapeProperties8 = new C.ShapeProperties();

            A.SolidFill solidFill10 = new A.SolidFill();

            A.SchemeColor schemeColor6 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint6 = new A.Tint(){ Val = 100000 };

            schemeColor6.Append(tint6);

            solidFill10.Append(schemeColor6);

            A.Outline outline8 = new A.Outline();
            A.NoFill noFill6 = new A.NoFill();

            outline8.Append(noFill6);
            A.EffectList effectList6 = new A.EffectList();

            shapeProperties8.Append(solidFill10);
            shapeProperties8.Append(outline8);
            shapeProperties8.Append(effectList6);

            C.Marker marker23 = new C.Marker();
            C.Symbol symbol23 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker23.Append(symbol23);

            pivotFormat23.Append(index24);
            pivotFormat23.Append(shapeProperties8);
            pivotFormat23.Append(marker23);

            pivotFormats2.Append(pivotFormat6);
            pivotFormats2.Append(pivotFormat7);
            pivotFormats2.Append(pivotFormat8);
            pivotFormats2.Append(pivotFormat9);
            pivotFormats2.Append(pivotFormat10);
            pivotFormats2.Append(pivotFormat11);
            pivotFormats2.Append(pivotFormat12);
            pivotFormats2.Append(pivotFormat13);
            pivotFormats2.Append(pivotFormat14);
            pivotFormats2.Append(pivotFormat15);
            pivotFormats2.Append(pivotFormat16);
            pivotFormats2.Append(pivotFormat17);
            pivotFormats2.Append(pivotFormat18);
            pivotFormats2.Append(pivotFormat19);
            pivotFormats2.Append(pivotFormat20);
            pivotFormats2.Append(pivotFormat21);
            pivotFormats2.Append(pivotFormat22);
            pivotFormats2.Append(pivotFormat23);

            C.PlotArea plotArea2 = new C.PlotArea();
            C.Layout layout2 = new C.Layout();

            C.BarChart barChart1 = new C.BarChart();
            C.BarDirection barDirection1 = new C.BarDirection(){ Val = C.BarDirectionValues.Column };
            C.BarGrouping barGrouping1 = new C.BarGrouping(){ Val = C.BarGroupingValues.Clustered };
            C.VaryColors varyColors2 = new C.VaryColors(){ Val = false };

            C.BarChartSeries barChartSeries1 = new C.BarChartSeries();
            C.Index index25 = new C.Index(){ Val = 0U };
            C.Order order2 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText2 = new C.SeriesText();

            C.StringReference stringReference3 = new C.StringReference();
            C.Formula formula4 = new C.Formula();
            formula4.Text = "ShowTimeLevel!$B$1";

            C.StringCache stringCache3 = new C.StringCache();
            C.PointCount pointCount4 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint5 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue8 = new C.NumericValue();
            numericValue8.Text = "Total";

            stringPoint5.Append(numericValue8);

            stringCache3.Append(pointCount4);
            stringCache3.Append(stringPoint5);

            stringReference3.Append(formula4);
            stringReference3.Append(stringCache3);

            seriesText2.Append(stringReference3);

            C.ChartShapeProperties chartShapeProperties1 = new C.ChartShapeProperties();

            A.SolidFill solidFill11 = new A.SolidFill();

            A.SchemeColor schemeColor7 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint7 = new A.Tint(){ Val = 100000 };

            schemeColor7.Append(tint7);

            solidFill11.Append(schemeColor7);

            A.Outline outline9 = new A.Outline();
            A.NoFill noFill7 = new A.NoFill();

            outline9.Append(noFill7);
            A.EffectList effectList7 = new A.EffectList();

            chartShapeProperties1.Append(solidFill11);
            chartShapeProperties1.Append(outline9);
            chartShapeProperties1.Append(effectList7);
            C.InvertIfNegative invertIfNegative1 = new C.InvertIfNegative(){ Val = false };

            C.CategoryAxisData categoryAxisData2 = new C.CategoryAxisData();

            C.StringReference stringReference4 = new C.StringReference();
            C.Formula formula5 = new C.Formula();
            formula5.Text = "ShowTimeLevel!$A$2:$A$5";

            C.StringCache stringCache4 = new C.StringCache();
            C.PointCount pointCount5 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint6 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue9 = new C.NumericValue();
            numericValue9.Text = "product_A";

            stringPoint6.Append(numericValue9);

            C.StringPoint stringPoint7 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue10 = new C.NumericValue();
            numericValue10.Text = "product_D";

            stringPoint7.Append(numericValue10);

            C.StringPoint stringPoint8 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue11 = new C.NumericValue();
            numericValue11.Text = "product_E";

            stringPoint8.Append(numericValue11);

            stringCache4.Append(pointCount5);
            stringCache4.Append(stringPoint6);
            stringCache4.Append(stringPoint7);
            stringCache4.Append(stringPoint8);

            stringReference4.Append(formula5);
            stringReference4.Append(stringCache4);

            categoryAxisData2.Append(stringReference4);

            C.Values values2 = new C.Values();

            C.NumberReference numberReference2 = new C.NumberReference();
            C.Formula formula6 = new C.Formula();
            formula6.Text = "ShowTimeLevel!$B$2:$B$5";

            C.NumberingCache numberingCache2 = new C.NumberingCache();
            C.FormatCode formatCode2 = new C.FormatCode();
            formatCode2.Text = "General";
            C.PointCount pointCount6 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint4 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue12 = new C.NumericValue();
            numericValue12.Text = "19";

            numericPoint4.Append(numericValue12);

            C.NumericPoint numericPoint5 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue13 = new C.NumericValue();
            numericValue13.Text = "13";

            numericPoint5.Append(numericValue13);

            C.NumericPoint numericPoint6 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue14 = new C.NumericValue();
            numericValue14.Text = "33";

            numericPoint6.Append(numericValue14);

            numberingCache2.Append(formatCode2);
            numberingCache2.Append(pointCount6);
            numberingCache2.Append(numericPoint4);
            numberingCache2.Append(numericPoint5);
            numberingCache2.Append(numericPoint6);

            numberReference2.Append(formula6);
            numberReference2.Append(numberingCache2);

            values2.Append(numberReference2);

            barChartSeries1.Append(index25);
            barChartSeries1.Append(order2);
            barChartSeries1.Append(seriesText2);
            barChartSeries1.Append(chartShapeProperties1);
            barChartSeries1.Append(invertIfNegative1);
            barChartSeries1.Append(categoryAxisData2);
            barChartSeries1.Append(values2);

            C.DataLabels dataLabels2 = new C.DataLabels();
            C.ShowLegendKey showLegendKey2 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue2 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName2 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName2 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent2 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize2 = new C.ShowBubbleSize(){ Val = false };

            dataLabels2.Append(showLegendKey2);
            dataLabels2.Append(showValue2);
            dataLabels2.Append(showCategoryName2);
            dataLabels2.Append(showSeriesName2);
            dataLabels2.Append(showPercent2);
            dataLabels2.Append(showBubbleSize2);
            C.GapWidth gapWidth1 = new C.GapWidth(){ Val = (UInt16Value)219U };
            C.Overlap overlap1 = new C.Overlap(){ Val = -27 };
            C.AxisId axisId1 = new C.AxisId(){ Val = 209981120U };
            C.AxisId axisId2 = new C.AxisId(){ Val = 209981512U };

            barChart1.Append(barDirection1);
            barChart1.Append(barGrouping1);
            barChart1.Append(varyColors2);
            barChart1.Append(barChartSeries1);
            barChart1.Append(dataLabels2);
            barChart1.Append(gapWidth1);
            barChart1.Append(overlap1);
            barChart1.Append(axisId1);
            barChart1.Append(axisId2);

            C.CategoryAxis categoryAxis1 = new C.CategoryAxis();
            C.AxisId axisId3 = new C.AxisId(){ Val = 209981120U };

            C.Scaling scaling1 = new C.Scaling();
            C.Orientation orientation1 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling1.Append(orientation1);
            C.Delete delete1 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition1 = new C.AxisPosition(){ Val = C.AxisPositionValues.Bottom };
            C.NumberingFormat numberingFormat1 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = false };
            C.MajorTickMark majorTickMark1 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark1 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition1 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties2 = new C.ChartShapeProperties();
            A.NoFill noFill8 = new A.NoFill();

            A.Outline outline10 = new A.Outline();
            A.NoFill noFill9 = new A.NoFill();

            outline10.Append(noFill9);
            A.EffectList effectList8 = new A.EffectList();

            chartShapeProperties2.Append(noFill8);
            chartShapeProperties2.Append(outline10);
            chartShapeProperties2.Append(effectList8);

            C.TextProperties textProperties1 = new C.TextProperties();
            A.BodyProperties bodyProperties3 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle3 = new A.ListStyle();

            A.Paragraph paragraph3 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties1 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties1 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill12 = new A.SolidFill();

            A.SchemeColor schemeColor8 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation1 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset1 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor8.Append(luminanceModulation1);
            schemeColor8.Append(luminanceOffset1);

            solidFill12.Append(schemeColor8);
            A.LatinFont latinFont1 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont1 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont1 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties1.Append(solidFill12);
            defaultRunProperties1.Append(latinFont1);
            defaultRunProperties1.Append(eastAsianFont1);
            defaultRunProperties1.Append(complexScriptFont1);

            paragraphProperties1.Append(defaultRunProperties1);
            A.EndParagraphRunProperties endParagraphRunProperties1 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph3.Append(paragraphProperties1);
            paragraph3.Append(endParagraphRunProperties1);

            textProperties1.Append(bodyProperties3);
            textProperties1.Append(listStyle3);
            textProperties1.Append(paragraph3);
            C.CrossingAxis crossingAxis1 = new C.CrossingAxis(){ Val = 209981512U };
            C.Crosses crosses1 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.AutoLabeled autoLabeled1 = new C.AutoLabeled(){ Val = true };
            C.LabelAlignment labelAlignment1 = new C.LabelAlignment(){ Val = C.LabelAlignmentValues.Center };
            C.LabelOffset labelOffset1 = new C.LabelOffset(){ Val = (UInt16Value)100U };
            C.NoMultiLevelLabels noMultiLevelLabels1 = new C.NoMultiLevelLabels(){ Val = false };

            categoryAxis1.Append(axisId3);
            categoryAxis1.Append(scaling1);
            categoryAxis1.Append(delete1);
            categoryAxis1.Append(axisPosition1);
            categoryAxis1.Append(numberingFormat1);
            categoryAxis1.Append(majorTickMark1);
            categoryAxis1.Append(minorTickMark1);
            categoryAxis1.Append(tickLabelPosition1);
            categoryAxis1.Append(chartShapeProperties2);
            categoryAxis1.Append(textProperties1);
            categoryAxis1.Append(crossingAxis1);
            categoryAxis1.Append(crosses1);
            categoryAxis1.Append(autoLabeled1);
            categoryAxis1.Append(labelAlignment1);
            categoryAxis1.Append(labelOffset1);
            categoryAxis1.Append(noMultiLevelLabels1);

            C.ValueAxis valueAxis1 = new C.ValueAxis();
            C.AxisId axisId4 = new C.AxisId(){ Val = 209981512U };

            C.Scaling scaling2 = new C.Scaling();
            C.Orientation orientation2 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling2.Append(orientation2);
            C.Delete delete2 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition2 = new C.AxisPosition(){ Val = C.AxisPositionValues.Left };

            C.MajorGridlines majorGridlines1 = new C.MajorGridlines();

            C.ChartShapeProperties chartShapeProperties3 = new C.ChartShapeProperties();

            A.Outline outline11 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill13 = new A.SolidFill();

            A.SchemeColor schemeColor9 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation2 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset2 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor9.Append(luminanceModulation2);
            schemeColor9.Append(luminanceOffset2);

            solidFill13.Append(schemeColor9);
            A.Round round1 = new A.Round();

            outline11.Append(solidFill13);
            outline11.Append(round1);
            A.EffectList effectList9 = new A.EffectList();

            chartShapeProperties3.Append(outline11);
            chartShapeProperties3.Append(effectList9);

            majorGridlines1.Append(chartShapeProperties3);
            C.NumberingFormat numberingFormat2 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = true };
            C.MajorTickMark majorTickMark2 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark2 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition2 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties4 = new C.ChartShapeProperties();
            A.NoFill noFill10 = new A.NoFill();

            A.Outline outline12 = new A.Outline();
            A.NoFill noFill11 = new A.NoFill();

            outline12.Append(noFill11);
            A.EffectList effectList10 = new A.EffectList();

            chartShapeProperties4.Append(noFill10);
            chartShapeProperties4.Append(outline12);
            chartShapeProperties4.Append(effectList10);

            C.TextProperties textProperties2 = new C.TextProperties();
            A.BodyProperties bodyProperties4 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle4 = new A.ListStyle();

            A.Paragraph paragraph4 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties2 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties2 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill14 = new A.SolidFill();

            A.SchemeColor schemeColor10 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation3 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset3 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor10.Append(luminanceModulation3);
            schemeColor10.Append(luminanceOffset3);

            solidFill14.Append(schemeColor10);
            A.LatinFont latinFont2 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont2 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont2 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties2.Append(solidFill14);
            defaultRunProperties2.Append(latinFont2);
            defaultRunProperties2.Append(eastAsianFont2);
            defaultRunProperties2.Append(complexScriptFont2);

            paragraphProperties2.Append(defaultRunProperties2);
            A.EndParagraphRunProperties endParagraphRunProperties2 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph4.Append(paragraphProperties2);
            paragraph4.Append(endParagraphRunProperties2);

            textProperties2.Append(bodyProperties4);
            textProperties2.Append(listStyle4);
            textProperties2.Append(paragraph4);
            C.CrossingAxis crossingAxis2 = new C.CrossingAxis(){ Val = 209981120U };
            C.Crosses crosses2 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.CrossBetween crossBetween1 = new C.CrossBetween(){ Val = C.CrossBetweenValues.Between };

            valueAxis1.Append(axisId4);
            valueAxis1.Append(scaling2);
            valueAxis1.Append(delete2);
            valueAxis1.Append(axisPosition2);
            valueAxis1.Append(majorGridlines1);
            valueAxis1.Append(numberingFormat2);
            valueAxis1.Append(majorTickMark2);
            valueAxis1.Append(minorTickMark2);
            valueAxis1.Append(tickLabelPosition2);
            valueAxis1.Append(chartShapeProperties4);
            valueAxis1.Append(textProperties2);
            valueAxis1.Append(crossingAxis2);
            valueAxis1.Append(crosses2);
            valueAxis1.Append(crossBetween1);

            C.ShapeProperties shapeProperties9 = new C.ShapeProperties();

            A.SolidFill solidFill15 = new A.SolidFill();
            A.SchemeColor schemeColor11 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill15.Append(schemeColor11);

            A.Outline outline13 = new A.Outline();
            A.NoFill noFill12 = new A.NoFill();

            outline13.Append(noFill12);
            A.EffectList effectList11 = new A.EffectList();

            shapeProperties9.Append(solidFill15);
            shapeProperties9.Append(outline13);
            shapeProperties9.Append(effectList11);

            plotArea2.Append(layout2);
            plotArea2.Append(barChart1);
            plotArea2.Append(categoryAxis1);
            plotArea2.Append(valueAxis1);
            plotArea2.Append(shapeProperties9);

            C.Legend legend2 = new C.Legend();
            C.LegendPosition legendPosition2 = new C.LegendPosition(){ Val = C.LegendPositionValues.Bottom };
            C.Overlay overlay4 = new C.Overlay(){ Val = false };

            C.ChartShapeProperties chartShapeProperties5 = new C.ChartShapeProperties();
            A.NoFill noFill13 = new A.NoFill();

            A.Outline outline14 = new A.Outline();
            A.NoFill noFill14 = new A.NoFill();

            outline14.Append(noFill14);
            A.EffectList effectList12 = new A.EffectList();

            chartShapeProperties5.Append(noFill13);
            chartShapeProperties5.Append(outline14);
            chartShapeProperties5.Append(effectList12);

            C.TextProperties textProperties3 = new C.TextProperties();
            A.BodyProperties bodyProperties5 = new A.BodyProperties(){ Rotation = 0, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle5 = new A.ListStyle();

            A.Paragraph paragraph5 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties3 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties3 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill16 = new A.SolidFill();

            A.SchemeColor schemeColor12 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation4 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset4 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor12.Append(luminanceModulation4);
            schemeColor12.Append(luminanceOffset4);

            solidFill16.Append(schemeColor12);
            A.LatinFont latinFont3 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont3 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont3 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties3.Append(solidFill16);
            defaultRunProperties3.Append(latinFont3);
            defaultRunProperties3.Append(eastAsianFont3);
            defaultRunProperties3.Append(complexScriptFont3);

            paragraphProperties3.Append(defaultRunProperties3);
            A.EndParagraphRunProperties endParagraphRunProperties3 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph5.Append(paragraphProperties3);
            paragraph5.Append(endParagraphRunProperties3);

            textProperties3.Append(bodyProperties5);
            textProperties3.Append(listStyle5);
            textProperties3.Append(paragraph5);

            legend2.Append(legendPosition2);
            legend2.Append(overlay4);
            legend2.Append(chartShapeProperties5);
            legend2.Append(textProperties3);
            C.PlotVisibleOnly plotVisibleOnly2 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs2 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum2 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart2.Append(title2);
            chart2.Append(autoTitleDeleted2);
            chart2.Append(pivotFormats2);
            chart2.Append(plotArea2);
            chart2.Append(legend2);
            chart2.Append(plotVisibleOnly2);
            chart2.Append(displayBlanksAs2);
            chart2.Append(showDataLabelsOverMaximum2);

            C.ShapeProperties shapeProperties10 = new C.ShapeProperties();

            A.SolidFill solidFill17 = new A.SolidFill();
            A.SchemeColor schemeColor13 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill17.Append(schemeColor13);

            A.Outline outline15 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill18 = new A.SolidFill();

            A.SchemeColor schemeColor14 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation5 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset5 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor14.Append(luminanceModulation5);
            schemeColor14.Append(luminanceOffset5);

            solidFill18.Append(schemeColor14);
            A.Round round2 = new A.Round();

            outline15.Append(solidFill18);
            outline15.Append(round2);
            A.EffectList effectList13 = new A.EffectList();

            shapeProperties10.Append(solidFill17);
            shapeProperties10.Append(outline15);
            shapeProperties10.Append(effectList13);

            C.TextProperties textProperties4 = new C.TextProperties();
            A.BodyProperties bodyProperties6 = new A.BodyProperties();
            A.ListStyle listStyle6 = new A.ListStyle();

            A.Paragraph paragraph6 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties4 = new A.ParagraphProperties();
            A.DefaultRunProperties defaultRunProperties4 = new A.DefaultRunProperties();

            paragraphProperties4.Append(defaultRunProperties4);
            A.EndParagraphRunProperties endParagraphRunProperties4 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph6.Append(paragraphProperties4);
            paragraph6.Append(endParagraphRunProperties4);

            textProperties4.Append(bodyProperties6);
            textProperties4.Append(listStyle6);
            textProperties4.Append(paragraph6);

            C.PrintSettings printSettings2 = new C.PrintSettings();
            C.HeaderFooter headerFooter2 = new C.HeaderFooter();
            C.PageMargins pageMargins3 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup2 = new C.PageSetup();

            printSettings2.Append(headerFooter2);
            printSettings2.Append(pageMargins3);
            printSettings2.Append(pageSetup2);

            C.ChartSpaceExtensionList chartSpaceExtensionList2 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList2.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList2.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension2 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension2.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions2 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter2 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories2 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData2 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries2 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible2 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions2.Append(dropZoneFilter2);
            pivotOptions2.Append(dropZoneCategories2);
            pivotOptions2.Append(dropZoneData2);
            pivotOptions2.Append(dropZoneSeries2);
            pivotOptions2.Append(dropZonesVisible2);

            chartSpaceExtension2.Append(pivotOptions2);

            chartSpaceExtensionList2.Append(chartSpaceExtension2);

            chartSpace2.Append(date19042);
            chartSpace2.Append(editingLanguage2);
            chartSpace2.Append(roundedCorners2);
            chartSpace2.Append(alternateContent5);
            chartSpace2.Append(pivotSource2);
            chartSpace2.Append(chart2);
            chartSpace2.Append(shapeProperties10);
            chartSpace2.Append(textProperties4);
            chartSpace2.Append(printSettings2);
            chartSpace2.Append(chartSpaceExtensionList2);

            chartPart2.ChartSpace = chartSpace2;
        }

        // Generates content of pivotTablePart1.
        private static void GeneratePivotTablePart1Content(PivotTablePart pivotTablePart1)
        {
            PivotTableDefinition pivotTableDefinition1 = new PivotTableDefinition(){ Name = "PivotTable1", CacheId = 1U, ApplyNumberFormats = false, ApplyBorderFormats = false, ApplyFontFormats = false, ApplyPatternFormats = false, ApplyAlignmentFormats = false, ApplyWidthHeightFormats = true, DataCaption = "Values", UpdatedVersion = 5, MinRefreshableVersion = 5, UseAutoFormatting = true, ItemPrintTitles = true, CreatedVersion = 4, Indent = 0U, Outline = true, OutlineData = true, MultipleFieldFilters = false, ChartFormat = 15U };
            Location location1 = new Location(){ Reference = "A1:B5", FirstHeaderRow = 1U, FirstDataRow = 1U, FirstDataColumn = 1U };

            PivotFields pivotFields1 = new PivotFields(){ Count = 7U };

            PivotField pivotField1 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items1 = new Items(){ Count = 15U };
            Item item1 = new Item(){ Index = 0U };
            Item item2 = new Item(){ Index = 1U };
            Item item3 = new Item(){ Index = 2U };
            Item item4 = new Item(){ Index = 3U };
            Item item5 = new Item(){ Index = 4U };
            Item item6 = new Item(){ Index = 5U };
            Item item7 = new Item(){ Index = 6U };
            Item item8 = new Item(){ Index = 7U };
            Item item9 = new Item(){ Index = 8U };
            Item item10 = new Item(){ Index = 9U };
            Item item11 = new Item(){ Index = 10U };
            Item item12 = new Item(){ Index = 11U };
            Item item13 = new Item(){ Index = 12U };
            Item item14 = new Item(){ Index = 13U };
            Item item15 = new Item(){ ItemType = ItemValues.Default };

            items1.Append(item1);
            items1.Append(item2);
            items1.Append(item3);
            items1.Append(item4);
            items1.Append(item5);
            items1.Append(item6);
            items1.Append(item7);
            items1.Append(item8);
            items1.Append(item9);
            items1.Append(item10);
            items1.Append(item11);
            items1.Append(item12);
            items1.Append(item13);
            items1.Append(item14);
            items1.Append(item15);

            pivotField1.Append(items1);

            PivotField pivotField2 = new PivotField(){ Axis = PivotTableAxisValues.AxisRow, ShowAll = false };

            Items items2 = new Items(){ Count = 11U };
            Item item16 = new Item(){ Index = 0U };
            Item item17 = new Item(){ Missing = true, Index = 4U };
            Item item18 = new Item(){ Missing = true, Index = 3U };
            Item item19 = new Item(){ Index = 1U };
            Item item20 = new Item(){ Index = 2U };
            Item item21 = new Item(){ Missing = true, Index = 9U };
            Item item22 = new Item(){ Missing = true, Index = 8U };
            Item item23 = new Item(){ Missing = true, Index = 7U };
            Item item24 = new Item(){ Missing = true, Index = 6U };
            Item item25 = new Item(){ Missing = true, Index = 5U };
            Item item26 = new Item(){ ItemType = ItemValues.Default };

            items2.Append(item16);
            items2.Append(item17);
            items2.Append(item18);
            items2.Append(item19);
            items2.Append(item20);
            items2.Append(item21);
            items2.Append(item22);
            items2.Append(item23);
            items2.Append(item24);
            items2.Append(item25);
            items2.Append(item26);

            pivotField2.Append(items2);
            PivotField pivotField3 = new PivotField(){ DataField = true, ShowAll = false };
            PivotField pivotField4 = new PivotField(){ ShowAll = false };

            PivotField pivotField5 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items3 = new Items(){ Count = 5U };
            Item item27 = new Item(){ Index = 0U };
            Item item28 = new Item(){ Index = 1U };
            Item item29 = new Item(){ Index = 3U };
            Item item30 = new Item(){ Index = 2U };
            Item item31 = new Item(){ ItemType = ItemValues.Default };

            items3.Append(item27);
            items3.Append(item28);
            items3.Append(item29);
            items3.Append(item30);
            items3.Append(item31);

            pivotField5.Append(items3);
            PivotField pivotField6 = new PivotField(){ ShowAll = false };

            PivotField pivotField7 = new PivotField(){ ShowAll = false, DefaultSubtotal = false };

            Items items4 = new Items(){ Count = 5U };
            Item item32 = new Item(){ Index = 0U };
            Item item33 = new Item(){ Index = 1U };
            Item item34 = new Item(){ Index = 2U };
            Item item35 = new Item(){ Index = 3U };
            Item item36 = new Item(){ Index = 4U };

            items4.Append(item32);
            items4.Append(item33);
            items4.Append(item34);
            items4.Append(item35);
            items4.Append(item36);

            pivotField7.Append(items4);

            pivotFields1.Append(pivotField1);
            pivotFields1.Append(pivotField2);
            pivotFields1.Append(pivotField3);
            pivotFields1.Append(pivotField4);
            pivotFields1.Append(pivotField5);
            pivotFields1.Append(pivotField6);
            pivotFields1.Append(pivotField7);

            RowFields rowFields1 = new RowFields(){ Count = 1U };
            Field field1 = new Field(){ Index = 1 };

            rowFields1.Append(field1);

            RowItems rowItems1 = new RowItems(){ Count = 4U };

            RowItem rowItem1 = new RowItem();
            MemberPropertyIndex memberPropertyIndex1 = new MemberPropertyIndex();

            rowItem1.Append(memberPropertyIndex1);

            RowItem rowItem2 = new RowItem();
            MemberPropertyIndex memberPropertyIndex2 = new MemberPropertyIndex(){ Val = 3 };

            rowItem2.Append(memberPropertyIndex2);

            RowItem rowItem3 = new RowItem();
            MemberPropertyIndex memberPropertyIndex3 = new MemberPropertyIndex(){ Val = 4 };

            rowItem3.Append(memberPropertyIndex3);

            RowItem rowItem4 = new RowItem(){ ItemType = ItemValues.Grand };
            MemberPropertyIndex memberPropertyIndex4 = new MemberPropertyIndex();

            rowItem4.Append(memberPropertyIndex4);

            rowItems1.Append(rowItem1);
            rowItems1.Append(rowItem2);
            rowItems1.Append(rowItem3);
            rowItems1.Append(rowItem4);

            ColumnItems columnItems1 = new ColumnItems(){ Count = 1U };
            RowItem rowItem5 = new RowItem();

            columnItems1.Append(rowItem5);

            DataFields dataFields1 = new DataFields(){ Count = 1U };
            DataField dataField1 = new DataField(){ Name = "Sum of Quantity", Field = 2U, BaseField = 0, BaseItem = 0U };

            dataFields1.Append(dataField1);

            ChartFormats chartFormats1 = new ChartFormats(){ Count = 11U };

            ChartFormat chartFormat1 = new ChartFormat(){ Chart = 4U, Format = 0U, Series = true };

            PivotArea pivotArea1 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences1 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference1 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem1 = new FieldItem(){ Val = 0U };

            pivotAreaReference1.Append(fieldItem1);

            pivotAreaReferences1.Append(pivotAreaReference1);

            pivotArea1.Append(pivotAreaReferences1);

            chartFormat1.Append(pivotArea1);

            ChartFormat chartFormat2 = new ChartFormat(){ Chart = 5U, Format = 2U, Series = true };

            PivotArea pivotArea2 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences2 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference2 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem2 = new FieldItem(){ Val = 0U };

            pivotAreaReference2.Append(fieldItem2);

            pivotAreaReferences2.Append(pivotAreaReference2);

            pivotArea2.Append(pivotAreaReferences2);

            chartFormat2.Append(pivotArea2);

            ChartFormat chartFormat3 = new ChartFormat(){ Chart = 6U, Format = 0U, Series = true };

            PivotArea pivotArea3 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences3 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference3 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem3 = new FieldItem(){ Val = 0U };

            pivotAreaReference3.Append(fieldItem3);

            pivotAreaReferences3.Append(pivotAreaReference3);

            pivotArea3.Append(pivotAreaReferences3);

            chartFormat3.Append(pivotArea3);

            ChartFormat chartFormat4 = new ChartFormat(){ Chart = 7U, Format = 14U, Series = true };

            PivotArea pivotArea4 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences4 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference4 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem4 = new FieldItem(){ Val = 0U };

            pivotAreaReference4.Append(fieldItem4);

            pivotAreaReferences4.Append(pivotAreaReference4);

            pivotArea4.Append(pivotAreaReferences4);

            chartFormat4.Append(pivotArea4);

            ChartFormat chartFormat5 = new ChartFormat(){ Chart = 8U, Format = 1U, Series = true };

            PivotArea pivotArea5 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences5 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference5 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem5 = new FieldItem(){ Val = 0U };

            pivotAreaReference5.Append(fieldItem5);

            pivotAreaReferences5.Append(pivotAreaReference5);

            pivotArea5.Append(pivotAreaReferences5);

            chartFormat5.Append(pivotArea5);

            ChartFormat chartFormat6 = new ChartFormat(){ Chart = 9U, Format = 15U, Series = true };

            PivotArea pivotArea6 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences6 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference6 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem6 = new FieldItem(){ Val = 0U };

            pivotAreaReference6.Append(fieldItem6);

            pivotAreaReferences6.Append(pivotAreaReference6);

            pivotArea6.Append(pivotAreaReferences6);

            chartFormat6.Append(pivotArea6);

            ChartFormat chartFormat7 = new ChartFormat(){ Chart = 10U, Format = 2U, Series = true };

            PivotArea pivotArea7 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences7 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference7 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem7 = new FieldItem(){ Val = 0U };

            pivotAreaReference7.Append(fieldItem7);

            pivotAreaReferences7.Append(pivotAreaReference7);

            pivotArea7.Append(pivotAreaReferences7);

            chartFormat7.Append(pivotArea7);

            ChartFormat chartFormat8 = new ChartFormat(){ Chart = 11U, Format = 16U, Series = true };

            PivotArea pivotArea8 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences8 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference8 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem8 = new FieldItem(){ Val = 0U };

            pivotAreaReference8.Append(fieldItem8);

            pivotAreaReferences8.Append(pivotAreaReference8);

            pivotArea8.Append(pivotAreaReferences8);

            chartFormat8.Append(pivotArea8);

            ChartFormat chartFormat9 = new ChartFormat(){ Chart = 12U, Format = 3U, Series = true };

            PivotArea pivotArea9 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences9 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference9 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem9 = new FieldItem(){ Val = 0U };

            pivotAreaReference9.Append(fieldItem9);

            pivotAreaReferences9.Append(pivotAreaReference9);

            pivotArea9.Append(pivotAreaReferences9);

            chartFormat9.Append(pivotArea9);

            ChartFormat chartFormat10 = new ChartFormat(){ Chart = 13U, Format = 17U, Series = true };

            PivotArea pivotArea10 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences10 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference10 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem10 = new FieldItem(){ Val = 0U };

            pivotAreaReference10.Append(fieldItem10);

            pivotAreaReferences10.Append(pivotAreaReference10);

            pivotArea10.Append(pivotAreaReferences10);

            chartFormat10.Append(pivotArea10);

            ChartFormat chartFormat11 = new ChartFormat(){ Chart = 14U, Format = 4U, Series = true };

            PivotArea pivotArea11 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences11 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference11 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem11 = new FieldItem(){ Val = 0U };

            pivotAreaReference11.Append(fieldItem11);

            pivotAreaReferences11.Append(pivotAreaReference11);

            pivotArea11.Append(pivotAreaReferences11);

            chartFormat11.Append(pivotArea11);

            chartFormats1.Append(chartFormat1);
            chartFormats1.Append(chartFormat2);
            chartFormats1.Append(chartFormat3);
            chartFormats1.Append(chartFormat4);
            chartFormats1.Append(chartFormat5);
            chartFormats1.Append(chartFormat6);
            chartFormats1.Append(chartFormat7);
            chartFormats1.Append(chartFormat8);
            chartFormats1.Append(chartFormat9);
            chartFormats1.Append(chartFormat10);
            chartFormats1.Append(chartFormat11);
            PivotTableStyle pivotTableStyle1 = new PivotTableStyle(){ Name = "PivotStyleLight16", ShowRowHeaders = true, ShowColumnHeaders = true, ShowRowStripes = false, ShowColumnStripes = false, ShowLastColumn = true };

            PivotTableDefinitionExtensionList pivotTableDefinitionExtensionList1 = new PivotTableDefinitionExtensionList();

            PivotTableDefinitionExtension pivotTableDefinitionExtension1 = new PivotTableDefinitionExtension(){ Uri = "{962EF5D1-5CA2-4c93-8EF4-DBF5C05439D2}" };
            pivotTableDefinitionExtension1.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");

            X14.PivotTableDefinition pivotTableDefinition2 = new X14.PivotTableDefinition(){ HideValuesRow = true };
            pivotTableDefinition2.AddNamespaceDeclaration("xm", "http://schemas.microsoft.com/office/excel/2006/main");

            pivotTableDefinitionExtension1.Append(pivotTableDefinition2);

            pivotTableDefinitionExtensionList1.Append(pivotTableDefinitionExtension1);

            pivotTableDefinition1.Append(location1);
            pivotTableDefinition1.Append(pivotFields1);
            pivotTableDefinition1.Append(rowFields1);
            pivotTableDefinition1.Append(rowItems1);
            pivotTableDefinition1.Append(columnItems1);
            pivotTableDefinition1.Append(dataFields1);
            pivotTableDefinition1.Append(chartFormats1);
            pivotTableDefinition1.Append(pivotTableStyle1);
            pivotTableDefinition1.Append(pivotTableDefinitionExtensionList1);

            pivotTablePart1.PivotTableDefinition = pivotTableDefinition1;
        }

        // Generates content of pivotTableCacheDefinitionPart1.
        private static void GeneratePivotTableCacheDefinitionPart1Content(PivotTableCacheDefinitionPart pivotTableCacheDefinitionPart1)
        {
            PivotCacheDefinition pivotCacheDefinition1 = new PivotCacheDefinition(){ Id = "rId1", RefreshedBy = "Masaki Tamura (Pasona Tech)", RefreshedDate = 40946.731165509256D, CreatedVersion = 4, RefreshedVersion = 5, MinRefreshableVersion = 3, RecordCount = 4U };
            pivotCacheDefinition1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            CacheSource cacheSource1 = new CacheSource(){ Type = SourceValues.Worksheet };
            WorksheetSource worksheetSource1 = new WorksheetSource(){ Name = "DataTable1" };

            cacheSource1.Append(worksheetSource1);

            CacheFields cacheFields1 = new CacheFields(){ Count = 7U };

            CacheField cacheField1 = new CacheField(){ Name = "Date", NumberFormatId = 14U };

            SharedItems sharedItems1 = new SharedItems(){ ContainsSemiMixedTypes = false, ContainsNonDate = false, ContainsDate = true, ContainsString = false, MinDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T15:40:41Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), MaxDate = System.Xml.XmlConvert.ToDateTime("2002-12-30T20:50:43Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), Count = 4U };
            DateTimeItem dateTimeItem1 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-01T15:40:41Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem2 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-02T03:35:07Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem3 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2002-12-30T06:43:15Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem4 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2002-12-30T20:50:43Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            sharedItems1.Append(dateTimeItem1);
            sharedItems1.Append(dateTimeItem2);
            sharedItems1.Append(dateTimeItem3);
            sharedItems1.Append(dateTimeItem4);

            FieldGroup fieldGroup1 = new FieldGroup(){ ParentId = 6U, Base = 0U };
            RangeProperties rangeProperties1 = new RangeProperties(){ GroupBy = GroupByValues.Months, StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T15:40:41Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2002-12-30T20:50:43Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            GroupItems groupItems1 = new GroupItems(){ Count = 14U };
            StringItem stringItem1 = new StringItem(){ Val = "<2000/01/01" };
            StringItem stringItem2 = new StringItem(){ Val = "1月" };
            StringItem stringItem3 = new StringItem(){ Val = "2月" };
            StringItem stringItem4 = new StringItem(){ Val = "3月" };
            StringItem stringItem5 = new StringItem(){ Val = "4月" };
            StringItem stringItem6 = new StringItem(){ Val = "5月" };
            StringItem stringItem7 = new StringItem(){ Val = "6月" };
            StringItem stringItem8 = new StringItem(){ Val = "7月" };
            StringItem stringItem9 = new StringItem(){ Val = "8月" };
            StringItem stringItem10 = new StringItem(){ Val = "9月" };
            StringItem stringItem11 = new StringItem(){ Val = "10月" };
            StringItem stringItem12 = new StringItem(){ Val = "11月" };
            StringItem stringItem13 = new StringItem(){ Val = "12月" };
            StringItem stringItem14 = new StringItem(){ Val = ">2002/12/30" };

            groupItems1.Append(stringItem1);
            groupItems1.Append(stringItem2);
            groupItems1.Append(stringItem3);
            groupItems1.Append(stringItem4);
            groupItems1.Append(stringItem5);
            groupItems1.Append(stringItem6);
            groupItems1.Append(stringItem7);
            groupItems1.Append(stringItem8);
            groupItems1.Append(stringItem9);
            groupItems1.Append(stringItem10);
            groupItems1.Append(stringItem11);
            groupItems1.Append(stringItem12);
            groupItems1.Append(stringItem13);
            groupItems1.Append(stringItem14);

            fieldGroup1.Append(rangeProperties1);
            fieldGroup1.Append(groupItems1);

            cacheField1.Append(sharedItems1);
            cacheField1.Append(fieldGroup1);

            CacheField cacheField2 = new CacheField(){ Name = "Product", NumberFormatId = 0U };

            SharedItems sharedItems2 = new SharedItems(){ Count = 10U };
            StringItem stringItem15 = new StringItem(){ Val = "product_A" };
            StringItem stringItem16 = new StringItem(){ Val = "product_D" };
            StringItem stringItem17 = new StringItem(){ Val = "product_E" };
            StringItem stringItem18 = new StringItem(){ Val = "product_C", Unused = true };
            StringItem stringItem19 = new StringItem(){ Val = "product_B", Unused = true };
            StringItem stringItem20 = new StringItem(){ Val = "product_J", Unused = true };
            StringItem stringItem21 = new StringItem(){ Val = "product_I", Unused = true };
            StringItem stringItem22 = new StringItem(){ Val = "product_H", Unused = true };
            StringItem stringItem23 = new StringItem(){ Val = "product_G", Unused = true };
            StringItem stringItem24 = new StringItem(){ Val = "product_F", Unused = true };

            sharedItems2.Append(stringItem15);
            sharedItems2.Append(stringItem16);
            sharedItems2.Append(stringItem17);
            sharedItems2.Append(stringItem18);
            sharedItems2.Append(stringItem19);
            sharedItems2.Append(stringItem20);
            sharedItems2.Append(stringItem21);
            sharedItems2.Append(stringItem22);
            sharedItems2.Append(stringItem23);
            sharedItems2.Append(stringItem24);

            cacheField2.Append(sharedItems2);

            CacheField cacheField3 = new CacheField(){ Name = "Quantity", NumberFormatId = 0U };
            SharedItems sharedItems3 = new SharedItems(){ ContainsSemiMixedTypes = false, ContainsString = false, ContainsNumber = true, ContainsInteger = true, MinValue = 4D, MaxValue = 29D };

            cacheField3.Append(sharedItems3);

            CacheField cacheField4 = new CacheField(){ Name = "Price", NumberFormatId = 0U };
            SharedItems sharedItems4 = new SharedItems(){ ContainsSemiMixedTypes = false, ContainsString = false, ContainsNumber = true, ContainsInteger = true, MinValue = 312D, MaxValue = 15990D };

            cacheField4.Append(sharedItems4);

            CacheField cacheField5 = new CacheField(){ Name = "DeliveryDate", NumberFormatId = 14U };

            SharedItems sharedItems5 = new SharedItems(){ ContainsSemiMixedTypes = false, ContainsNonDate = false, ContainsDate = true, ContainsString = false, MinDate = System.Xml.XmlConvert.ToDateTime("2000-01-06T15:40:41Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), MaxDate = System.Xml.XmlConvert.ToDateTime("2003-01-03T06:43:15Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), Count = 4U };
            DateTimeItem dateTimeItem5 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-06T15:40:41Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem6 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-07T03:35:07Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem7 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2003-01-03T06:43:15Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem8 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2002-12-31T20:50:43Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            sharedItems5.Append(dateTimeItem5);
            sharedItems5.Append(dateTimeItem6);
            sharedItems5.Append(dateTimeItem7);
            sharedItems5.Append(dateTimeItem8);

            cacheField5.Append(sharedItems5);

            CacheField cacheField6 = new CacheField(){ Name = "Employee", NumberFormatId = 0U };
            SharedItems sharedItems6 = new SharedItems();

            cacheField6.Append(sharedItems6);

            CacheField cacheField7 = new CacheField(){ Name = "Years", NumberFormatId = 0U, DatabaseField = false };

            FieldGroup fieldGroup2 = new FieldGroup(){ Base = 0U };
            RangeProperties rangeProperties2 = new RangeProperties(){ GroupBy = GroupByValues.Years, StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T15:40:41Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2002-12-30T20:50:43Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            GroupItems groupItems2 = new GroupItems(){ Count = 5U };
            StringItem stringItem25 = new StringItem(){ Val = "<2000/01/01" };
            StringItem stringItem26 = new StringItem(){ Val = "2000年" };
            StringItem stringItem27 = new StringItem(){ Val = "2001年" };
            StringItem stringItem28 = new StringItem(){ Val = "2002年" };
            StringItem stringItem29 = new StringItem(){ Val = ">2002/12/30" };

            groupItems2.Append(stringItem25);
            groupItems2.Append(stringItem26);
            groupItems2.Append(stringItem27);
            groupItems2.Append(stringItem28);
            groupItems2.Append(stringItem29);

            fieldGroup2.Append(rangeProperties2);
            fieldGroup2.Append(groupItems2);

            cacheField7.Append(fieldGroup2);

            cacheFields1.Append(cacheField1);
            cacheFields1.Append(cacheField2);
            cacheFields1.Append(cacheField3);
            cacheFields1.Append(cacheField4);
            cacheFields1.Append(cacheField5);
            cacheFields1.Append(cacheField6);
            cacheFields1.Append(cacheField7);

            PivotCacheDefinitionExtensionList pivotCacheDefinitionExtensionList1 = new PivotCacheDefinitionExtensionList();

            PivotCacheDefinitionExtension pivotCacheDefinitionExtension1 = new PivotCacheDefinitionExtension(){ Uri = "{725AE2AE-9491-48be-B2B4-4EB974FC3084}" };
            pivotCacheDefinitionExtension1.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");
            X14.PivotCacheDefinition pivotCacheDefinition2 = new X14.PivotCacheDefinition(){ PivotCacheId = 2U };

            pivotCacheDefinitionExtension1.Append(pivotCacheDefinition2);

            pivotCacheDefinitionExtensionList1.Append(pivotCacheDefinitionExtension1);

            pivotCacheDefinition1.Append(cacheSource1);
            pivotCacheDefinition1.Append(cacheFields1);
            pivotCacheDefinition1.Append(pivotCacheDefinitionExtensionList1);

            pivotTableCacheDefinitionPart1.PivotCacheDefinition = pivotCacheDefinition1;
        }

        // Generates content of pivotTableCacheRecordsPart1.
        private static void GeneratePivotTableCacheRecordsPart1Content(PivotTableCacheRecordsPart pivotTableCacheRecordsPart1)
        {
            PivotCacheRecords pivotCacheRecords1 = new PivotCacheRecords(){ Count = 4U };
            pivotCacheRecords1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            PivotCacheRecord pivotCacheRecord1 = new PivotCacheRecord();
            FieldItem fieldItem12 = new FieldItem(){ Val = 0U };
            FieldItem fieldItem13 = new FieldItem(){ Val = 0U };
            NumberItem numberItem1 = new NumberItem(){ Val = 19D };
            NumberItem numberItem2 = new NumberItem(){ Val = 2375D };
            FieldItem fieldItem14 = new FieldItem(){ Val = 0U };
            StringItem stringItem30 = new StringItem(){ Val = "sales staff G" };

            pivotCacheRecord1.Append(fieldItem12);
            pivotCacheRecord1.Append(fieldItem13);
            pivotCacheRecord1.Append(numberItem1);
            pivotCacheRecord1.Append(numberItem2);
            pivotCacheRecord1.Append(fieldItem14);
            pivotCacheRecord1.Append(stringItem30);

            PivotCacheRecord pivotCacheRecord2 = new PivotCacheRecord();
            FieldItem fieldItem15 = new FieldItem(){ Val = 1U };
            FieldItem fieldItem16 = new FieldItem(){ Val = 1U };
            NumberItem numberItem3 = new NumberItem(){ Val = 13D };
            NumberItem numberItem4 = new NumberItem(){ Val = 15990D };
            FieldItem fieldItem17 = new FieldItem(){ Val = 1U };
            StringItem stringItem31 = new StringItem(){ Val = "sales staff B" };

            pivotCacheRecord2.Append(fieldItem15);
            pivotCacheRecord2.Append(fieldItem16);
            pivotCacheRecord2.Append(numberItem3);
            pivotCacheRecord2.Append(numberItem4);
            pivotCacheRecord2.Append(fieldItem17);
            pivotCacheRecord2.Append(stringItem31);

            PivotCacheRecord pivotCacheRecord3 = new PivotCacheRecord();
            FieldItem fieldItem18 = new FieldItem(){ Val = 2U };
            FieldItem fieldItem19 = new FieldItem(){ Val = 2U };
            NumberItem numberItem5 = new NumberItem(){ Val = 4D };
            NumberItem numberItem6 = new NumberItem(){ Val = 312D };
            FieldItem fieldItem20 = new FieldItem(){ Val = 2U };
            StringItem stringItem32 = new StringItem(){ Val = "sales staff E" };

            pivotCacheRecord3.Append(fieldItem18);
            pivotCacheRecord3.Append(fieldItem19);
            pivotCacheRecord3.Append(numberItem5);
            pivotCacheRecord3.Append(numberItem6);
            pivotCacheRecord3.Append(fieldItem20);
            pivotCacheRecord3.Append(stringItem32);

            PivotCacheRecord pivotCacheRecord4 = new PivotCacheRecord();
            FieldItem fieldItem21 = new FieldItem(){ Val = 3U };
            FieldItem fieldItem22 = new FieldItem(){ Val = 2U };
            NumberItem numberItem7 = new NumberItem(){ Val = 29D };
            NumberItem numberItem8 = new NumberItem(){ Val = 2262D };
            FieldItem fieldItem23 = new FieldItem(){ Val = 3U };
            StringItem stringItem33 = new StringItem(){ Val = "sales staff E" };

            pivotCacheRecord4.Append(fieldItem21);
            pivotCacheRecord4.Append(fieldItem22);
            pivotCacheRecord4.Append(numberItem7);
            pivotCacheRecord4.Append(numberItem8);
            pivotCacheRecord4.Append(fieldItem23);
            pivotCacheRecord4.Append(stringItem33);

            pivotCacheRecords1.Append(pivotCacheRecord1);
            pivotCacheRecords1.Append(pivotCacheRecord2);
            pivotCacheRecords1.Append(pivotCacheRecord3);
            pivotCacheRecords1.Append(pivotCacheRecord4);

            pivotTableCacheRecordsPart1.PivotCacheRecords = pivotCacheRecords1;
        }

        // Generates content of timeLineCachePart1.
        private static void GenerateTimeLineCachePart1Content(TimeLineCachePart timeLineCachePart1)
        {
            X15.TimelineCacheDefinition timelineCacheDefinition1 = new X15.TimelineCacheDefinition(){ Name = "NativeTimeline_DeliveryDate3", SourceName = "DeliveryDate" };
            timelineCacheDefinition1.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCachePivotTables timelineCachePivotTables1 = new X15.TimelineCachePivotTables();
            X15.TimelineCachePivotTable timelineCachePivotTable1 = new X15.TimelineCachePivotTable(){ TabId = 7U, Name = "PivotTable1" };

            timelineCachePivotTables1.Append(timelineCachePivotTable1);

            X15.TimelineState timelineState1 = new X15.TimelineState(){ MinimalRefreshVersion = 6U, LastRefreshVersion = 6U, PivotCacheId = 2U, FilterType = PivotFilterValues.Unknown };
            X15.BoundsTimelineRange boundsTimelineRange1 = new X15.BoundsTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2004-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelineState1.Append(boundsTimelineRange1);

            timelineCacheDefinition1.Append(timelineCachePivotTables1);
            timelineCacheDefinition1.Append(timelineState1);

            timeLineCachePart1.TimelineCacheDefinition = timelineCacheDefinition1;
        }

        // Generates content of worksheetPart2.
        private static void GenerateWorksheetPart2Content(WorksheetPart worksheetPart2)
        {
            Worksheet worksheet2 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet2.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet2.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet2.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension2 = new SheetDimension(){ Reference = "A1:B5" };

            SheetViews sheetViews2 = new SheetViews();
            SheetView sheetView2 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews2.Append(sheetView2);
            SheetFormatProperties sheetFormatProperties2 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns2 = new Columns();
            Column column8 = new Column(){ Min = 1U, Max = 2U, Width = 14.140625D, BestFit = true, CustomWidth = true };

            columns2.Append(column8);

            SheetData sheetData2 = new SheetData();

            Row row6 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell11 = new Cell(){ CellReference = "A1", StyleIndex = 5U, DataType = CellValues.SharedString };
            CellValue cellValue11 = new CellValue();
            cellValue11.Text = "29";

            cell11.Append(cellValue11);

            Cell cell12 = new Cell(){ CellReference = "B1", DataType = CellValues.SharedString };
            CellValue cellValue12 = new CellValue();
            cellValue12.Text = "31";

            cell12.Append(cellValue12);

            row6.Append(cell11);
            row6.Append(cell12);

            Row row7 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell13 = new Cell(){ CellReference = "A2", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue13 = new CellValue();
            cellValue13.Text = "16";

            cell13.Append(cellValue13);

            Cell cell14 = new Cell(){ CellReference = "B2", StyleIndex = 7U };
            CellValue cellValue14 = new CellValue();
            cellValue14.Text = "2050";

            cell14.Append(cellValue14);

            row7.Append(cell13);
            row7.Append(cell14);

            Row row8 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell15 = new Cell(){ CellReference = "A3", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue15 = new CellValue();
            cellValue15.Text = "22";

            cell15.Append(cellValue15);

            Cell cell16 = new Cell(){ CellReference = "B3", StyleIndex = 7U };
            CellValue cellValue16 = new CellValue();
            cellValue16.Text = "3168";

            cell16.Append(cellValue16);

            row8.Append(cell15);
            row8.Append(cell16);

            Row row9 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell17 = new Cell(){ CellReference = "A4", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue17 = new CellValue();
            cellValue17.Text = "23";

            cell17.Append(cellValue17);

            Cell cell18 = new Cell(){ CellReference = "B4", StyleIndex = 7U };
            CellValue cellValue18 = new CellValue();
            cellValue18.Text = "11529";

            cell18.Append(cellValue18);

            row9.Append(cell17);
            row9.Append(cell18);

            Row row10 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell19 = new Cell(){ CellReference = "A5", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue19 = new CellValue();
            cellValue19.Text = "30";

            cell19.Append(cellValue19);

            Cell cell20 = new Cell(){ CellReference = "B5", StyleIndex = 7U };
            CellValue cellValue20 = new CellValue();
            cellValue20.Text = "16747";

            cell20.Append(cellValue20);

            row10.Append(cell19);
            row10.Append(cell20);

            sheetData2.Append(row6);
            sheetData2.Append(row7);
            sheetData2.Append(row8);
            sheetData2.Append(row9);
            sheetData2.Append(row10);
            PhoneticProperties phoneticProperties2 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins4 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            S.Drawing drawing2 = new S.Drawing(){ Id = "rId2" };

            WorksheetExtensionList worksheetExtensionList2 = new WorksheetExtensionList();

            WorksheetExtension worksheetExtension2 = new WorksheetExtension(){ Uri = "{7E03D99C-DC04-49d9-9315-930204A7B6E9}" };
            worksheetExtension2.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineReferences timelineReferences2 = new X15.TimelineReferences();
            X15.TimelineReference timelineReference2 = new X15.TimelineReference(){ Id = "rId3" };

            timelineReferences2.Append(timelineReference2);

            worksheetExtension2.Append(timelineReferences2);

            worksheetExtensionList2.Append(worksheetExtension2);

            worksheet2.Append(sheetDimension2);
            worksheet2.Append(sheetViews2);
            worksheet2.Append(sheetFormatProperties2);
            worksheet2.Append(columns2);
            worksheet2.Append(sheetData2);
            worksheet2.Append(phoneticProperties2);
            worksheet2.Append(pageMargins4);
            worksheet2.Append(drawing2);
            worksheet2.Append(worksheetExtensionList2);

            worksheetPart2.Worksheet = worksheet2;
        }

        // Generates content of timeLinePart2.
        private static void GenerateTimeLinePart2Content(TimeLinePart timeLinePart2)
        {
            X15.Timelines timelines2 = new X15.Timelines(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x" }  };
            timelines2.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            timelines2.AddNamespaceDeclaration("x", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");
            X15.Timeline timeline3 = new X15.Timeline(){ Name = "Date", Cache = "NativeTimeline_Date", Caption = "Cache1", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2002-03-15T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline4 = new X15.Timeline(){ Name = "Date 1", Cache = "NativeTimeline_Date", Caption = "Cache2", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2002-03-09T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelines2.Append(timeline3);
            timelines2.Append(timeline4);

            timeLinePart2.Timelines = timelines2;
        }

        // Generates content of drawingsPart2.
        private static void GenerateDrawingsPart2Content(DrawingsPart drawingsPart2)
        {
            Xdr.WorksheetDrawing worksheetDrawing2 = new Xdr.WorksheetDrawing();
            worksheetDrawing2.AddNamespaceDeclaration("xdr", "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing");
            worksheetDrawing2.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            Xdr.TwoCellAnchor twoCellAnchor5 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker5 = new Xdr.FromMarker();
            Xdr.ColumnId columnId9 = new Xdr.ColumnId();
            columnId9.Text = "3";
            Xdr.ColumnOffset columnOffset9 = new Xdr.ColumnOffset();
            columnOffset9.Text = "257175";
            Xdr.RowId rowId9 = new Xdr.RowId();
            rowId9.Text = "0";
            Xdr.RowOffset rowOffset9 = new Xdr.RowOffset();
            rowOffset9.Text = "23812";

            fromMarker5.Append(columnId9);
            fromMarker5.Append(columnOffset9);
            fromMarker5.Append(rowId9);
            fromMarker5.Append(rowOffset9);

            Xdr.ToMarker toMarker5 = new Xdr.ToMarker();
            Xdr.ColumnId columnId10 = new Xdr.ColumnId();
            columnId10.Text = "10";
            Xdr.ColumnOffset columnOffset10 = new Xdr.ColumnOffset();
            columnOffset10.Text = "561975";
            Xdr.RowId rowId10 = new Xdr.RowId();
            rowId10.Text = "14";
            Xdr.RowOffset rowOffset10 = new Xdr.RowOffset();
            rowOffset10.Text = "100012";

            toMarker5.Append(columnId10);
            toMarker5.Append(columnOffset10);
            toMarker5.Append(rowId10);
            toMarker5.Append(rowOffset10);

            Xdr.GraphicFrame graphicFrame5 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties5 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties7 = new Xdr.NonVisualDrawingProperties(){ Id = 2U, Name = "グラフ 1" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties5 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties5.Append(nonVisualDrawingProperties7);
            nonVisualGraphicFrameProperties5.Append(nonVisualGraphicFrameDrawingProperties5);

            Xdr.Transform transform5 = new Xdr.Transform();
            A.Offset offset7 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents7 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform5.Append(offset7);
            transform5.Append(extents7);

            A.Graphic graphic5 = new A.Graphic();

            A.GraphicData graphicData5 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference3 = new C.ChartReference(){ Id = "rId1" };
            chartReference3.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference3.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData5.Append(chartReference3);

            graphic5.Append(graphicData5);

            graphicFrame5.Append(nonVisualGraphicFrameProperties5);
            graphicFrame5.Append(transform5);
            graphicFrame5.Append(graphic5);
            Xdr.ClientData clientData5 = new Xdr.ClientData();

            twoCellAnchor5.Append(fromMarker5);
            twoCellAnchor5.Append(toMarker5);
            twoCellAnchor5.Append(graphicFrame5);
            twoCellAnchor5.Append(clientData5);

            Xdr.TwoCellAnchor twoCellAnchor6 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker6 = new Xdr.FromMarker();
            Xdr.ColumnId columnId11 = new Xdr.ColumnId();
            columnId11.Text = "3";
            Xdr.ColumnOffset columnOffset11 = new Xdr.ColumnOffset();
            columnOffset11.Text = "257175";
            Xdr.RowId rowId11 = new Xdr.RowId();
            rowId11.Text = "15";
            Xdr.RowOffset rowOffset11 = new Xdr.RowOffset();
            rowOffset11.Text = "80962";

            fromMarker6.Append(columnId11);
            fromMarker6.Append(columnOffset11);
            fromMarker6.Append(rowId11);
            fromMarker6.Append(rowOffset11);

            Xdr.ToMarker toMarker6 = new Xdr.ToMarker();
            Xdr.ColumnId columnId12 = new Xdr.ColumnId();
            columnId12.Text = "10";
            Xdr.ColumnOffset columnOffset12 = new Xdr.ColumnOffset();
            columnOffset12.Text = "561975";
            Xdr.RowId rowId12 = new Xdr.RowId();
            rowId12.Text = "29";
            Xdr.RowOffset rowOffset12 = new Xdr.RowOffset();
            rowOffset12.Text = "157162";

            toMarker6.Append(columnId12);
            toMarker6.Append(columnOffset12);
            toMarker6.Append(rowId12);
            toMarker6.Append(rowOffset12);

            Xdr.GraphicFrame graphicFrame6 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties6 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties8 = new Xdr.NonVisualDrawingProperties(){ Id = 3U, Name = "グラフ 2" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties6 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties6.Append(nonVisualDrawingProperties8);
            nonVisualGraphicFrameProperties6.Append(nonVisualGraphicFrameDrawingProperties6);

            Xdr.Transform transform6 = new Xdr.Transform();
            A.Offset offset8 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents8 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform6.Append(offset8);
            transform6.Append(extents8);

            A.Graphic graphic6 = new A.Graphic();

            A.GraphicData graphicData6 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference4 = new C.ChartReference(){ Id = "rId2" };
            chartReference4.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference4.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData6.Append(chartReference4);

            graphic6.Append(graphicData6);

            graphicFrame6.Append(nonVisualGraphicFrameProperties6);
            graphicFrame6.Append(transform6);
            graphicFrame6.Append(graphic6);
            Xdr.ClientData clientData6 = new Xdr.ClientData();

            twoCellAnchor6.Append(fromMarker6);
            twoCellAnchor6.Append(toMarker6);
            twoCellAnchor6.Append(graphicFrame6);
            twoCellAnchor6.Append(clientData6);

            Xdr.TwoCellAnchor twoCellAnchor7 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker7 = new Xdr.FromMarker();
            Xdr.ColumnId columnId13 = new Xdr.ColumnId();
            columnId13.Text = "12";
            Xdr.ColumnOffset columnOffset13 = new Xdr.ColumnOffset();
            columnOffset13.Text = "19050";
            Xdr.RowId rowId13 = new Xdr.RowId();
            rowId13.Text = "0";
            Xdr.RowOffset rowOffset13 = new Xdr.RowOffset();
            rowOffset13.Text = "19050";

            fromMarker7.Append(columnId13);
            fromMarker7.Append(columnOffset13);
            fromMarker7.Append(rowId13);
            fromMarker7.Append(rowOffset13);

            Xdr.ToMarker toMarker7 = new Xdr.ToMarker();
            Xdr.ColumnId columnId14 = new Xdr.ColumnId();
            columnId14.Text = "17";
            Xdr.ColumnOffset columnOffset14 = new Xdr.ColumnOffset();
            columnOffset14.Text = "304800";
            Xdr.RowId rowId14 = new Xdr.RowId();
            rowId14.Text = "6";
            Xdr.RowOffset rowOffset14 = new Xdr.RowOffset();
            rowOffset14.Text = "66675";

            toMarker7.Append(columnId14);
            toMarker7.Append(columnOffset14);
            toMarker7.Append(rowId14);
            toMarker7.Append(rowOffset14);

            AlternateContent alternateContent6 = new AlternateContent();
            alternateContent6.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent6.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice6 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame7 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties7 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties9 = new Xdr.NonVisualDrawingProperties(){ Id = 4U, Name = "Date" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties7 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties7.Append(nonVisualDrawingProperties9);
            nonVisualGraphicFrameProperties7.Append(nonVisualGraphicFrameDrawingProperties7);

            Xdr.Transform transform7 = new Xdr.Transform();
            A.Offset offset9 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents9 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform7.Append(offset9);
            transform7.Append(extents9);

            A.Graphic graphic7 = new A.Graphic();

            A.GraphicData graphicData7 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer3 = new Tsle.TimeSlicer(){ Name = "Date" };
            timeSlicer3.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData7.Append(timeSlicer3);

            graphic7.Append(graphicData7);

            graphicFrame7.Append(nonVisualGraphicFrameProperties7);
            graphicFrame7.Append(transform7);
            graphicFrame7.Append(graphic7);

            alternateContentChoice6.Append(graphicFrame7);

            AlternateContentFallback alternateContentFallback5 = new AlternateContentFallback();
            alternateContentFallback5.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback5.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape3 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties3 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties10 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties3 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks3 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties3.Append(shapeLocks3);

            nonVisualShapeProperties3.Append(nonVisualDrawingProperties10);
            nonVisualShapeProperties3.Append(nonVisualShapeDrawingProperties3);

            Xdr.ShapeProperties shapeProperties11 = new Xdr.ShapeProperties();

            A.Transform2D transform2D3 = new A.Transform2D();
            A.Offset offset10 = new A.Offset(){ X = 7820025L, Y = 19050L };
            A.Extents extents10 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D3.Append(offset10);
            transform2D3.Append(extents10);

            A.PresetGeometry presetGeometry3 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList3 = new A.AdjustValueList();

            presetGeometry3.Append(adjustValueList3);

            A.SolidFill solidFill19 = new A.SolidFill();
            A.PresetColor presetColor5 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill19.Append(presetColor5);

            A.Outline outline16 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill20 = new A.SolidFill();
            A.PresetColor presetColor6 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill20.Append(presetColor6);

            outline16.Append(solidFill20);

            shapeProperties11.Append(transform2D3);
            shapeProperties11.Append(presetGeometry3);
            shapeProperties11.Append(solidFill19);
            shapeProperties11.Append(outline16);

            Xdr.TextBody textBody3 = new Xdr.TextBody();
            A.BodyProperties bodyProperties7 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle7 = new A.ListStyle();

            A.Paragraph paragraph7 = new A.Paragraph();

            A.Run run3 = new A.Run();
            A.RunProperties runProperties3 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text3 = new A.Text();
            text3.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run3.Append(runProperties3);
            run3.Append(text3);

            paragraph7.Append(run3);

            textBody3.Append(bodyProperties7);
            textBody3.Append(listStyle7);
            textBody3.Append(paragraph7);

            shape3.Append(nonVisualShapeProperties3);
            shape3.Append(shapeProperties11);
            shape3.Append(textBody3);

            alternateContentFallback5.Append(shape3);

            alternateContent6.Append(alternateContentChoice6);
            alternateContent6.Append(alternateContentFallback5);
            Xdr.ClientData clientData7 = new Xdr.ClientData();

            twoCellAnchor7.Append(fromMarker7);
            twoCellAnchor7.Append(toMarker7);
            twoCellAnchor7.Append(alternateContent6);
            twoCellAnchor7.Append(clientData7);

            Xdr.TwoCellAnchor twoCellAnchor8 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker8 = new Xdr.FromMarker();
            Xdr.ColumnId columnId15 = new Xdr.ColumnId();
            columnId15.Text = "12";
            Xdr.ColumnOffset columnOffset15 = new Xdr.ColumnOffset();
            columnOffset15.Text = "9525";
            Xdr.RowId rowId15 = new Xdr.RowId();
            rowId15.Text = "7";
            Xdr.RowOffset rowOffset15 = new Xdr.RowOffset();
            rowOffset15.Text = "19050";

            fromMarker8.Append(columnId15);
            fromMarker8.Append(columnOffset15);
            fromMarker8.Append(rowId15);
            fromMarker8.Append(rowOffset15);

            Xdr.ToMarker toMarker8 = new Xdr.ToMarker();
            Xdr.ColumnId columnId16 = new Xdr.ColumnId();
            columnId16.Text = "17";
            Xdr.ColumnOffset columnOffset16 = new Xdr.ColumnOffset();
            columnOffset16.Text = "371475";
            Xdr.RowId rowId16 = new Xdr.RowId();
            rowId16.Text = "13";
            Xdr.RowOffset rowOffset16 = new Xdr.RowOffset();
            rowOffset16.Text = "66675";

            toMarker8.Append(columnId16);
            toMarker8.Append(columnOffset16);
            toMarker8.Append(rowId16);
            toMarker8.Append(rowOffset16);

            AlternateContent alternateContent7 = new AlternateContent();
            alternateContent7.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent7.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice7 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame8 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties8 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties11 = new Xdr.NonVisualDrawingProperties(){ Id = 7U, Name = "Date 1" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties8 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties8.Append(nonVisualDrawingProperties11);
            nonVisualGraphicFrameProperties8.Append(nonVisualGraphicFrameDrawingProperties8);

            Xdr.Transform transform8 = new Xdr.Transform();
            A.Offset offset11 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents11 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform8.Append(offset11);
            transform8.Append(extents11);

            A.Graphic graphic8 = new A.Graphic();

            A.GraphicData graphicData8 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer4 = new Tsle.TimeSlicer(){ Name = "Date 1" };
            timeSlicer4.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData8.Append(timeSlicer4);

            graphic8.Append(graphicData8);

            graphicFrame8.Append(nonVisualGraphicFrameProperties8);
            graphicFrame8.Append(transform8);
            graphicFrame8.Append(graphic8);

            alternateContentChoice7.Append(graphicFrame8);

            AlternateContentFallback alternateContentFallback6 = new AlternateContentFallback();

            Xdr.Shape shape4 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties4 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties12 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties4 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks4 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties4.Append(shapeLocks4);

            nonVisualShapeProperties4.Append(nonVisualDrawingProperties12);
            nonVisualShapeProperties4.Append(nonVisualShapeDrawingProperties4);

            Xdr.ShapeProperties shapeProperties12 = new Xdr.ShapeProperties();

            A.Transform2D transform2D4 = new A.Transform2D();
            A.Offset offset12 = new A.Offset(){ X = 9020175L, Y = 1219200L };
            A.Extents extents12 = new A.Extents(){ Cx = 3790950L, Cy = 1076325L };

            transform2D4.Append(offset12);
            transform2D4.Append(extents12);

            A.PresetGeometry presetGeometry4 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList4 = new A.AdjustValueList();

            presetGeometry4.Append(adjustValueList4);

            A.SolidFill solidFill21 = new A.SolidFill();
            A.PresetColor presetColor7 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill21.Append(presetColor7);

            A.Outline outline17 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill22 = new A.SolidFill();
            A.PresetColor presetColor8 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill22.Append(presetColor8);

            outline17.Append(solidFill22);

            shapeProperties12.Append(transform2D4);
            shapeProperties12.Append(presetGeometry4);
            shapeProperties12.Append(solidFill21);
            shapeProperties12.Append(outline17);

            Xdr.TextBody textBody4 = new Xdr.TextBody();
            A.BodyProperties bodyProperties8 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle8 = new A.ListStyle();

            A.Paragraph paragraph8 = new A.Paragraph();

            A.Run run4 = new A.Run();
            A.RunProperties runProperties4 = new A.RunProperties(){ Language = "ja-JP", AlternativeLanguage = "en-US", FontSize = 1100 };
            A.Text text4 = new A.Text();
            text4.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run4.Append(runProperties4);
            run4.Append(text4);

            paragraph8.Append(run4);

            textBody4.Append(bodyProperties8);
            textBody4.Append(listStyle8);
            textBody4.Append(paragraph8);

            shape4.Append(nonVisualShapeProperties4);
            shape4.Append(shapeProperties12);
            shape4.Append(textBody4);

            alternateContentFallback6.Append(shape4);

            alternateContent7.Append(alternateContentChoice7);
            alternateContent7.Append(alternateContentFallback6);
            Xdr.ClientData clientData8 = new Xdr.ClientData();

            twoCellAnchor8.Append(fromMarker8);
            twoCellAnchor8.Append(toMarker8);
            twoCellAnchor8.Append(alternateContent7);
            twoCellAnchor8.Append(clientData8);

            worksheetDrawing2.Append(twoCellAnchor5);
            worksheetDrawing2.Append(twoCellAnchor6);
            worksheetDrawing2.Append(twoCellAnchor7);
            worksheetDrawing2.Append(twoCellAnchor8);

            drawingsPart2.WorksheetDrawing = worksheetDrawing2;
        }

        // Generates content of chartPart3.
        private static void GenerateChartPart3Content(ChartPart chartPart3)
        {
            C.ChartSpace chartSpace3 = new C.ChartSpace();
            chartSpace3.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace3.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace3.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date19043 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage3 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners3 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent8 = new AlternateContent();
            alternateContent8.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice8 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice8.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style5 = new C14.Style(){ Val = 102 };

            alternateContentChoice8.Append(style5);

            AlternateContentFallback alternateContentFallback7 = new AlternateContentFallback();
            C.Style style6 = new C.Style(){ Val = 2 };

            alternateContentFallback7.Append(style6);

            alternateContent8.Append(alternateContentChoice8);
            alternateContent8.Append(alternateContentFallback7);

            C.PivotSource pivotSource3 = new C.PivotSource();
            C.PivotTableName pivotTableName3 = new C.PivotTableName();
            pivotTableName3.Text = "[GeneratedDocument.xlsx]Cache!PivotTable1";
            C.FormatId formatId3 = new C.FormatId(){ Val = 1U };

            pivotSource3.Append(pivotTableName3);
            pivotSource3.Append(formatId3);

            C.Chart chart3 = new C.Chart();

            C.Title title3 = new C.Title();
            C.Overlay overlay5 = new C.Overlay(){ Val = false };

            title3.Append(overlay5);
            C.AutoTitleDeleted autoTitleDeleted3 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats3 = new C.PivotFormats();

            C.PivotFormat pivotFormat24 = new C.PivotFormat();
            C.Index index26 = new C.Index(){ Val = 0U };

            C.Marker marker24 = new C.Marker();
            C.Symbol symbol24 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker24.Append(symbol24);

            pivotFormat24.Append(index26);
            pivotFormat24.Append(marker24);

            pivotFormats3.Append(pivotFormat24);

            C.PlotArea plotArea3 = new C.PlotArea();
            C.Layout layout3 = new C.Layout();

            C.PieChart pieChart2 = new C.PieChart();
            C.VaryColors varyColors3 = new C.VaryColors(){ Val = true };

            C.PieChartSeries pieChartSeries2 = new C.PieChartSeries();
            C.Index index27 = new C.Index(){ Val = 0U };
            C.Order order3 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText3 = new C.SeriesText();

            C.StringReference stringReference5 = new C.StringReference();
            C.Formula formula7 = new C.Formula();
            formula7.Text = "Cache!$B$1";

            C.StringCache stringCache5 = new C.StringCache();
            C.PointCount pointCount7 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint9 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue15 = new C.NumericValue();
            numericValue15.Text = "Total";

            stringPoint9.Append(numericValue15);

            stringCache5.Append(pointCount7);
            stringCache5.Append(stringPoint9);

            stringReference5.Append(formula7);
            stringReference5.Append(stringCache5);

            seriesText3.Append(stringReference5);

            C.CategoryAxisData categoryAxisData3 = new C.CategoryAxisData();

            C.StringReference stringReference6 = new C.StringReference();
            C.Formula formula8 = new C.Formula();
            formula8.Text = "Cache!$A$2:$A$5";

            C.StringCache stringCache6 = new C.StringCache();
            C.PointCount pointCount8 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint10 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue16 = new C.NumericValue();
            numericValue16.Text = "product_C";

            stringPoint10.Append(numericValue16);

            C.StringPoint stringPoint11 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue17 = new C.NumericValue();
            numericValue17.Text = "product_F";

            stringPoint11.Append(numericValue17);

            C.StringPoint stringPoint12 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue18 = new C.NumericValue();
            numericValue18.Text = "product_G";

            stringPoint12.Append(numericValue18);

            stringCache6.Append(pointCount8);
            stringCache6.Append(stringPoint10);
            stringCache6.Append(stringPoint11);
            stringCache6.Append(stringPoint12);

            stringReference6.Append(formula8);
            stringReference6.Append(stringCache6);

            categoryAxisData3.Append(stringReference6);

            C.Values values3 = new C.Values();

            C.NumberReference numberReference3 = new C.NumberReference();
            C.Formula formula9 = new C.Formula();
            formula9.Text = "Cache!$B$2:$B$5";

            C.NumberingCache numberingCache3 = new C.NumberingCache();
            C.FormatCode formatCode3 = new C.FormatCode();
            formatCode3.Text = "General";
            C.PointCount pointCount9 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint7 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue19 = new C.NumericValue();
            numericValue19.Text = "2050";

            numericPoint7.Append(numericValue19);

            C.NumericPoint numericPoint8 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue20 = new C.NumericValue();
            numericValue20.Text = "3168";

            numericPoint8.Append(numericValue20);

            C.NumericPoint numericPoint9 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue21 = new C.NumericValue();
            numericValue21.Text = "11529";

            numericPoint9.Append(numericValue21);

            numberingCache3.Append(formatCode3);
            numberingCache3.Append(pointCount9);
            numberingCache3.Append(numericPoint7);
            numberingCache3.Append(numericPoint8);
            numberingCache3.Append(numericPoint9);

            numberReference3.Append(formula9);
            numberReference3.Append(numberingCache3);

            values3.Append(numberReference3);

            pieChartSeries2.Append(index27);
            pieChartSeries2.Append(order3);
            pieChartSeries2.Append(seriesText3);
            pieChartSeries2.Append(categoryAxisData3);
            pieChartSeries2.Append(values3);

            C.DataLabels dataLabels3 = new C.DataLabels();
            C.ShowLegendKey showLegendKey3 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue3 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName3 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName3 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent3 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize3 = new C.ShowBubbleSize(){ Val = false };
            C.ShowLeaderLines showLeaderLines2 = new C.ShowLeaderLines(){ Val = true };

            dataLabels3.Append(showLegendKey3);
            dataLabels3.Append(showValue3);
            dataLabels3.Append(showCategoryName3);
            dataLabels3.Append(showSeriesName3);
            dataLabels3.Append(showPercent3);
            dataLabels3.Append(showBubbleSize3);
            dataLabels3.Append(showLeaderLines2);
            C.FirstSliceAngle firstSliceAngle2 = new C.FirstSliceAngle(){ Val = (UInt16Value)0U };

            pieChart2.Append(varyColors3);
            pieChart2.Append(pieChartSeries2);
            pieChart2.Append(dataLabels3);
            pieChart2.Append(firstSliceAngle2);

            plotArea3.Append(layout3);
            plotArea3.Append(pieChart2);

            C.Legend legend3 = new C.Legend();
            C.LegendPosition legendPosition3 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay6 = new C.Overlay(){ Val = false };

            legend3.Append(legendPosition3);
            legend3.Append(overlay6);
            C.PlotVisibleOnly plotVisibleOnly3 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs3 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum3 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart3.Append(title3);
            chart3.Append(autoTitleDeleted3);
            chart3.Append(pivotFormats3);
            chart3.Append(plotArea3);
            chart3.Append(legend3);
            chart3.Append(plotVisibleOnly3);
            chart3.Append(displayBlanksAs3);
            chart3.Append(showDataLabelsOverMaximum3);

            C.PrintSettings printSettings3 = new C.PrintSettings();
            C.HeaderFooter headerFooter3 = new C.HeaderFooter();
            C.PageMargins pageMargins5 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup3 = new C.PageSetup();

            printSettings3.Append(headerFooter3);
            printSettings3.Append(pageMargins5);
            printSettings3.Append(pageSetup3);

            C.ChartSpaceExtensionList chartSpaceExtensionList3 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList3.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList3.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension3 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension3.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions3 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter3 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories3 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData3 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries3 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible3 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions3.Append(dropZoneFilter3);
            pivotOptions3.Append(dropZoneCategories3);
            pivotOptions3.Append(dropZoneData3);
            pivotOptions3.Append(dropZoneSeries3);
            pivotOptions3.Append(dropZonesVisible3);

            chartSpaceExtension3.Append(pivotOptions3);

            chartSpaceExtensionList3.Append(chartSpaceExtension3);

            chartSpace3.Append(date19043);
            chartSpace3.Append(editingLanguage3);
            chartSpace3.Append(roundedCorners3);
            chartSpace3.Append(alternateContent8);
            chartSpace3.Append(pivotSource3);
            chartSpace3.Append(chart3);
            chartSpace3.Append(printSettings3);
            chartSpace3.Append(chartSpaceExtensionList3);

            chartPart3.ChartSpace = chartSpace3;
        }

        // Generates content of chartPart4.
        private static void GenerateChartPart4Content(ChartPart chartPart4)
        {
            C.ChartSpace chartSpace4 = new C.ChartSpace();
            chartSpace4.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace4.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace4.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date19044 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage4 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners4 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent9 = new AlternateContent();
            alternateContent9.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice9 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice9.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style7 = new C14.Style(){ Val = 102 };

            alternateContentChoice9.Append(style7);

            AlternateContentFallback alternateContentFallback8 = new AlternateContentFallback();
            C.Style style8 = new C.Style(){ Val = 2 };

            alternateContentFallback8.Append(style8);

            alternateContent9.Append(alternateContentChoice9);
            alternateContent9.Append(alternateContentFallback8);

            C.PivotSource pivotSource4 = new C.PivotSource();
            C.PivotTableName pivotTableName4 = new C.PivotTableName();
            pivotTableName4.Text = "[GeneratedDocument.xlsx]Cache!PivotTable1";
            C.FormatId formatId4 = new C.FormatId(){ Val = 0U };

            pivotSource4.Append(pivotTableName4);
            pivotSource4.Append(formatId4);

            C.Chart chart4 = new C.Chart();

            C.Title title4 = new C.Title();
            C.Overlay overlay7 = new C.Overlay(){ Val = false };

            title4.Append(overlay7);
            C.AutoTitleDeleted autoTitleDeleted4 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats4 = new C.PivotFormats();

            C.PivotFormat pivotFormat25 = new C.PivotFormat();
            C.Index index28 = new C.Index(){ Val = 0U };

            C.Marker marker25 = new C.Marker();
            C.Symbol symbol25 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker25.Append(symbol25);

            pivotFormat25.Append(index28);
            pivotFormat25.Append(marker25);

            pivotFormats4.Append(pivotFormat25);

            C.PlotArea plotArea4 = new C.PlotArea();
            C.Layout layout4 = new C.Layout();

            C.BarChart barChart2 = new C.BarChart();
            C.BarDirection barDirection2 = new C.BarDirection(){ Val = C.BarDirectionValues.Column };
            C.BarGrouping barGrouping2 = new C.BarGrouping(){ Val = C.BarGroupingValues.Clustered };
            C.VaryColors varyColors4 = new C.VaryColors(){ Val = false };

            C.BarChartSeries barChartSeries2 = new C.BarChartSeries();
            C.Index index29 = new C.Index(){ Val = 0U };
            C.Order order4 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText4 = new C.SeriesText();

            C.StringReference stringReference7 = new C.StringReference();
            C.Formula formula10 = new C.Formula();
            formula10.Text = "Cache!$B$1";

            C.StringCache stringCache7 = new C.StringCache();
            C.PointCount pointCount10 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint13 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue22 = new C.NumericValue();
            numericValue22.Text = "Total";

            stringPoint13.Append(numericValue22);

            stringCache7.Append(pointCount10);
            stringCache7.Append(stringPoint13);

            stringReference7.Append(formula10);
            stringReference7.Append(stringCache7);

            seriesText4.Append(stringReference7);
            C.InvertIfNegative invertIfNegative2 = new C.InvertIfNegative(){ Val = false };

            C.CategoryAxisData categoryAxisData4 = new C.CategoryAxisData();

            C.StringReference stringReference8 = new C.StringReference();
            C.Formula formula11 = new C.Formula();
            formula11.Text = "Cache!$A$2:$A$5";

            C.StringCache stringCache8 = new C.StringCache();
            C.PointCount pointCount11 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint14 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue23 = new C.NumericValue();
            numericValue23.Text = "product_C";

            stringPoint14.Append(numericValue23);

            C.StringPoint stringPoint15 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue24 = new C.NumericValue();
            numericValue24.Text = "product_F";

            stringPoint15.Append(numericValue24);

            C.StringPoint stringPoint16 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue25 = new C.NumericValue();
            numericValue25.Text = "product_G";

            stringPoint16.Append(numericValue25);

            stringCache8.Append(pointCount11);
            stringCache8.Append(stringPoint14);
            stringCache8.Append(stringPoint15);
            stringCache8.Append(stringPoint16);

            stringReference8.Append(formula11);
            stringReference8.Append(stringCache8);

            categoryAxisData4.Append(stringReference8);

            C.Values values4 = new C.Values();

            C.NumberReference numberReference4 = new C.NumberReference();
            C.Formula formula12 = new C.Formula();
            formula12.Text = "Cache!$B$2:$B$5";

            C.NumberingCache numberingCache4 = new C.NumberingCache();
            C.FormatCode formatCode4 = new C.FormatCode();
            formatCode4.Text = "General";
            C.PointCount pointCount12 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint10 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue26 = new C.NumericValue();
            numericValue26.Text = "2050";

            numericPoint10.Append(numericValue26);

            C.NumericPoint numericPoint11 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue27 = new C.NumericValue();
            numericValue27.Text = "3168";

            numericPoint11.Append(numericValue27);

            C.NumericPoint numericPoint12 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue28 = new C.NumericValue();
            numericValue28.Text = "11529";

            numericPoint12.Append(numericValue28);

            numberingCache4.Append(formatCode4);
            numberingCache4.Append(pointCount12);
            numberingCache4.Append(numericPoint10);
            numberingCache4.Append(numericPoint11);
            numberingCache4.Append(numericPoint12);

            numberReference4.Append(formula12);
            numberReference4.Append(numberingCache4);

            values4.Append(numberReference4);

            barChartSeries2.Append(index29);
            barChartSeries2.Append(order4);
            barChartSeries2.Append(seriesText4);
            barChartSeries2.Append(invertIfNegative2);
            barChartSeries2.Append(categoryAxisData4);
            barChartSeries2.Append(values4);

            C.DataLabels dataLabels4 = new C.DataLabels();
            C.ShowLegendKey showLegendKey4 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue4 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName4 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName4 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent4 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize4 = new C.ShowBubbleSize(){ Val = false };

            dataLabels4.Append(showLegendKey4);
            dataLabels4.Append(showValue4);
            dataLabels4.Append(showCategoryName4);
            dataLabels4.Append(showSeriesName4);
            dataLabels4.Append(showPercent4);
            dataLabels4.Append(showBubbleSize4);
            C.GapWidth gapWidth2 = new C.GapWidth(){ Val = (UInt16Value)150U };
            C.AxisId axisId5 = new C.AxisId(){ Val = 164427248U };
            C.AxisId axisId6 = new C.AxisId(){ Val = 164427632U };

            barChart2.Append(barDirection2);
            barChart2.Append(barGrouping2);
            barChart2.Append(varyColors4);
            barChart2.Append(barChartSeries2);
            barChart2.Append(dataLabels4);
            barChart2.Append(gapWidth2);
            barChart2.Append(axisId5);
            barChart2.Append(axisId6);

            C.CategoryAxis categoryAxis2 = new C.CategoryAxis();
            C.AxisId axisId7 = new C.AxisId(){ Val = 164427248U };

            C.Scaling scaling3 = new C.Scaling();
            C.Orientation orientation3 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling3.Append(orientation3);
            C.Delete delete3 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition3 = new C.AxisPosition(){ Val = C.AxisPositionValues.Bottom };
            C.NumberingFormat numberingFormat3 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = false };
            C.MajorTickMark majorTickMark3 = new C.MajorTickMark(){ Val = C.TickMarkValues.Outside };
            C.MinorTickMark minorTickMark3 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition3 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };
            C.CrossingAxis crossingAxis3 = new C.CrossingAxis(){ Val = 164427632U };
            C.Crosses crosses3 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.AutoLabeled autoLabeled2 = new C.AutoLabeled(){ Val = true };
            C.LabelAlignment labelAlignment2 = new C.LabelAlignment(){ Val = C.LabelAlignmentValues.Center };
            C.LabelOffset labelOffset2 = new C.LabelOffset(){ Val = (UInt16Value)100U };
            C.NoMultiLevelLabels noMultiLevelLabels2 = new C.NoMultiLevelLabels(){ Val = false };

            categoryAxis2.Append(axisId7);
            categoryAxis2.Append(scaling3);
            categoryAxis2.Append(delete3);
            categoryAxis2.Append(axisPosition3);
            categoryAxis2.Append(numberingFormat3);
            categoryAxis2.Append(majorTickMark3);
            categoryAxis2.Append(minorTickMark3);
            categoryAxis2.Append(tickLabelPosition3);
            categoryAxis2.Append(crossingAxis3);
            categoryAxis2.Append(crosses3);
            categoryAxis2.Append(autoLabeled2);
            categoryAxis2.Append(labelAlignment2);
            categoryAxis2.Append(labelOffset2);
            categoryAxis2.Append(noMultiLevelLabels2);

            C.ValueAxis valueAxis2 = new C.ValueAxis();
            C.AxisId axisId8 = new C.AxisId(){ Val = 164427632U };

            C.Scaling scaling4 = new C.Scaling();
            C.Orientation orientation4 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling4.Append(orientation4);
            C.Delete delete4 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition4 = new C.AxisPosition(){ Val = C.AxisPositionValues.Left };
            C.MajorGridlines majorGridlines2 = new C.MajorGridlines();
            C.NumberingFormat numberingFormat4 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = true };
            C.MajorTickMark majorTickMark4 = new C.MajorTickMark(){ Val = C.TickMarkValues.Outside };
            C.MinorTickMark minorTickMark4 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition4 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };
            C.CrossingAxis crossingAxis4 = new C.CrossingAxis(){ Val = 164427248U };
            C.Crosses crosses4 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.CrossBetween crossBetween2 = new C.CrossBetween(){ Val = C.CrossBetweenValues.Between };

            valueAxis2.Append(axisId8);
            valueAxis2.Append(scaling4);
            valueAxis2.Append(delete4);
            valueAxis2.Append(axisPosition4);
            valueAxis2.Append(majorGridlines2);
            valueAxis2.Append(numberingFormat4);
            valueAxis2.Append(majorTickMark4);
            valueAxis2.Append(minorTickMark4);
            valueAxis2.Append(tickLabelPosition4);
            valueAxis2.Append(crossingAxis4);
            valueAxis2.Append(crosses4);
            valueAxis2.Append(crossBetween2);

            plotArea4.Append(layout4);
            plotArea4.Append(barChart2);
            plotArea4.Append(categoryAxis2);
            plotArea4.Append(valueAxis2);

            C.Legend legend4 = new C.Legend();
            C.LegendPosition legendPosition4 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay8 = new C.Overlay(){ Val = false };

            legend4.Append(legendPosition4);
            legend4.Append(overlay8);
            C.PlotVisibleOnly plotVisibleOnly4 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs4 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum4 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart4.Append(title4);
            chart4.Append(autoTitleDeleted4);
            chart4.Append(pivotFormats4);
            chart4.Append(plotArea4);
            chart4.Append(legend4);
            chart4.Append(plotVisibleOnly4);
            chart4.Append(displayBlanksAs4);
            chart4.Append(showDataLabelsOverMaximum4);

            C.PrintSettings printSettings4 = new C.PrintSettings();
            C.HeaderFooter headerFooter4 = new C.HeaderFooter();
            C.PageMargins pageMargins6 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup4 = new C.PageSetup();

            printSettings4.Append(headerFooter4);
            printSettings4.Append(pageMargins6);
            printSettings4.Append(pageSetup4);

            C.ChartSpaceExtensionList chartSpaceExtensionList4 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList4.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList4.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension4 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension4.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions4 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter4 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories4 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData4 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries4 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible4 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions4.Append(dropZoneFilter4);
            pivotOptions4.Append(dropZoneCategories4);
            pivotOptions4.Append(dropZoneData4);
            pivotOptions4.Append(dropZoneSeries4);
            pivotOptions4.Append(dropZonesVisible4);

            chartSpaceExtension4.Append(pivotOptions4);

            chartSpaceExtensionList4.Append(chartSpaceExtension4);

            chartSpace4.Append(date19044);
            chartSpace4.Append(editingLanguage4);
            chartSpace4.Append(roundedCorners4);
            chartSpace4.Append(alternateContent9);
            chartSpace4.Append(pivotSource4);
            chartSpace4.Append(chart4);
            chartSpace4.Append(printSettings4);
            chartSpace4.Append(chartSpaceExtensionList4);

            chartPart4.ChartSpace = chartSpace4;
        }

        // Generates content of pivotTablePart2.
        private static void GeneratePivotTablePart2Content(PivotTablePart pivotTablePart2)
        {
            PivotTableDefinition pivotTableDefinition3 = new PivotTableDefinition(){ Name = "PivotTable1", CacheId = 0U, ApplyNumberFormats = false, ApplyBorderFormats = false, ApplyFontFormats = false, ApplyPatternFormats = false, ApplyAlignmentFormats = false, ApplyWidthHeightFormats = true, DataCaption = "値", UpdatedVersion = 5, MinRefreshableVersion = 5, UseAutoFormatting = true, ItemPrintTitles = true, CreatedVersion = 4, Indent = 0U, Outline = true, OutlineData = true, MultipleFieldFilters = false, ChartFormat = 2U };
            Location location2 = new Location(){ Reference = "A1:B5", FirstHeaderRow = 1U, FirstDataRow = 1U, FirstDataColumn = 1U };

            PivotFields pivotFields2 = new PivotFields(){ Count = 6U };

            PivotField pivotField8 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items5 = new Items(){ Count = 6U };
            Item item37 = new Item(){ Index = 0U };
            Item item38 = new Item(){ Index = 1U };
            Item item39 = new Item(){ Index = 2U };
            Item item40 = new Item(){ Index = 3U };
            Item item41 = new Item(){ Index = 4U };
            Item item42 = new Item(){ ItemType = ItemValues.Default };

            items5.Append(item37);
            items5.Append(item38);
            items5.Append(item39);
            items5.Append(item40);
            items5.Append(item41);
            items5.Append(item42);

            pivotField8.Append(items5);

            PivotField pivotField9 = new PivotField(){ Axis = PivotTableAxisValues.AxisRow, ShowAll = false };

            Items items6 = new Items(){ Count = 11U };
            Item item43 = new Item(){ Missing = true, Index = 6U };
            Item item44 = new Item(){ Missing = true, Index = 5U };
            Item item45 = new Item(){ Index = 2U };
            Item item46 = new Item(){ Missing = true, Index = 4U };
            Item item47 = new Item(){ Missing = true, Index = 3U };
            Item item48 = new Item(){ Index = 0U };
            Item item49 = new Item(){ Index = 1U };
            Item item50 = new Item(){ Missing = true, Index = 9U };
            Item item51 = new Item(){ Missing = true, Index = 8U };
            Item item52 = new Item(){ Missing = true, Index = 7U };
            Item item53 = new Item(){ ItemType = ItemValues.Default };

            items6.Append(item43);
            items6.Append(item44);
            items6.Append(item45);
            items6.Append(item46);
            items6.Append(item47);
            items6.Append(item48);
            items6.Append(item49);
            items6.Append(item50);
            items6.Append(item51);
            items6.Append(item52);
            items6.Append(item53);

            pivotField9.Append(items6);
            PivotField pivotField10 = new PivotField(){ ShowAll = false };
            PivotField pivotField11 = new PivotField(){ DataField = true, ShowAll = false };
            PivotField pivotField12 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };
            PivotField pivotField13 = new PivotField(){ ShowAll = false };

            pivotFields2.Append(pivotField8);
            pivotFields2.Append(pivotField9);
            pivotFields2.Append(pivotField10);
            pivotFields2.Append(pivotField11);
            pivotFields2.Append(pivotField12);
            pivotFields2.Append(pivotField13);

            RowFields rowFields2 = new RowFields(){ Count = 1U };
            Field field2 = new Field(){ Index = 1 };

            rowFields2.Append(field2);

            RowItems rowItems2 = new RowItems(){ Count = 4U };

            RowItem rowItem6 = new RowItem();
            MemberPropertyIndex memberPropertyIndex5 = new MemberPropertyIndex(){ Val = 2 };

            rowItem6.Append(memberPropertyIndex5);

            RowItem rowItem7 = new RowItem();
            MemberPropertyIndex memberPropertyIndex6 = new MemberPropertyIndex(){ Val = 5 };

            rowItem7.Append(memberPropertyIndex6);

            RowItem rowItem8 = new RowItem();
            MemberPropertyIndex memberPropertyIndex7 = new MemberPropertyIndex(){ Val = 6 };

            rowItem8.Append(memberPropertyIndex7);

            RowItem rowItem9 = new RowItem(){ ItemType = ItemValues.Grand };
            MemberPropertyIndex memberPropertyIndex8 = new MemberPropertyIndex();

            rowItem9.Append(memberPropertyIndex8);

            rowItems2.Append(rowItem6);
            rowItems2.Append(rowItem7);
            rowItems2.Append(rowItem8);
            rowItems2.Append(rowItem9);

            ColumnItems columnItems2 = new ColumnItems(){ Count = 1U };
            RowItem rowItem10 = new RowItem();

            columnItems2.Append(rowItem10);

            DataFields dataFields2 = new DataFields(){ Count = 1U };
            DataField dataField2 = new DataField(){ Name = "Toral / Price", Field = 3U, BaseField = 0, BaseItem = 0U };

            dataFields2.Append(dataField2);

            ChartFormats chartFormats2 = new ChartFormats(){ Count = 2U };

            ChartFormat chartFormat12 = new ChartFormat(){ Chart = 0U, Format = 0U, Series = true };

            PivotArea pivotArea12 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences12 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference12 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem24 = new FieldItem(){ Val = 0U };

            pivotAreaReference12.Append(fieldItem24);

            pivotAreaReferences12.Append(pivotAreaReference12);

            pivotArea12.Append(pivotAreaReferences12);

            chartFormat12.Append(pivotArea12);

            ChartFormat chartFormat13 = new ChartFormat(){ Chart = 1U, Format = 0U, Series = true };

            PivotArea pivotArea13 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences13 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference13 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem25 = new FieldItem(){ Val = 0U };

            pivotAreaReference13.Append(fieldItem25);

            pivotAreaReferences13.Append(pivotAreaReference13);

            pivotArea13.Append(pivotAreaReferences13);

            chartFormat13.Append(pivotArea13);

            chartFormats2.Append(chartFormat12);
            chartFormats2.Append(chartFormat13);
            PivotTableStyle pivotTableStyle2 = new PivotTableStyle(){ Name = "PivotStyleLight16", ShowRowHeaders = true, ShowColumnHeaders = true, ShowRowStripes = false, ShowColumnStripes = false, ShowLastColumn = true };

            PivotTableDefinitionExtensionList pivotTableDefinitionExtensionList2 = new PivotTableDefinitionExtensionList();

            PivotTableDefinitionExtension pivotTableDefinitionExtension2 = new PivotTableDefinitionExtension(){ Uri = "{962EF5D1-5CA2-4c93-8EF4-DBF5C05439D2}" };
            pivotTableDefinitionExtension2.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");

            X14.PivotTableDefinition pivotTableDefinition4 = new X14.PivotTableDefinition(){ HideValuesRow = true };
            pivotTableDefinition4.AddNamespaceDeclaration("xm", "http://schemas.microsoft.com/office/excel/2006/main");

            pivotTableDefinitionExtension2.Append(pivotTableDefinition4);

            pivotTableDefinitionExtensionList2.Append(pivotTableDefinitionExtension2);

            pivotTableDefinition3.Append(location2);
            pivotTableDefinition3.Append(pivotFields2);
            pivotTableDefinition3.Append(rowFields2);
            pivotTableDefinition3.Append(rowItems2);
            pivotTableDefinition3.Append(columnItems2);
            pivotTableDefinition3.Append(dataFields2);
            pivotTableDefinition3.Append(chartFormats2);
            pivotTableDefinition3.Append(pivotTableStyle2);
            pivotTableDefinition3.Append(pivotTableDefinitionExtensionList2);

            pivotTablePart2.PivotTableDefinition = pivotTableDefinition3;
        }

        // Generates content of pivotTableCacheDefinitionPart2.
        private static void GeneratePivotTableCacheDefinitionPart2Content(PivotTableCacheDefinitionPart pivotTableCacheDefinitionPart2)
        {
            PivotCacheDefinition pivotCacheDefinition3 = new PivotCacheDefinition(){ Id = "rId1", RefreshedBy = "Masaki Tamura (Pasona Tech)", RefreshedDate = 40946.730963773145D, CreatedVersion = 4, RefreshedVersion = 5, MinRefreshableVersion = 3, RecordCount = 5U };
            pivotCacheDefinition3.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            CacheSource cacheSource2 = new CacheSource(){ Type = SourceValues.Worksheet };
            WorksheetSource worksheetSource2 = new WorksheetSource(){ Name = "DataTable2" };

            cacheSource2.Append(worksheetSource2);

            CacheFields cacheFields2 = new CacheFields(){ Count = 6U };

            CacheField cacheField8 = new CacheField(){ Name = "Date", NumberFormatId = 14U };

            SharedItems sharedItems7 = new SharedItems(){ ContainsSemiMixedTypes = false, ContainsNonDate = false, ContainsDate = true, ContainsString = false, MinDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T13:54:32Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), MaxDate = System.Xml.XmlConvert.ToDateTime("2002-12-30T22:26:24Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), Count = 5U };
            DateTimeItem dateTimeItem9 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-01T13:54:32Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem10 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-01T15:32:03Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem11 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-01T16:56:19Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem12 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-01T18:04:48Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            DateTimeItem dateTimeItem13 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2002-12-30T22:26:24Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            sharedItems7.Append(dateTimeItem9);
            sharedItems7.Append(dateTimeItem10);
            sharedItems7.Append(dateTimeItem11);
            sharedItems7.Append(dateTimeItem12);
            sharedItems7.Append(dateTimeItem13);

            cacheField8.Append(sharedItems7);

            CacheField cacheField9 = new CacheField(){ Name = "Product", NumberFormatId = 0U };

            SharedItems sharedItems8 = new SharedItems(){ Count = 10U };
            StringItem stringItem34 = new StringItem(){ Val = "product_F" };
            StringItem stringItem35 = new StringItem(){ Val = "product_G" };
            StringItem stringItem36 = new StringItem(){ Val = "product_C" };
            StringItem stringItem37 = new StringItem(){ Val = "product_E", Unused = true };
            StringItem stringItem38 = new StringItem(){ Val = "product_D", Unused = true };
            StringItem stringItem39 = new StringItem(){ Val = "product_B", Unused = true };
            StringItem stringItem40 = new StringItem(){ Val = "product_A", Unused = true };
            StringItem stringItem41 = new StringItem(){ Val = "product_J", Unused = true };
            StringItem stringItem42 = new StringItem(){ Val = "product_I", Unused = true };
            StringItem stringItem43 = new StringItem(){ Val = "product_H", Unused = true };

            sharedItems8.Append(stringItem34);
            sharedItems8.Append(stringItem35);
            sharedItems8.Append(stringItem36);
            sharedItems8.Append(stringItem37);
            sharedItems8.Append(stringItem38);
            sharedItems8.Append(stringItem39);
            sharedItems8.Append(stringItem40);
            sharedItems8.Append(stringItem41);
            sharedItems8.Append(stringItem42);
            sharedItems8.Append(stringItem43);

            cacheField9.Append(sharedItems8);

            CacheField cacheField10 = new CacheField(){ Name = "Quantity", NumberFormatId = 0U };
            SharedItems sharedItems9 = new SharedItems(){ ContainsSemiMixedTypes = false, ContainsString = false, ContainsNumber = true, ContainsInteger = true, MinValue = 13D, MaxValue = 27D };

            cacheField10.Append(sharedItems9);

            CacheField cacheField11 = new CacheField(){ Name = "Price", NumberFormatId = 0U };
            SharedItems sharedItems10 = new SharedItems(){ ContainsSemiMixedTypes = false, ContainsString = false, ContainsNumber = true, ContainsInteger = true, MinValue = 800D, MaxValue = 11529D };

            cacheField11.Append(sharedItems10);

            CacheField cacheField12 = new CacheField(){ Name = "DeliveryDate", NumberFormatId = 14U };
            SharedItems sharedItems11 = new SharedItems(){ ContainsSemiMixedTypes = false, ContainsNonDate = false, ContainsDate = true, ContainsString = false, MinDate = System.Xml.XmlConvert.ToDateTime("2000-01-02T04:31:50Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), MaxDate = System.Xml.XmlConvert.ToDateTime("2003-01-01T04:01:28Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            cacheField12.Append(sharedItems11);

            CacheField cacheField13 = new CacheField(){ Name = "Employee", NumberFormatId = 0U };
            SharedItems sharedItems12 = new SharedItems();

            cacheField13.Append(sharedItems12);

            cacheFields2.Append(cacheField8);
            cacheFields2.Append(cacheField9);
            cacheFields2.Append(cacheField10);
            cacheFields2.Append(cacheField11);
            cacheFields2.Append(cacheField12);
            cacheFields2.Append(cacheField13);

            PivotCacheDefinitionExtensionList pivotCacheDefinitionExtensionList2 = new PivotCacheDefinitionExtensionList();

            PivotCacheDefinitionExtension pivotCacheDefinitionExtension2 = new PivotCacheDefinitionExtension(){ Uri = "{725AE2AE-9491-48be-B2B4-4EB974FC3084}" };
            pivotCacheDefinitionExtension2.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");
            X14.PivotCacheDefinition pivotCacheDefinition4 = new X14.PivotCacheDefinition(){ PivotCacheId = 1U };

            pivotCacheDefinitionExtension2.Append(pivotCacheDefinition4);

            pivotCacheDefinitionExtensionList2.Append(pivotCacheDefinitionExtension2);

            pivotCacheDefinition3.Append(cacheSource2);
            pivotCacheDefinition3.Append(cacheFields2);
            pivotCacheDefinition3.Append(pivotCacheDefinitionExtensionList2);

            pivotTableCacheDefinitionPart2.PivotCacheDefinition = pivotCacheDefinition3;
        }

        // Generates content of pivotTableCacheRecordsPart2.
        private static void GeneratePivotTableCacheRecordsPart2Content(PivotTableCacheRecordsPart pivotTableCacheRecordsPart2)
        {
            PivotCacheRecords pivotCacheRecords2 = new PivotCacheRecords(){ Count = 5U };
            pivotCacheRecords2.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            PivotCacheRecord pivotCacheRecord5 = new PivotCacheRecord();
            FieldItem fieldItem26 = new FieldItem(){ Val = 0U };
            FieldItem fieldItem27 = new FieldItem(){ Val = 0U };
            NumberItem numberItem9 = new NumberItem(){ Val = 13D };
            NumberItem numberItem10 = new NumberItem(){ Val = 1287D };
            DateTimeItem dateTimeItem14 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-02T04:31:50Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            StringItem stringItem44 = new StringItem(){ Val = "sales staff H" };

            pivotCacheRecord5.Append(fieldItem26);
            pivotCacheRecord5.Append(fieldItem27);
            pivotCacheRecord5.Append(numberItem9);
            pivotCacheRecord5.Append(numberItem10);
            pivotCacheRecord5.Append(dateTimeItem14);
            pivotCacheRecord5.Append(stringItem44);

            PivotCacheRecord pivotCacheRecord6 = new PivotCacheRecord();
            FieldItem fieldItem28 = new FieldItem(){ Val = 1U };
            FieldItem fieldItem29 = new FieldItem(){ Val = 1U };
            NumberItem numberItem11 = new NumberItem(){ Val = 27D };
            NumberItem numberItem12 = new NumberItem(){ Val = 11529D };
            DateTimeItem dateTimeItem15 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-04T03:14:24Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            StringItem stringItem45 = new StringItem(){ Val = "sales staff I" };

            pivotCacheRecord6.Append(fieldItem28);
            pivotCacheRecord6.Append(fieldItem29);
            pivotCacheRecord6.Append(numberItem11);
            pivotCacheRecord6.Append(numberItem12);
            pivotCacheRecord6.Append(dateTimeItem15);
            pivotCacheRecord6.Append(stringItem45);

            PivotCacheRecord pivotCacheRecord7 = new PivotCacheRecord();
            FieldItem fieldItem30 = new FieldItem(){ Val = 2U };
            FieldItem fieldItem31 = new FieldItem(){ Val = 0U };
            NumberItem numberItem13 = new NumberItem(){ Val = 19D };
            NumberItem numberItem14 = new NumberItem(){ Val = 1881D };
            DateTimeItem dateTimeItem16 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-03T11:10:19Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            StringItem stringItem46 = new StringItem(){ Val = "sales staff J" };

            pivotCacheRecord7.Append(fieldItem30);
            pivotCacheRecord7.Append(fieldItem31);
            pivotCacheRecord7.Append(numberItem13);
            pivotCacheRecord7.Append(numberItem14);
            pivotCacheRecord7.Append(dateTimeItem16);
            pivotCacheRecord7.Append(stringItem46);

            PivotCacheRecord pivotCacheRecord8 = new PivotCacheRecord();
            FieldItem fieldItem32 = new FieldItem(){ Val = 3U };
            FieldItem fieldItem33 = new FieldItem(){ Val = 2U };
            NumberItem numberItem15 = new NumberItem(){ Val = 25D };
            NumberItem numberItem16 = new NumberItem(){ Val = 1250D };
            DateTimeItem dateTimeItem17 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2000-01-02T06:54:09Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            StringItem stringItem47 = new StringItem(){ Val = "sales staff B" };

            pivotCacheRecord8.Append(fieldItem32);
            pivotCacheRecord8.Append(fieldItem33);
            pivotCacheRecord8.Append(numberItem15);
            pivotCacheRecord8.Append(numberItem16);
            pivotCacheRecord8.Append(dateTimeItem17);
            pivotCacheRecord8.Append(stringItem47);

            PivotCacheRecord pivotCacheRecord9 = new PivotCacheRecord();
            FieldItem fieldItem34 = new FieldItem(){ Val = 4U };
            FieldItem fieldItem35 = new FieldItem(){ Val = 2U };
            NumberItem numberItem17 = new NumberItem(){ Val = 16D };
            NumberItem numberItem18 = new NumberItem(){ Val = 800D };
            DateTimeItem dateTimeItem18 = new DateTimeItem(){ Val = System.Xml.XmlConvert.ToDateTime("2003-01-01T04:01:28Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            StringItem stringItem48 = new StringItem(){ Val = "sales staff F" };

            pivotCacheRecord9.Append(fieldItem34);
            pivotCacheRecord9.Append(fieldItem35);
            pivotCacheRecord9.Append(numberItem17);
            pivotCacheRecord9.Append(numberItem18);
            pivotCacheRecord9.Append(dateTimeItem18);
            pivotCacheRecord9.Append(stringItem48);

            pivotCacheRecords2.Append(pivotCacheRecord5);
            pivotCacheRecords2.Append(pivotCacheRecord6);
            pivotCacheRecords2.Append(pivotCacheRecord7);
            pivotCacheRecords2.Append(pivotCacheRecord8);
            pivotCacheRecords2.Append(pivotCacheRecord9);

            pivotTableCacheRecordsPart2.PivotCacheRecords = pivotCacheRecords2;
        }

        // Generates content of timeLineCachePart2.
        private static void GenerateTimeLineCachePart2Content(TimeLineCachePart timeLineCachePart2)
        {
            X15.TimelineCacheDefinition timelineCacheDefinition2 = new X15.TimelineCacheDefinition(){ Name = "NativeTimeline_DeliveryDate6", SourceName = "DeliveryDate" };
            timelineCacheDefinition2.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCachePivotTables timelineCachePivotTables2 = new X15.TimelineCachePivotTables();
            X15.TimelineCachePivotTable timelineCachePivotTable2 = new X15.TimelineCachePivotTable(){ TabId = 10U, Name = "PivotTable1" };

            timelineCachePivotTables2.Append(timelineCachePivotTable2);

            X15.TimelineState timelineState2 = new X15.TimelineState(){ MinimalRefreshVersion = 6U, LastRefreshVersion = 6U, PivotCacheId = 2U, FilterType = PivotFilterValues.Unknown };
            X15.BoundsTimelineRange boundsTimelineRange2 = new X15.BoundsTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2004-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelineState2.Append(boundsTimelineRange2);

            timelineCacheDefinition2.Append(timelineCachePivotTables2);
            timelineCacheDefinition2.Append(timelineState2);

            timeLineCachePart2.TimelineCacheDefinition = timelineCacheDefinition2;
        }

        // Generates content of worksheetPart3.
        private static void GenerateWorksheetPart3Content(WorksheetPart worksheetPart3)
        {
            Worksheet worksheet3 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet3.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet3.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet3.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension3 = new SheetDimension(){ Reference = "A1:B5" };

            SheetViews sheetViews3 = new SheetViews();
            SheetView sheetView3 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews3.Append(sheetView3);
            SheetFormatProperties sheetFormatProperties3 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns3 = new Columns();
            Column column9 = new Column(){ Min = 1U, Max = 1U, Width = 14.140625D, BestFit = true, CustomWidth = true };
            Column column10 = new Column(){ Min = 2U, Max = 2U, Width = 17.42578125D, CustomWidth = true };
            Column column11 = new Column(){ Min = 3U, Max = 3U, Width = 12.42578125D, CustomWidth = true };
            Column column12 = new Column(){ Min = 4U, Max = 11U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column13 = new Column(){ Min = 12U, Max = 12U, Width = 13D, CustomWidth = true };
            Column column14 = new Column(){ Min = 13U, Max = 20U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column15 = new Column(){ Min = 21U, Max = 23U, Width = 20.42578125D, BestFit = true, CustomWidth = true };

            columns3.Append(column9);
            columns3.Append(column10);
            columns3.Append(column11);
            columns3.Append(column12);
            columns3.Append(column13);
            columns3.Append(column14);
            columns3.Append(column15);

            SheetData sheetData3 = new SheetData();

            Row row11 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell21 = new Cell(){ CellReference = "A1", StyleIndex = 5U, DataType = CellValues.SharedString };
            CellValue cellValue21 = new CellValue();
            cellValue21.Text = "29";

            cell21.Append(cellValue21);

            Cell cell22 = new Cell(){ CellReference = "B1", DataType = CellValues.SharedString };
            CellValue cellValue22 = new CellValue();
            cellValue22.Text = "28";

            cell22.Append(cellValue22);

            row11.Append(cell21);
            row11.Append(cell22);

            Row row12 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell23 = new Cell(){ CellReference = "A2", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue23 = new CellValue();
            cellValue23.Text = "6";

            cell23.Append(cellValue23);

            Cell cell24 = new Cell(){ CellReference = "B2", StyleIndex = 7U };
            CellValue cellValue24 = new CellValue();
            cellValue24.Text = "19";

            cell24.Append(cellValue24);

            row12.Append(cell23);
            row12.Append(cell24);

            Row row13 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell25 = new Cell(){ CellReference = "A3", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue25 = new CellValue();
            cellValue25.Text = "8";

            cell25.Append(cellValue25);

            Cell cell26 = new Cell(){ CellReference = "B3", StyleIndex = 7U };
            CellValue cellValue26 = new CellValue();
            cellValue26.Text = "13";

            cell26.Append(cellValue26);

            row13.Append(cell25);
            row13.Append(cell26);

            Row row14 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell27 = new Cell(){ CellReference = "A4", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue27 = new CellValue();
            cellValue27.Text = "11";

            cell27.Append(cellValue27);

            Cell cell28 = new Cell(){ CellReference = "B4", StyleIndex = 7U };
            CellValue cellValue28 = new CellValue();
            cellValue28.Text = "33";

            cell28.Append(cellValue28);

            row14.Append(cell27);
            row14.Append(cell28);

            Row row15 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell29 = new Cell(){ CellReference = "A5", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue29 = new CellValue();
            cellValue29.Text = "30";

            cell29.Append(cellValue29);

            Cell cell30 = new Cell(){ CellReference = "B5", StyleIndex = 7U };
            CellValue cellValue30 = new CellValue();
            cellValue30.Text = "65";

            cell30.Append(cellValue30);

            row15.Append(cell29);
            row15.Append(cell30);

            sheetData3.Append(row11);
            sheetData3.Append(row12);
            sheetData3.Append(row13);
            sheetData3.Append(row14);
            sheetData3.Append(row15);
            PhoneticProperties phoneticProperties3 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins7 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            S.Drawing drawing3 = new S.Drawing(){ Id = "rId2" };

            WorksheetExtensionList worksheetExtensionList3 = new WorksheetExtensionList();

            WorksheetExtension worksheetExtension3 = new WorksheetExtension(){ Uri = "{7E03D99C-DC04-49d9-9315-930204A7B6E9}" };
            worksheetExtension3.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineReferences timelineReferences3 = new X15.TimelineReferences();
            X15.TimelineReference timelineReference3 = new X15.TimelineReference(){ Id = "rId3" };

            timelineReferences3.Append(timelineReference3);

            worksheetExtension3.Append(timelineReferences3);

            worksheetExtensionList3.Append(worksheetExtension3);

            worksheet3.Append(sheetDimension3);
            worksheet3.Append(sheetViews3);
            worksheet3.Append(sheetFormatProperties3);
            worksheet3.Append(columns3);
            worksheet3.Append(sheetData3);
            worksheet3.Append(phoneticProperties3);
            worksheet3.Append(pageMargins7);
            worksheet3.Append(drawing3);
            worksheet3.Append(worksheetExtensionList3);

            worksheetPart3.Worksheet = worksheet3;
        }

        // Generates content of timeLinePart3.
        private static void GenerateTimeLinePart3Content(TimeLinePart timeLinePart3)
        {
            X15.Timelines timelines3 = new X15.Timelines(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x" }  };
            timelines3.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            timelines3.AddNamespaceDeclaration("x", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");
            X15.Timeline timeline5 = new X15.Timeline(){ Name = "DeliveryDate 8", Cache = "NativeTimeline_DeliveryDate3", Caption = "ShowSelectionLabel1", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline6 = new X15.Timeline(){ Name = "DeliveryDate 9", Cache = "NativeTimeline_DeliveryDate3", Caption = "ShowSelectionLabel2", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelines3.Append(timeline5);
            timelines3.Append(timeline6);

            timeLinePart3.Timelines = timelines3;
        }

        // Generates content of drawingsPart3.
        private static void GenerateDrawingsPart3Content(DrawingsPart drawingsPart3)
        {
            Xdr.WorksheetDrawing worksheetDrawing3 = new Xdr.WorksheetDrawing();
            worksheetDrawing3.AddNamespaceDeclaration("xdr", "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing");
            worksheetDrawing3.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            Xdr.TwoCellAnchor twoCellAnchor9 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker9 = new Xdr.FromMarker();
            Xdr.ColumnId columnId17 = new Xdr.ColumnId();
            columnId17.Text = "2";
            Xdr.ColumnOffset columnOffset17 = new Xdr.ColumnOffset();
            columnOffset17.Text = "185737";
            Xdr.RowId rowId17 = new Xdr.RowId();
            rowId17.Text = "0";
            Xdr.RowOffset rowOffset17 = new Xdr.RowOffset();
            rowOffset17.Text = "0";

            fromMarker9.Append(columnId17);
            fromMarker9.Append(columnOffset17);
            fromMarker9.Append(rowId17);
            fromMarker9.Append(rowOffset17);

            Xdr.ToMarker toMarker9 = new Xdr.ToMarker();
            Xdr.ColumnId columnId18 = new Xdr.ColumnId();
            columnId18.Text = "9";
            Xdr.ColumnOffset columnOffset18 = new Xdr.ColumnOffset();
            columnOffset18.Text = "90487";
            Xdr.RowId rowId18 = new Xdr.RowId();
            rowId18.Text = "14";
            Xdr.RowOffset rowOffset18 = new Xdr.RowOffset();
            rowOffset18.Text = "76200";

            toMarker9.Append(columnId18);
            toMarker9.Append(columnOffset18);
            toMarker9.Append(rowId18);
            toMarker9.Append(rowOffset18);

            Xdr.GraphicFrame graphicFrame9 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties9 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties13 = new Xdr.NonVisualDrawingProperties(){ Id = 2U, Name = "Chart 1" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties9 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks3 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties9.Append(graphicFrameLocks3);

            nonVisualGraphicFrameProperties9.Append(nonVisualDrawingProperties13);
            nonVisualGraphicFrameProperties9.Append(nonVisualGraphicFrameDrawingProperties9);

            Xdr.Transform transform9 = new Xdr.Transform();
            A.Offset offset13 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents13 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform9.Append(offset13);
            transform9.Append(extents13);

            A.Graphic graphic9 = new A.Graphic();

            A.GraphicData graphicData9 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference5 = new C.ChartReference(){ Id = "rId1" };
            chartReference5.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference5.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData9.Append(chartReference5);

            graphic9.Append(graphicData9);

            graphicFrame9.Append(nonVisualGraphicFrameProperties9);
            graphicFrame9.Append(transform9);
            graphicFrame9.Append(graphic9);
            Xdr.ClientData clientData9 = new Xdr.ClientData();

            twoCellAnchor9.Append(fromMarker9);
            twoCellAnchor9.Append(toMarker9);
            twoCellAnchor9.Append(graphicFrame9);
            twoCellAnchor9.Append(clientData9);

            Xdr.TwoCellAnchor twoCellAnchor10 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker10 = new Xdr.FromMarker();
            Xdr.ColumnId columnId19 = new Xdr.ColumnId();
            columnId19.Text = "2";
            Xdr.ColumnOffset columnOffset19 = new Xdr.ColumnOffset();
            columnOffset19.Text = "200025";
            Xdr.RowId rowId19 = new Xdr.RowId();
            rowId19.Text = "14";
            Xdr.RowOffset rowOffset19 = new Xdr.RowOffset();
            rowOffset19.Text = "147637";

            fromMarker10.Append(columnId19);
            fromMarker10.Append(columnOffset19);
            fromMarker10.Append(rowId19);
            fromMarker10.Append(rowOffset19);

            Xdr.ToMarker toMarker10 = new Xdr.ToMarker();
            Xdr.ColumnId columnId20 = new Xdr.ColumnId();
            columnId20.Text = "7";
            Xdr.ColumnOffset columnOffset20 = new Xdr.ColumnOffset();
            columnOffset20.Text = "476250";
            Xdr.RowId rowId20 = new Xdr.RowId();
            rowId20.Text = "29";
            Xdr.RowOffset rowOffset20 = new Xdr.RowOffset();
            rowOffset20.Text = "33337";

            toMarker10.Append(columnId20);
            toMarker10.Append(columnOffset20);
            toMarker10.Append(rowId20);
            toMarker10.Append(rowOffset20);

            Xdr.GraphicFrame graphicFrame10 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties10 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties14 = new Xdr.NonVisualDrawingProperties(){ Id = 3U, Name = "グラフ 2" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties10 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks4 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties10.Append(graphicFrameLocks4);

            nonVisualGraphicFrameProperties10.Append(nonVisualDrawingProperties14);
            nonVisualGraphicFrameProperties10.Append(nonVisualGraphicFrameDrawingProperties10);

            Xdr.Transform transform10 = new Xdr.Transform();
            A.Offset offset14 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents14 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform10.Append(offset14);
            transform10.Append(extents14);

            A.Graphic graphic10 = new A.Graphic();

            A.GraphicData graphicData10 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference6 = new C.ChartReference(){ Id = "rId2" };
            chartReference6.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference6.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData10.Append(chartReference6);

            graphic10.Append(graphicData10);

            graphicFrame10.Append(nonVisualGraphicFrameProperties10);
            graphicFrame10.Append(transform10);
            graphicFrame10.Append(graphic10);
            Xdr.ClientData clientData10 = new Xdr.ClientData();

            twoCellAnchor10.Append(fromMarker10);
            twoCellAnchor10.Append(toMarker10);
            twoCellAnchor10.Append(graphicFrame10);
            twoCellAnchor10.Append(clientData10);

            Xdr.TwoCellAnchor twoCellAnchor11 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker11 = new Xdr.FromMarker();
            Xdr.ColumnId columnId21 = new Xdr.ColumnId();
            columnId21.Text = "10";
            Xdr.ColumnOffset columnOffset21 = new Xdr.ColumnOffset();
            columnOffset21.Text = "28575";
            Xdr.RowId rowId21 = new Xdr.RowId();
            rowId21.Text = "1";
            Xdr.RowOffset rowOffset21 = new Xdr.RowOffset();
            rowOffset21.Text = "9525";

            fromMarker11.Append(columnId21);
            fromMarker11.Append(columnOffset21);
            fromMarker11.Append(rowId21);
            fromMarker11.Append(rowOffset21);

            Xdr.ToMarker toMarker11 = new Xdr.ToMarker();
            Xdr.ColumnId columnId22 = new Xdr.ColumnId();
            columnId22.Text = "13";
            Xdr.ColumnOffset columnOffset22 = new Xdr.ColumnOffset();
            columnOffset22.Text = "762000";
            Xdr.RowId rowId22 = new Xdr.RowId();
            rowId22.Text = "7";
            Xdr.RowOffset rowOffset22 = new Xdr.RowOffset();
            rowOffset22.Text = "57150";

            toMarker11.Append(columnId22);
            toMarker11.Append(columnOffset22);
            toMarker11.Append(rowId22);
            toMarker11.Append(rowOffset22);

            AlternateContent alternateContent10 = new AlternateContent();
            alternateContent10.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent10.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice10 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame11 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties11 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties15 = new Xdr.NonVisualDrawingProperties(){ Id = 4U, Name = "DeliveryDate 8" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties11 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties11.Append(nonVisualDrawingProperties15);
            nonVisualGraphicFrameProperties11.Append(nonVisualGraphicFrameDrawingProperties11);

            Xdr.Transform transform11 = new Xdr.Transform();
            A.Offset offset15 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents15 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform11.Append(offset15);
            transform11.Append(extents15);

            A.Graphic graphic11 = new A.Graphic();

            A.GraphicData graphicData11 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer5 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 8" };
            timeSlicer5.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData11.Append(timeSlicer5);

            graphic11.Append(graphicData11);

            graphicFrame11.Append(nonVisualGraphicFrameProperties11);
            graphicFrame11.Append(transform11);
            graphicFrame11.Append(graphic11);

            alternateContentChoice10.Append(graphicFrame11);

            AlternateContentFallback alternateContentFallback9 = new AlternateContentFallback();
            alternateContentFallback9.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback9.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape5 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties5 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties16 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties5 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks5 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties5.Append(shapeLocks5);

            nonVisualShapeProperties5.Append(nonVisualDrawingProperties16);
            nonVisualShapeProperties5.Append(nonVisualShapeDrawingProperties5);

            Xdr.ShapeProperties shapeProperties13 = new Xdr.ShapeProperties();

            A.Transform2D transform2D5 = new A.Transform2D();
            A.Offset offset16 = new A.Offset(){ X = 8629650L, Y = 200025L };
            A.Extents extents16 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D5.Append(offset16);
            transform2D5.Append(extents16);

            A.PresetGeometry presetGeometry5 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList5 = new A.AdjustValueList();

            presetGeometry5.Append(adjustValueList5);

            A.SolidFill solidFill23 = new A.SolidFill();
            A.PresetColor presetColor9 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill23.Append(presetColor9);

            A.Outline outline18 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill24 = new A.SolidFill();
            A.PresetColor presetColor10 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill24.Append(presetColor10);

            outline18.Append(solidFill24);

            shapeProperties13.Append(transform2D5);
            shapeProperties13.Append(presetGeometry5);
            shapeProperties13.Append(solidFill23);
            shapeProperties13.Append(outline18);

            Xdr.TextBody textBody5 = new Xdr.TextBody();
            A.BodyProperties bodyProperties9 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle9 = new A.ListStyle();

            A.Paragraph paragraph9 = new A.Paragraph();

            A.Run run5 = new A.Run();
            A.RunProperties runProperties5 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text5 = new A.Text();
            text5.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run5.Append(runProperties5);
            run5.Append(text5);

            paragraph9.Append(run5);

            textBody5.Append(bodyProperties9);
            textBody5.Append(listStyle9);
            textBody5.Append(paragraph9);

            shape5.Append(nonVisualShapeProperties5);
            shape5.Append(shapeProperties13);
            shape5.Append(textBody5);

            alternateContentFallback9.Append(shape5);

            alternateContent10.Append(alternateContentChoice10);
            alternateContent10.Append(alternateContentFallback9);
            Xdr.ClientData clientData11 = new Xdr.ClientData();

            twoCellAnchor11.Append(fromMarker11);
            twoCellAnchor11.Append(toMarker11);
            twoCellAnchor11.Append(alternateContent10);
            twoCellAnchor11.Append(clientData11);

            Xdr.TwoCellAnchor twoCellAnchor12 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker12 = new Xdr.FromMarker();
            Xdr.ColumnId columnId23 = new Xdr.ColumnId();
            columnId23.Text = "10";
            Xdr.ColumnOffset columnOffset23 = new Xdr.ColumnOffset();
            columnOffset23.Text = "28575";
            Xdr.RowId rowId23 = new Xdr.RowId();
            rowId23.Text = "8";
            Xdr.RowOffset rowOffset23 = new Xdr.RowOffset();
            rowOffset23.Text = "114300";

            fromMarker12.Append(columnId23);
            fromMarker12.Append(columnOffset23);
            fromMarker12.Append(rowId23);
            fromMarker12.Append(rowOffset23);

            Xdr.ToMarker toMarker12 = new Xdr.ToMarker();
            Xdr.ColumnId columnId24 = new Xdr.ColumnId();
            columnId24.Text = "13";
            Xdr.ColumnOffset columnOffset24 = new Xdr.ColumnOffset();
            columnOffset24.Text = "762000";
            Xdr.RowId rowId24 = new Xdr.RowId();
            rowId24.Text = "14";
            Xdr.RowOffset rowOffset24 = new Xdr.RowOffset();
            rowOffset24.Text = "161925";

            toMarker12.Append(columnId24);
            toMarker12.Append(columnOffset24);
            toMarker12.Append(rowId24);
            toMarker12.Append(rowOffset24);

            AlternateContent alternateContent11 = new AlternateContent();
            alternateContent11.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent11.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice11 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame12 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties12 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties17 = new Xdr.NonVisualDrawingProperties(){ Id = 5U, Name = "DeliveryDate 9" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties12 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties12.Append(nonVisualDrawingProperties17);
            nonVisualGraphicFrameProperties12.Append(nonVisualGraphicFrameDrawingProperties12);

            Xdr.Transform transform12 = new Xdr.Transform();
            A.Offset offset17 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents17 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform12.Append(offset17);
            transform12.Append(extents17);

            A.Graphic graphic12 = new A.Graphic();

            A.GraphicData graphicData12 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer6 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 9" };
            timeSlicer6.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData12.Append(timeSlicer6);

            graphic12.Append(graphicData12);

            graphicFrame12.Append(nonVisualGraphicFrameProperties12);
            graphicFrame12.Append(transform12);
            graphicFrame12.Append(graphic12);

            alternateContentChoice11.Append(graphicFrame12);

            AlternateContentFallback alternateContentFallback10 = new AlternateContentFallback();
            alternateContentFallback10.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback10.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape6 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties6 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties18 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties6 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks6 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties6.Append(shapeLocks6);

            nonVisualShapeProperties6.Append(nonVisualDrawingProperties18);
            nonVisualShapeProperties6.Append(nonVisualShapeDrawingProperties6);

            Xdr.ShapeProperties shapeProperties14 = new Xdr.ShapeProperties();

            A.Transform2D transform2D6 = new A.Transform2D();
            A.Offset offset18 = new A.Offset(){ X = 8629650L, Y = 1638300L };
            A.Extents extents18 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D6.Append(offset18);
            transform2D6.Append(extents18);

            A.PresetGeometry presetGeometry6 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList6 = new A.AdjustValueList();

            presetGeometry6.Append(adjustValueList6);

            A.SolidFill solidFill25 = new A.SolidFill();
            A.PresetColor presetColor11 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill25.Append(presetColor11);

            A.Outline outline19 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill26 = new A.SolidFill();
            A.PresetColor presetColor12 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill26.Append(presetColor12);

            outline19.Append(solidFill26);

            shapeProperties14.Append(transform2D6);
            shapeProperties14.Append(presetGeometry6);
            shapeProperties14.Append(solidFill25);
            shapeProperties14.Append(outline19);

            Xdr.TextBody textBody6 = new Xdr.TextBody();
            A.BodyProperties bodyProperties10 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle10 = new A.ListStyle();

            A.Paragraph paragraph10 = new A.Paragraph();

            A.Run run6 = new A.Run();
            A.RunProperties runProperties6 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text6 = new A.Text();
            text6.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run6.Append(runProperties6);
            run6.Append(text6);

            paragraph10.Append(run6);

            textBody6.Append(bodyProperties10);
            textBody6.Append(listStyle10);
            textBody6.Append(paragraph10);

            shape6.Append(nonVisualShapeProperties6);
            shape6.Append(shapeProperties14);
            shape6.Append(textBody6);

            alternateContentFallback10.Append(shape6);

            alternateContent11.Append(alternateContentChoice11);
            alternateContent11.Append(alternateContentFallback10);
            Xdr.ClientData clientData12 = new Xdr.ClientData();

            twoCellAnchor12.Append(fromMarker12);
            twoCellAnchor12.Append(toMarker12);
            twoCellAnchor12.Append(alternateContent11);
            twoCellAnchor12.Append(clientData12);

            worksheetDrawing3.Append(twoCellAnchor9);
            worksheetDrawing3.Append(twoCellAnchor10);
            worksheetDrawing3.Append(twoCellAnchor11);
            worksheetDrawing3.Append(twoCellAnchor12);

            drawingsPart3.WorksheetDrawing = worksheetDrawing3;
        }

        // Generates content of chartPart5.
        private static void GenerateChartPart5Content(ChartPart chartPart5)
        {
            C.ChartSpace chartSpace5 = new C.ChartSpace();
            chartSpace5.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace5.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace5.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date19045 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage5 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners5 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent12 = new AlternateContent();
            alternateContent12.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice12 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice12.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style9 = new C14.Style(){ Val = 102 };

            alternateContentChoice12.Append(style9);

            AlternateContentFallback alternateContentFallback11 = new AlternateContentFallback();
            C.Style style10 = new C.Style(){ Val = 2 };

            alternateContentFallback11.Append(style10);

            alternateContent12.Append(alternateContentChoice12);
            alternateContent12.Append(alternateContentFallback11);

            C.PivotSource pivotSource5 = new C.PivotSource();
            C.PivotTableName pivotTableName5 = new C.PivotTableName();
            pivotTableName5.Text = "[GeneratedDocument.xlsx]ShowSelectionLabel!PivotTable1";
            C.FormatId formatId5 = new C.FormatId(){ Val = 12U };

            pivotSource5.Append(pivotTableName5);
            pivotSource5.Append(formatId5);

            C.Chart chart5 = new C.Chart();

            C.Title title5 = new C.Title();
            C.Overlay overlay9 = new C.Overlay(){ Val = false };

            title5.Append(overlay9);
            C.AutoTitleDeleted autoTitleDeleted5 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats5 = new C.PivotFormats();

            C.PivotFormat pivotFormat26 = new C.PivotFormat();
            C.Index index30 = new C.Index(){ Val = 0U };

            C.Marker marker26 = new C.Marker();
            C.Symbol symbol26 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker26.Append(symbol26);

            pivotFormat26.Append(index30);
            pivotFormat26.Append(marker26);

            C.PivotFormat pivotFormat27 = new C.PivotFormat();
            C.Index index31 = new C.Index(){ Val = 1U };

            C.Marker marker27 = new C.Marker();
            C.Symbol symbol27 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker27.Append(symbol27);

            pivotFormat27.Append(index31);
            pivotFormat27.Append(marker27);

            C.PivotFormat pivotFormat28 = new C.PivotFormat();
            C.Index index32 = new C.Index(){ Val = 2U };

            C.Marker marker28 = new C.Marker();
            C.Symbol symbol28 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker28.Append(symbol28);

            pivotFormat28.Append(index32);
            pivotFormat28.Append(marker28);

            C.PivotFormat pivotFormat29 = new C.PivotFormat();
            C.Index index33 = new C.Index(){ Val = 3U };

            C.Marker marker29 = new C.Marker();
            C.Symbol symbol29 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker29.Append(symbol29);

            pivotFormat29.Append(index33);
            pivotFormat29.Append(marker29);

            pivotFormats5.Append(pivotFormat26);
            pivotFormats5.Append(pivotFormat27);
            pivotFormats5.Append(pivotFormat28);
            pivotFormats5.Append(pivotFormat29);

            C.PlotArea plotArea5 = new C.PlotArea();
            C.Layout layout5 = new C.Layout();

            C.PieChart pieChart3 = new C.PieChart();
            C.VaryColors varyColors5 = new C.VaryColors(){ Val = true };

            C.PieChartSeries pieChartSeries3 = new C.PieChartSeries();
            C.Index index34 = new C.Index(){ Val = 0U };
            C.Order order5 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText5 = new C.SeriesText();

            C.StringReference stringReference9 = new C.StringReference();
            C.Formula formula13 = new C.Formula();
            formula13.Text = "ShowSelectionLabel!$B$1";

            C.StringCache stringCache9 = new C.StringCache();
            C.PointCount pointCount13 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint17 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue29 = new C.NumericValue();
            numericValue29.Text = "Total";

            stringPoint17.Append(numericValue29);

            stringCache9.Append(pointCount13);
            stringCache9.Append(stringPoint17);

            stringReference9.Append(formula13);
            stringReference9.Append(stringCache9);

            seriesText5.Append(stringReference9);

            C.CategoryAxisData categoryAxisData5 = new C.CategoryAxisData();

            C.StringReference stringReference10 = new C.StringReference();
            C.Formula formula14 = new C.Formula();
            formula14.Text = "ShowSelectionLabel!$A$2:$A$5";

            C.StringCache stringCache10 = new C.StringCache();
            C.PointCount pointCount14 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint18 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue30 = new C.NumericValue();
            numericValue30.Text = "product_A";

            stringPoint18.Append(numericValue30);

            C.StringPoint stringPoint19 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue31 = new C.NumericValue();
            numericValue31.Text = "product_D";

            stringPoint19.Append(numericValue31);

            C.StringPoint stringPoint20 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue32 = new C.NumericValue();
            numericValue32.Text = "product_E";

            stringPoint20.Append(numericValue32);

            stringCache10.Append(pointCount14);
            stringCache10.Append(stringPoint18);
            stringCache10.Append(stringPoint19);
            stringCache10.Append(stringPoint20);

            stringReference10.Append(formula14);
            stringReference10.Append(stringCache10);

            categoryAxisData5.Append(stringReference10);

            C.Values values5 = new C.Values();

            C.NumberReference numberReference5 = new C.NumberReference();
            C.Formula formula15 = new C.Formula();
            formula15.Text = "ShowSelectionLabel!$B$2:$B$5";

            C.NumberingCache numberingCache5 = new C.NumberingCache();
            C.FormatCode formatCode5 = new C.FormatCode();
            formatCode5.Text = "General";
            C.PointCount pointCount15 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint13 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue33 = new C.NumericValue();
            numericValue33.Text = "19";

            numericPoint13.Append(numericValue33);

            C.NumericPoint numericPoint14 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue34 = new C.NumericValue();
            numericValue34.Text = "13";

            numericPoint14.Append(numericValue34);

            C.NumericPoint numericPoint15 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue35 = new C.NumericValue();
            numericValue35.Text = "33";

            numericPoint15.Append(numericValue35);

            numberingCache5.Append(formatCode5);
            numberingCache5.Append(pointCount15);
            numberingCache5.Append(numericPoint13);
            numberingCache5.Append(numericPoint14);
            numberingCache5.Append(numericPoint15);

            numberReference5.Append(formula15);
            numberReference5.Append(numberingCache5);

            values5.Append(numberReference5);

            pieChartSeries3.Append(index34);
            pieChartSeries3.Append(order5);
            pieChartSeries3.Append(seriesText5);
            pieChartSeries3.Append(categoryAxisData5);
            pieChartSeries3.Append(values5);

            C.DataLabels dataLabels5 = new C.DataLabels();
            C.ShowLegendKey showLegendKey5 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue5 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName5 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName5 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent5 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize5 = new C.ShowBubbleSize(){ Val = false };
            C.ShowLeaderLines showLeaderLines3 = new C.ShowLeaderLines(){ Val = true };

            dataLabels5.Append(showLegendKey5);
            dataLabels5.Append(showValue5);
            dataLabels5.Append(showCategoryName5);
            dataLabels5.Append(showSeriesName5);
            dataLabels5.Append(showPercent5);
            dataLabels5.Append(showBubbleSize5);
            dataLabels5.Append(showLeaderLines3);
            C.FirstSliceAngle firstSliceAngle3 = new C.FirstSliceAngle(){ Val = (UInt16Value)0U };

            pieChart3.Append(varyColors5);
            pieChart3.Append(pieChartSeries3);
            pieChart3.Append(dataLabels5);
            pieChart3.Append(firstSliceAngle3);

            plotArea5.Append(layout5);
            plotArea5.Append(pieChart3);

            C.Legend legend5 = new C.Legend();
            C.LegendPosition legendPosition5 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay10 = new C.Overlay(){ Val = false };

            legend5.Append(legendPosition5);
            legend5.Append(overlay10);
            C.PlotVisibleOnly plotVisibleOnly5 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs5 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum5 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart5.Append(title5);
            chart5.Append(autoTitleDeleted5);
            chart5.Append(pivotFormats5);
            chart5.Append(plotArea5);
            chart5.Append(legend5);
            chart5.Append(plotVisibleOnly5);
            chart5.Append(displayBlanksAs5);
            chart5.Append(showDataLabelsOverMaximum5);

            C.PrintSettings printSettings5 = new C.PrintSettings();
            C.HeaderFooter headerFooter5 = new C.HeaderFooter();
            C.PageMargins pageMargins8 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup5 = new C.PageSetup();

            printSettings5.Append(headerFooter5);
            printSettings5.Append(pageMargins8);
            printSettings5.Append(pageSetup5);

            C.ChartSpaceExtensionList chartSpaceExtensionList5 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList5.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList5.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension5 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension5.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions5 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter5 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories5 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData5 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries5 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible5 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions5.Append(dropZoneFilter5);
            pivotOptions5.Append(dropZoneCategories5);
            pivotOptions5.Append(dropZoneData5);
            pivotOptions5.Append(dropZoneSeries5);
            pivotOptions5.Append(dropZonesVisible5);

            chartSpaceExtension5.Append(pivotOptions5);

            chartSpaceExtensionList5.Append(chartSpaceExtension5);

            chartSpace5.Append(date19045);
            chartSpace5.Append(editingLanguage5);
            chartSpace5.Append(roundedCorners5);
            chartSpace5.Append(alternateContent12);
            chartSpace5.Append(pivotSource5);
            chartSpace5.Append(chart5);
            chartSpace5.Append(printSettings5);
            chartSpace5.Append(chartSpaceExtensionList5);

            chartPart5.ChartSpace = chartSpace5;
        }

        // Generates content of chartPart6.
        private static void GenerateChartPart6Content(ChartPart chartPart6)
        {
            C.ChartSpace chartSpace6 = new C.ChartSpace();
            chartSpace6.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace6.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace6.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date19046 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage6 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners6 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent13 = new AlternateContent();
            alternateContent13.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice13 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice13.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style11 = new C14.Style(){ Val = 101 };

            alternateContentChoice13.Append(style11);

            AlternateContentFallback alternateContentFallback12 = new AlternateContentFallback();
            C.Style style12 = new C.Style(){ Val = 1 };

            alternateContentFallback12.Append(style12);

            alternateContent13.Append(alternateContentChoice13);
            alternateContent13.Append(alternateContentFallback12);

            C.PivotSource pivotSource6 = new C.PivotSource();
            C.PivotTableName pivotTableName6 = new C.PivotTableName();
            pivotTableName6.Text = "[GeneratedDocument.xlsx]ShowSelectionLabel!PivotTable1";
            C.FormatId formatId6 = new C.FormatId(){ Val = 11U };

            pivotSource6.Append(pivotTableName6);
            pivotSource6.Append(formatId6);

            C.Chart chart6 = new C.Chart();

            C.Title title6 = new C.Title();
            C.Overlay overlay11 = new C.Overlay(){ Val = false };

            title6.Append(overlay11);
            C.AutoTitleDeleted autoTitleDeleted6 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats6 = new C.PivotFormats();

            C.PivotFormat pivotFormat30 = new C.PivotFormat();
            C.Index index35 = new C.Index(){ Val = 0U };

            C.ShapeProperties shapeProperties15 = new C.ShapeProperties();

            A.SolidFill solidFill27 = new A.SolidFill();

            A.SchemeColor schemeColor15 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint8 = new A.Tint(){ Val = 100000 };

            schemeColor15.Append(tint8);

            solidFill27.Append(schemeColor15);

            A.Outline outline20 = new A.Outline();
            A.NoFill noFill15 = new A.NoFill();

            outline20.Append(noFill15);
            A.EffectList effectList14 = new A.EffectList();

            shapeProperties15.Append(solidFill27);
            shapeProperties15.Append(outline20);
            shapeProperties15.Append(effectList14);

            C.Marker marker30 = new C.Marker();
            C.Symbol symbol30 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker30.Append(symbol30);

            pivotFormat30.Append(index35);
            pivotFormat30.Append(shapeProperties15);
            pivotFormat30.Append(marker30);

            C.PivotFormat pivotFormat31 = new C.PivotFormat();
            C.Index index36 = new C.Index(){ Val = 1U };

            C.ShapeProperties shapeProperties16 = new C.ShapeProperties();

            A.SolidFill solidFill28 = new A.SolidFill();

            A.SchemeColor schemeColor16 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent2 };
            A.Tint tint9 = new A.Tint(){ Val = 100000 };

            schemeColor16.Append(tint9);

            solidFill28.Append(schemeColor16);

            A.Outline outline21 = new A.Outline();
            A.NoFill noFill16 = new A.NoFill();

            outline21.Append(noFill16);
            A.EffectList effectList15 = new A.EffectList();

            shapeProperties16.Append(solidFill28);
            shapeProperties16.Append(outline21);
            shapeProperties16.Append(effectList15);

            C.Marker marker31 = new C.Marker();
            C.Symbol symbol31 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker31.Append(symbol31);

            pivotFormat31.Append(index36);
            pivotFormat31.Append(shapeProperties16);
            pivotFormat31.Append(marker31);

            C.PivotFormat pivotFormat32 = new C.PivotFormat();
            C.Index index37 = new C.Index(){ Val = 2U };

            C.Marker marker32 = new C.Marker();
            C.Symbol symbol32 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker32.Append(symbol32);

            pivotFormat32.Append(index37);
            pivotFormat32.Append(marker32);

            C.PivotFormat pivotFormat33 = new C.PivotFormat();
            C.Index index38 = new C.Index(){ Val = 3U };

            C.Marker marker33 = new C.Marker();
            C.Symbol symbol33 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker33.Append(symbol33);

            pivotFormat33.Append(index38);
            pivotFormat33.Append(marker33);

            C.PivotFormat pivotFormat34 = new C.PivotFormat();
            C.Index index39 = new C.Index(){ Val = 4U };

            C.Marker marker34 = new C.Marker();
            C.Symbol symbol34 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker34.Append(symbol34);

            pivotFormat34.Append(index39);
            pivotFormat34.Append(marker34);

            C.PivotFormat pivotFormat35 = new C.PivotFormat();
            C.Index index40 = new C.Index(){ Val = 5U };

            C.Marker marker35 = new C.Marker();
            C.Symbol symbol35 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker35.Append(symbol35);

            pivotFormat35.Append(index40);
            pivotFormat35.Append(marker35);

            C.PivotFormat pivotFormat36 = new C.PivotFormat();
            C.Index index41 = new C.Index(){ Val = 6U };

            C.Marker marker36 = new C.Marker();
            C.Symbol symbol36 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker36.Append(symbol36);

            pivotFormat36.Append(index41);
            pivotFormat36.Append(marker36);

            C.PivotFormat pivotFormat37 = new C.PivotFormat();
            C.Index index42 = new C.Index(){ Val = 7U };

            C.Marker marker37 = new C.Marker();
            C.Symbol symbol37 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker37.Append(symbol37);

            pivotFormat37.Append(index42);
            pivotFormat37.Append(marker37);

            C.PivotFormat pivotFormat38 = new C.PivotFormat();
            C.Index index43 = new C.Index(){ Val = 8U };

            C.Marker marker38 = new C.Marker();
            C.Symbol symbol38 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker38.Append(symbol38);

            pivotFormat38.Append(index43);
            pivotFormat38.Append(marker38);

            C.PivotFormat pivotFormat39 = new C.PivotFormat();
            C.Index index44 = new C.Index(){ Val = 9U };

            C.Marker marker39 = new C.Marker();
            C.Symbol symbol39 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker39.Append(symbol39);

            pivotFormat39.Append(index44);
            pivotFormat39.Append(marker39);

            C.PivotFormat pivotFormat40 = new C.PivotFormat();
            C.Index index45 = new C.Index(){ Val = 10U };

            C.Marker marker40 = new C.Marker();
            C.Symbol symbol40 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker40.Append(symbol40);

            pivotFormat40.Append(index45);
            pivotFormat40.Append(marker40);

            C.PivotFormat pivotFormat41 = new C.PivotFormat();
            C.Index index46 = new C.Index(){ Val = 11U };

            C.Marker marker41 = new C.Marker();
            C.Symbol symbol41 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker41.Append(symbol41);

            pivotFormat41.Append(index46);
            pivotFormat41.Append(marker41);

            C.PivotFormat pivotFormat42 = new C.PivotFormat();
            C.Index index47 = new C.Index(){ Val = 12U };

            C.Marker marker42 = new C.Marker();
            C.Symbol symbol42 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker42.Append(symbol42);

            pivotFormat42.Append(index47);
            pivotFormat42.Append(marker42);

            C.PivotFormat pivotFormat43 = new C.PivotFormat();
            C.Index index48 = new C.Index(){ Val = 13U };

            C.Marker marker43 = new C.Marker();
            C.Symbol symbol43 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker43.Append(symbol43);

            pivotFormat43.Append(index48);
            pivotFormat43.Append(marker43);

            C.PivotFormat pivotFormat44 = new C.PivotFormat();
            C.Index index49 = new C.Index(){ Val = 14U };

            C.ShapeProperties shapeProperties17 = new C.ShapeProperties();

            A.SolidFill solidFill29 = new A.SolidFill();

            A.SchemeColor schemeColor17 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint10 = new A.Tint(){ Val = 100000 };

            schemeColor17.Append(tint10);

            solidFill29.Append(schemeColor17);

            A.Outline outline22 = new A.Outline();
            A.NoFill noFill17 = new A.NoFill();

            outline22.Append(noFill17);
            A.EffectList effectList16 = new A.EffectList();

            shapeProperties17.Append(solidFill29);
            shapeProperties17.Append(outline22);
            shapeProperties17.Append(effectList16);

            C.Marker marker44 = new C.Marker();
            C.Symbol symbol44 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker44.Append(symbol44);

            pivotFormat44.Append(index49);
            pivotFormat44.Append(shapeProperties17);
            pivotFormat44.Append(marker44);

            C.PivotFormat pivotFormat45 = new C.PivotFormat();
            C.Index index50 = new C.Index(){ Val = 15U };

            C.ShapeProperties shapeProperties18 = new C.ShapeProperties();

            A.SolidFill solidFill30 = new A.SolidFill();

            A.SchemeColor schemeColor18 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint11 = new A.Tint(){ Val = 100000 };

            schemeColor18.Append(tint11);

            solidFill30.Append(schemeColor18);

            A.Outline outline23 = new A.Outline();
            A.NoFill noFill18 = new A.NoFill();

            outline23.Append(noFill18);
            A.EffectList effectList17 = new A.EffectList();

            shapeProperties18.Append(solidFill30);
            shapeProperties18.Append(outline23);
            shapeProperties18.Append(effectList17);

            C.Marker marker45 = new C.Marker();
            C.Symbol symbol45 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker45.Append(symbol45);

            pivotFormat45.Append(index50);
            pivotFormat45.Append(shapeProperties18);
            pivotFormat45.Append(marker45);

            C.PivotFormat pivotFormat46 = new C.PivotFormat();
            C.Index index51 = new C.Index(){ Val = 16U };

            C.ShapeProperties shapeProperties19 = new C.ShapeProperties();

            A.SolidFill solidFill31 = new A.SolidFill();

            A.SchemeColor schemeColor19 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint12 = new A.Tint(){ Val = 100000 };

            schemeColor19.Append(tint12);

            solidFill31.Append(schemeColor19);

            A.Outline outline24 = new A.Outline();
            A.NoFill noFill19 = new A.NoFill();

            outline24.Append(noFill19);
            A.EffectList effectList18 = new A.EffectList();

            shapeProperties19.Append(solidFill31);
            shapeProperties19.Append(outline24);
            shapeProperties19.Append(effectList18);

            C.Marker marker46 = new C.Marker();
            C.Symbol symbol46 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker46.Append(symbol46);

            pivotFormat46.Append(index51);
            pivotFormat46.Append(shapeProperties19);
            pivotFormat46.Append(marker46);

            pivotFormats6.Append(pivotFormat30);
            pivotFormats6.Append(pivotFormat31);
            pivotFormats6.Append(pivotFormat32);
            pivotFormats6.Append(pivotFormat33);
            pivotFormats6.Append(pivotFormat34);
            pivotFormats6.Append(pivotFormat35);
            pivotFormats6.Append(pivotFormat36);
            pivotFormats6.Append(pivotFormat37);
            pivotFormats6.Append(pivotFormat38);
            pivotFormats6.Append(pivotFormat39);
            pivotFormats6.Append(pivotFormat40);
            pivotFormats6.Append(pivotFormat41);
            pivotFormats6.Append(pivotFormat42);
            pivotFormats6.Append(pivotFormat43);
            pivotFormats6.Append(pivotFormat44);
            pivotFormats6.Append(pivotFormat45);
            pivotFormats6.Append(pivotFormat46);

            C.PlotArea plotArea6 = new C.PlotArea();
            C.Layout layout6 = new C.Layout();

            C.BarChart barChart3 = new C.BarChart();
            C.BarDirection barDirection3 = new C.BarDirection(){ Val = C.BarDirectionValues.Column };
            C.BarGrouping barGrouping3 = new C.BarGrouping(){ Val = C.BarGroupingValues.Clustered };
            C.VaryColors varyColors6 = new C.VaryColors(){ Val = false };

            C.BarChartSeries barChartSeries3 = new C.BarChartSeries();
            C.Index index52 = new C.Index(){ Val = 0U };
            C.Order order6 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText6 = new C.SeriesText();

            C.StringReference stringReference11 = new C.StringReference();
            C.Formula formula16 = new C.Formula();
            formula16.Text = "ShowSelectionLabel!$B$1";

            C.StringCache stringCache11 = new C.StringCache();
            C.PointCount pointCount16 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint21 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue36 = new C.NumericValue();
            numericValue36.Text = "Total";

            stringPoint21.Append(numericValue36);

            stringCache11.Append(pointCount16);
            stringCache11.Append(stringPoint21);

            stringReference11.Append(formula16);
            stringReference11.Append(stringCache11);

            seriesText6.Append(stringReference11);

            C.ChartShapeProperties chartShapeProperties6 = new C.ChartShapeProperties();

            A.SolidFill solidFill32 = new A.SolidFill();

            A.SchemeColor schemeColor20 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint13 = new A.Tint(){ Val = 100000 };

            schemeColor20.Append(tint13);

            solidFill32.Append(schemeColor20);

            A.Outline outline25 = new A.Outline();
            A.NoFill noFill20 = new A.NoFill();

            outline25.Append(noFill20);
            A.EffectList effectList19 = new A.EffectList();

            chartShapeProperties6.Append(solidFill32);
            chartShapeProperties6.Append(outline25);
            chartShapeProperties6.Append(effectList19);
            C.InvertIfNegative invertIfNegative3 = new C.InvertIfNegative(){ Val = false };

            C.CategoryAxisData categoryAxisData6 = new C.CategoryAxisData();

            C.StringReference stringReference12 = new C.StringReference();
            C.Formula formula17 = new C.Formula();
            formula17.Text = "ShowSelectionLabel!$A$2:$A$5";

            C.StringCache stringCache12 = new C.StringCache();
            C.PointCount pointCount17 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint22 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue37 = new C.NumericValue();
            numericValue37.Text = "product_A";

            stringPoint22.Append(numericValue37);

            C.StringPoint stringPoint23 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue38 = new C.NumericValue();
            numericValue38.Text = "product_D";

            stringPoint23.Append(numericValue38);

            C.StringPoint stringPoint24 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue39 = new C.NumericValue();
            numericValue39.Text = "product_E";

            stringPoint24.Append(numericValue39);

            stringCache12.Append(pointCount17);
            stringCache12.Append(stringPoint22);
            stringCache12.Append(stringPoint23);
            stringCache12.Append(stringPoint24);

            stringReference12.Append(formula17);
            stringReference12.Append(stringCache12);

            categoryAxisData6.Append(stringReference12);

            C.Values values6 = new C.Values();

            C.NumberReference numberReference6 = new C.NumberReference();
            C.Formula formula18 = new C.Formula();
            formula18.Text = "ShowSelectionLabel!$B$2:$B$5";

            C.NumberingCache numberingCache6 = new C.NumberingCache();
            C.FormatCode formatCode6 = new C.FormatCode();
            formatCode6.Text = "General";
            C.PointCount pointCount18 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint16 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue40 = new C.NumericValue();
            numericValue40.Text = "19";

            numericPoint16.Append(numericValue40);

            C.NumericPoint numericPoint17 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue41 = new C.NumericValue();
            numericValue41.Text = "13";

            numericPoint17.Append(numericValue41);

            C.NumericPoint numericPoint18 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue42 = new C.NumericValue();
            numericValue42.Text = "33";

            numericPoint18.Append(numericValue42);

            numberingCache6.Append(formatCode6);
            numberingCache6.Append(pointCount18);
            numberingCache6.Append(numericPoint16);
            numberingCache6.Append(numericPoint17);
            numberingCache6.Append(numericPoint18);

            numberReference6.Append(formula18);
            numberReference6.Append(numberingCache6);

            values6.Append(numberReference6);

            barChartSeries3.Append(index52);
            barChartSeries3.Append(order6);
            barChartSeries3.Append(seriesText6);
            barChartSeries3.Append(chartShapeProperties6);
            barChartSeries3.Append(invertIfNegative3);
            barChartSeries3.Append(categoryAxisData6);
            barChartSeries3.Append(values6);

            C.DataLabels dataLabels6 = new C.DataLabels();
            C.ShowLegendKey showLegendKey6 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue6 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName6 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName6 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent6 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize6 = new C.ShowBubbleSize(){ Val = false };

            dataLabels6.Append(showLegendKey6);
            dataLabels6.Append(showValue6);
            dataLabels6.Append(showCategoryName6);
            dataLabels6.Append(showSeriesName6);
            dataLabels6.Append(showPercent6);
            dataLabels6.Append(showBubbleSize6);
            C.GapWidth gapWidth3 = new C.GapWidth(){ Val = (UInt16Value)219U };
            C.Overlap overlap2 = new C.Overlap(){ Val = -27 };
            C.AxisId axisId9 = new C.AxisId(){ Val = 209979552U };
            C.AxisId axisId10 = new C.AxisId(){ Val = 209979944U };

            barChart3.Append(barDirection3);
            barChart3.Append(barGrouping3);
            barChart3.Append(varyColors6);
            barChart3.Append(barChartSeries3);
            barChart3.Append(dataLabels6);
            barChart3.Append(gapWidth3);
            barChart3.Append(overlap2);
            barChart3.Append(axisId9);
            barChart3.Append(axisId10);

            C.CategoryAxis categoryAxis3 = new C.CategoryAxis();
            C.AxisId axisId11 = new C.AxisId(){ Val = 209979552U };

            C.Scaling scaling5 = new C.Scaling();
            C.Orientation orientation5 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling5.Append(orientation5);
            C.Delete delete5 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition5 = new C.AxisPosition(){ Val = C.AxisPositionValues.Bottom };
            C.NumberingFormat numberingFormat5 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = false };
            C.MajorTickMark majorTickMark5 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark5 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition5 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties7 = new C.ChartShapeProperties();
            A.NoFill noFill21 = new A.NoFill();

            A.Outline outline26 = new A.Outline();
            A.NoFill noFill22 = new A.NoFill();

            outline26.Append(noFill22);
            A.EffectList effectList20 = new A.EffectList();

            chartShapeProperties7.Append(noFill21);
            chartShapeProperties7.Append(outline26);
            chartShapeProperties7.Append(effectList20);

            C.TextProperties textProperties5 = new C.TextProperties();
            A.BodyProperties bodyProperties11 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle11 = new A.ListStyle();

            A.Paragraph paragraph11 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties5 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties5 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill33 = new A.SolidFill();

            A.SchemeColor schemeColor21 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation6 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset6 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor21.Append(luminanceModulation6);
            schemeColor21.Append(luminanceOffset6);

            solidFill33.Append(schemeColor21);
            A.LatinFont latinFont4 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont4 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont4 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties5.Append(solidFill33);
            defaultRunProperties5.Append(latinFont4);
            defaultRunProperties5.Append(eastAsianFont4);
            defaultRunProperties5.Append(complexScriptFont4);

            paragraphProperties5.Append(defaultRunProperties5);
            A.EndParagraphRunProperties endParagraphRunProperties5 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph11.Append(paragraphProperties5);
            paragraph11.Append(endParagraphRunProperties5);

            textProperties5.Append(bodyProperties11);
            textProperties5.Append(listStyle11);
            textProperties5.Append(paragraph11);
            C.CrossingAxis crossingAxis5 = new C.CrossingAxis(){ Val = 209979944U };
            C.Crosses crosses5 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.AutoLabeled autoLabeled3 = new C.AutoLabeled(){ Val = true };
            C.LabelAlignment labelAlignment3 = new C.LabelAlignment(){ Val = C.LabelAlignmentValues.Center };
            C.LabelOffset labelOffset3 = new C.LabelOffset(){ Val = (UInt16Value)100U };
            C.NoMultiLevelLabels noMultiLevelLabels3 = new C.NoMultiLevelLabels(){ Val = false };

            categoryAxis3.Append(axisId11);
            categoryAxis3.Append(scaling5);
            categoryAxis3.Append(delete5);
            categoryAxis3.Append(axisPosition5);
            categoryAxis3.Append(numberingFormat5);
            categoryAxis3.Append(majorTickMark5);
            categoryAxis3.Append(minorTickMark5);
            categoryAxis3.Append(tickLabelPosition5);
            categoryAxis3.Append(chartShapeProperties7);
            categoryAxis3.Append(textProperties5);
            categoryAxis3.Append(crossingAxis5);
            categoryAxis3.Append(crosses5);
            categoryAxis3.Append(autoLabeled3);
            categoryAxis3.Append(labelAlignment3);
            categoryAxis3.Append(labelOffset3);
            categoryAxis3.Append(noMultiLevelLabels3);

            C.ValueAxis valueAxis3 = new C.ValueAxis();
            C.AxisId axisId12 = new C.AxisId(){ Val = 209979944U };

            C.Scaling scaling6 = new C.Scaling();
            C.Orientation orientation6 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling6.Append(orientation6);
            C.Delete delete6 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition6 = new C.AxisPosition(){ Val = C.AxisPositionValues.Left };

            C.MajorGridlines majorGridlines3 = new C.MajorGridlines();

            C.ChartShapeProperties chartShapeProperties8 = new C.ChartShapeProperties();

            A.Outline outline27 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill34 = new A.SolidFill();

            A.SchemeColor schemeColor22 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation7 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset7 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor22.Append(luminanceModulation7);
            schemeColor22.Append(luminanceOffset7);

            solidFill34.Append(schemeColor22);
            A.Round round3 = new A.Round();

            outline27.Append(solidFill34);
            outline27.Append(round3);
            A.EffectList effectList21 = new A.EffectList();

            chartShapeProperties8.Append(outline27);
            chartShapeProperties8.Append(effectList21);

            majorGridlines3.Append(chartShapeProperties8);
            C.NumberingFormat numberingFormat6 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = true };
            C.MajorTickMark majorTickMark6 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark6 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition6 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties9 = new C.ChartShapeProperties();
            A.NoFill noFill23 = new A.NoFill();

            A.Outline outline28 = new A.Outline();
            A.NoFill noFill24 = new A.NoFill();

            outline28.Append(noFill24);
            A.EffectList effectList22 = new A.EffectList();

            chartShapeProperties9.Append(noFill23);
            chartShapeProperties9.Append(outline28);
            chartShapeProperties9.Append(effectList22);

            C.TextProperties textProperties6 = new C.TextProperties();
            A.BodyProperties bodyProperties12 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle12 = new A.ListStyle();

            A.Paragraph paragraph12 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties6 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties6 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill35 = new A.SolidFill();

            A.SchemeColor schemeColor23 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation8 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset8 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor23.Append(luminanceModulation8);
            schemeColor23.Append(luminanceOffset8);

            solidFill35.Append(schemeColor23);
            A.LatinFont latinFont5 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont5 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont5 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties6.Append(solidFill35);
            defaultRunProperties6.Append(latinFont5);
            defaultRunProperties6.Append(eastAsianFont5);
            defaultRunProperties6.Append(complexScriptFont5);

            paragraphProperties6.Append(defaultRunProperties6);
            A.EndParagraphRunProperties endParagraphRunProperties6 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph12.Append(paragraphProperties6);
            paragraph12.Append(endParagraphRunProperties6);

            textProperties6.Append(bodyProperties12);
            textProperties6.Append(listStyle12);
            textProperties6.Append(paragraph12);
            C.CrossingAxis crossingAxis6 = new C.CrossingAxis(){ Val = 209979552U };
            C.Crosses crosses6 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.CrossBetween crossBetween3 = new C.CrossBetween(){ Val = C.CrossBetweenValues.Between };

            valueAxis3.Append(axisId12);
            valueAxis3.Append(scaling6);
            valueAxis3.Append(delete6);
            valueAxis3.Append(axisPosition6);
            valueAxis3.Append(majorGridlines3);
            valueAxis3.Append(numberingFormat6);
            valueAxis3.Append(majorTickMark6);
            valueAxis3.Append(minorTickMark6);
            valueAxis3.Append(tickLabelPosition6);
            valueAxis3.Append(chartShapeProperties9);
            valueAxis3.Append(textProperties6);
            valueAxis3.Append(crossingAxis6);
            valueAxis3.Append(crosses6);
            valueAxis3.Append(crossBetween3);

            C.ShapeProperties shapeProperties20 = new C.ShapeProperties();

            A.SolidFill solidFill36 = new A.SolidFill();
            A.SchemeColor schemeColor24 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill36.Append(schemeColor24);

            A.Outline outline29 = new A.Outline();
            A.NoFill noFill25 = new A.NoFill();

            outline29.Append(noFill25);
            A.EffectList effectList23 = new A.EffectList();

            shapeProperties20.Append(solidFill36);
            shapeProperties20.Append(outline29);
            shapeProperties20.Append(effectList23);

            plotArea6.Append(layout6);
            plotArea6.Append(barChart3);
            plotArea6.Append(categoryAxis3);
            plotArea6.Append(valueAxis3);
            plotArea6.Append(shapeProperties20);

            C.Legend legend6 = new C.Legend();
            C.LegendPosition legendPosition6 = new C.LegendPosition(){ Val = C.LegendPositionValues.Bottom };
            C.Overlay overlay12 = new C.Overlay(){ Val = false };

            C.ChartShapeProperties chartShapeProperties10 = new C.ChartShapeProperties();
            A.NoFill noFill26 = new A.NoFill();

            A.Outline outline30 = new A.Outline();
            A.NoFill noFill27 = new A.NoFill();

            outline30.Append(noFill27);
            A.EffectList effectList24 = new A.EffectList();

            chartShapeProperties10.Append(noFill26);
            chartShapeProperties10.Append(outline30);
            chartShapeProperties10.Append(effectList24);

            C.TextProperties textProperties7 = new C.TextProperties();
            A.BodyProperties bodyProperties13 = new A.BodyProperties(){ Rotation = 0, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle13 = new A.ListStyle();

            A.Paragraph paragraph13 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties7 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties7 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill37 = new A.SolidFill();

            A.SchemeColor schemeColor25 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation9 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset9 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor25.Append(luminanceModulation9);
            schemeColor25.Append(luminanceOffset9);

            solidFill37.Append(schemeColor25);
            A.LatinFont latinFont6 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont6 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont6 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties7.Append(solidFill37);
            defaultRunProperties7.Append(latinFont6);
            defaultRunProperties7.Append(eastAsianFont6);
            defaultRunProperties7.Append(complexScriptFont6);

            paragraphProperties7.Append(defaultRunProperties7);
            A.EndParagraphRunProperties endParagraphRunProperties7 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph13.Append(paragraphProperties7);
            paragraph13.Append(endParagraphRunProperties7);

            textProperties7.Append(bodyProperties13);
            textProperties7.Append(listStyle13);
            textProperties7.Append(paragraph13);

            legend6.Append(legendPosition6);
            legend6.Append(overlay12);
            legend6.Append(chartShapeProperties10);
            legend6.Append(textProperties7);
            C.PlotVisibleOnly plotVisibleOnly6 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs6 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum6 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart6.Append(title6);
            chart6.Append(autoTitleDeleted6);
            chart6.Append(pivotFormats6);
            chart6.Append(plotArea6);
            chart6.Append(legend6);
            chart6.Append(plotVisibleOnly6);
            chart6.Append(displayBlanksAs6);
            chart6.Append(showDataLabelsOverMaximum6);

            C.ShapeProperties shapeProperties21 = new C.ShapeProperties();

            A.SolidFill solidFill38 = new A.SolidFill();
            A.SchemeColor schemeColor26 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill38.Append(schemeColor26);

            A.Outline outline31 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill39 = new A.SolidFill();

            A.SchemeColor schemeColor27 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation10 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset10 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor27.Append(luminanceModulation10);
            schemeColor27.Append(luminanceOffset10);

            solidFill39.Append(schemeColor27);
            A.Round round4 = new A.Round();

            outline31.Append(solidFill39);
            outline31.Append(round4);
            A.EffectList effectList25 = new A.EffectList();

            shapeProperties21.Append(solidFill38);
            shapeProperties21.Append(outline31);
            shapeProperties21.Append(effectList25);

            C.TextProperties textProperties8 = new C.TextProperties();
            A.BodyProperties bodyProperties14 = new A.BodyProperties();
            A.ListStyle listStyle14 = new A.ListStyle();

            A.Paragraph paragraph14 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties8 = new A.ParagraphProperties();
            A.DefaultRunProperties defaultRunProperties8 = new A.DefaultRunProperties();

            paragraphProperties8.Append(defaultRunProperties8);
            A.EndParagraphRunProperties endParagraphRunProperties8 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph14.Append(paragraphProperties8);
            paragraph14.Append(endParagraphRunProperties8);

            textProperties8.Append(bodyProperties14);
            textProperties8.Append(listStyle14);
            textProperties8.Append(paragraph14);

            C.PrintSettings printSettings6 = new C.PrintSettings();
            C.HeaderFooter headerFooter6 = new C.HeaderFooter();
            C.PageMargins pageMargins9 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup6 = new C.PageSetup();

            printSettings6.Append(headerFooter6);
            printSettings6.Append(pageMargins9);
            printSettings6.Append(pageSetup6);

            C.ChartSpaceExtensionList chartSpaceExtensionList6 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList6.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList6.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension6 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension6.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions6 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter6 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories6 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData6 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries6 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible6 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions6.Append(dropZoneFilter6);
            pivotOptions6.Append(dropZoneCategories6);
            pivotOptions6.Append(dropZoneData6);
            pivotOptions6.Append(dropZoneSeries6);
            pivotOptions6.Append(dropZonesVisible6);

            chartSpaceExtension6.Append(pivotOptions6);

            chartSpaceExtensionList6.Append(chartSpaceExtension6);

            chartSpace6.Append(date19046);
            chartSpace6.Append(editingLanguage6);
            chartSpace6.Append(roundedCorners6);
            chartSpace6.Append(alternateContent13);
            chartSpace6.Append(pivotSource6);
            chartSpace6.Append(chart6);
            chartSpace6.Append(shapeProperties21);
            chartSpace6.Append(textProperties8);
            chartSpace6.Append(printSettings6);
            chartSpace6.Append(chartSpaceExtensionList6);

            chartPart6.ChartSpace = chartSpace6;
        }

        // Generates content of pivotTablePart3.
        private static void GeneratePivotTablePart3Content(PivotTablePart pivotTablePart3)
        {
            PivotTableDefinition pivotTableDefinition5 = new PivotTableDefinition(){ Name = "PivotTable1", CacheId = 1U, ApplyNumberFormats = false, ApplyBorderFormats = false, ApplyFontFormats = false, ApplyPatternFormats = false, ApplyAlignmentFormats = false, ApplyWidthHeightFormats = true, DataCaption = "Values", UpdatedVersion = 5, MinRefreshableVersion = 5, UseAutoFormatting = true, ItemPrintTitles = true, CreatedVersion = 4, Indent = 0U, Outline = true, OutlineData = true, MultipleFieldFilters = false, ChartFormat = 13U };
            Location location3 = new Location(){ Reference = "A1:B5", FirstHeaderRow = 1U, FirstDataRow = 1U, FirstDataColumn = 1U };

            PivotFields pivotFields3 = new PivotFields(){ Count = 7U };

            PivotField pivotField14 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items7 = new Items(){ Count = 15U };
            Item item54 = new Item(){ Index = 0U };
            Item item55 = new Item(){ Index = 1U };
            Item item56 = new Item(){ Index = 2U };
            Item item57 = new Item(){ Index = 3U };
            Item item58 = new Item(){ Index = 4U };
            Item item59 = new Item(){ Index = 5U };
            Item item60 = new Item(){ Index = 6U };
            Item item61 = new Item(){ Index = 7U };
            Item item62 = new Item(){ Index = 8U };
            Item item63 = new Item(){ Index = 9U };
            Item item64 = new Item(){ Index = 10U };
            Item item65 = new Item(){ Index = 11U };
            Item item66 = new Item(){ Index = 12U };
            Item item67 = new Item(){ Index = 13U };
            Item item68 = new Item(){ ItemType = ItemValues.Default };

            items7.Append(item54);
            items7.Append(item55);
            items7.Append(item56);
            items7.Append(item57);
            items7.Append(item58);
            items7.Append(item59);
            items7.Append(item60);
            items7.Append(item61);
            items7.Append(item62);
            items7.Append(item63);
            items7.Append(item64);
            items7.Append(item65);
            items7.Append(item66);
            items7.Append(item67);
            items7.Append(item68);

            pivotField14.Append(items7);

            PivotField pivotField15 = new PivotField(){ Axis = PivotTableAxisValues.AxisRow, ShowAll = false };

            Items items8 = new Items(){ Count = 11U };
            Item item69 = new Item(){ Index = 0U };
            Item item70 = new Item(){ Missing = true, Index = 4U };
            Item item71 = new Item(){ Missing = true, Index = 3U };
            Item item72 = new Item(){ Index = 1U };
            Item item73 = new Item(){ Index = 2U };
            Item item74 = new Item(){ Missing = true, Index = 9U };
            Item item75 = new Item(){ Missing = true, Index = 8U };
            Item item76 = new Item(){ Missing = true, Index = 7U };
            Item item77 = new Item(){ Missing = true, Index = 6U };
            Item item78 = new Item(){ Missing = true, Index = 5U };
            Item item79 = new Item(){ ItemType = ItemValues.Default };

            items8.Append(item69);
            items8.Append(item70);
            items8.Append(item71);
            items8.Append(item72);
            items8.Append(item73);
            items8.Append(item74);
            items8.Append(item75);
            items8.Append(item76);
            items8.Append(item77);
            items8.Append(item78);
            items8.Append(item79);

            pivotField15.Append(items8);
            PivotField pivotField16 = new PivotField(){ DataField = true, ShowAll = false };
            PivotField pivotField17 = new PivotField(){ ShowAll = false };

            PivotField pivotField18 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items9 = new Items(){ Count = 5U };
            Item item80 = new Item(){ Index = 0U };
            Item item81 = new Item(){ Index = 1U };
            Item item82 = new Item(){ Index = 3U };
            Item item83 = new Item(){ Index = 2U };
            Item item84 = new Item(){ ItemType = ItemValues.Default };

            items9.Append(item80);
            items9.Append(item81);
            items9.Append(item82);
            items9.Append(item83);
            items9.Append(item84);

            pivotField18.Append(items9);
            PivotField pivotField19 = new PivotField(){ ShowAll = false };

            PivotField pivotField20 = new PivotField(){ ShowAll = false, DefaultSubtotal = false };

            Items items10 = new Items(){ Count = 5U };
            Item item85 = new Item(){ Index = 0U };
            Item item86 = new Item(){ Index = 1U };
            Item item87 = new Item(){ Index = 2U };
            Item item88 = new Item(){ Index = 3U };
            Item item89 = new Item(){ Index = 4U };

            items10.Append(item85);
            items10.Append(item86);
            items10.Append(item87);
            items10.Append(item88);
            items10.Append(item89);

            pivotField20.Append(items10);

            pivotFields3.Append(pivotField14);
            pivotFields3.Append(pivotField15);
            pivotFields3.Append(pivotField16);
            pivotFields3.Append(pivotField17);
            pivotFields3.Append(pivotField18);
            pivotFields3.Append(pivotField19);
            pivotFields3.Append(pivotField20);

            RowFields rowFields3 = new RowFields(){ Count = 1U };
            Field field3 = new Field(){ Index = 1 };

            rowFields3.Append(field3);

            RowItems rowItems3 = new RowItems(){ Count = 4U };

            RowItem rowItem11 = new RowItem();
            MemberPropertyIndex memberPropertyIndex9 = new MemberPropertyIndex();

            rowItem11.Append(memberPropertyIndex9);

            RowItem rowItem12 = new RowItem();
            MemberPropertyIndex memberPropertyIndex10 = new MemberPropertyIndex(){ Val = 3 };

            rowItem12.Append(memberPropertyIndex10);

            RowItem rowItem13 = new RowItem();
            MemberPropertyIndex memberPropertyIndex11 = new MemberPropertyIndex(){ Val = 4 };

            rowItem13.Append(memberPropertyIndex11);

            RowItem rowItem14 = new RowItem(){ ItemType = ItemValues.Grand };
            MemberPropertyIndex memberPropertyIndex12 = new MemberPropertyIndex();

            rowItem14.Append(memberPropertyIndex12);

            rowItems3.Append(rowItem11);
            rowItems3.Append(rowItem12);
            rowItems3.Append(rowItem13);
            rowItems3.Append(rowItem14);

            ColumnItems columnItems3 = new ColumnItems(){ Count = 1U };
            RowItem rowItem15 = new RowItem();

            columnItems3.Append(rowItem15);

            DataFields dataFields3 = new DataFields(){ Count = 1U };
            DataField dataField3 = new DataField(){ Name = "Sum of Quantity", Field = 2U, BaseField = 0, BaseItem = 0U };

            dataFields3.Append(dataField3);

            ChartFormats chartFormats3 = new ChartFormats(){ Count = 9U };

            ChartFormat chartFormat14 = new ChartFormat(){ Chart = 4U, Format = 0U, Series = true };

            PivotArea pivotArea14 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences14 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference14 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem36 = new FieldItem(){ Val = 0U };

            pivotAreaReference14.Append(fieldItem36);

            pivotAreaReferences14.Append(pivotAreaReference14);

            pivotArea14.Append(pivotAreaReferences14);

            chartFormat14.Append(pivotArea14);

            ChartFormat chartFormat15 = new ChartFormat(){ Chart = 5U, Format = 2U, Series = true };

            PivotArea pivotArea15 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences15 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference15 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem37 = new FieldItem(){ Val = 0U };

            pivotAreaReference15.Append(fieldItem37);

            pivotAreaReferences15.Append(pivotAreaReference15);

            pivotArea15.Append(pivotAreaReferences15);

            chartFormat15.Append(pivotArea15);

            ChartFormat chartFormat16 = new ChartFormat(){ Chart = 6U, Format = 0U, Series = true };

            PivotArea pivotArea16 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences16 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference16 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem38 = new FieldItem(){ Val = 0U };

            pivotAreaReference16.Append(fieldItem38);

            pivotAreaReferences16.Append(pivotAreaReference16);

            pivotArea16.Append(pivotAreaReferences16);

            chartFormat16.Append(pivotArea16);

            ChartFormat chartFormat17 = new ChartFormat(){ Chart = 7U, Format = 14U, Series = true };

            PivotArea pivotArea17 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences17 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference17 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem39 = new FieldItem(){ Val = 0U };

            pivotAreaReference17.Append(fieldItem39);

            pivotAreaReferences17.Append(pivotAreaReference17);

            pivotArea17.Append(pivotAreaReferences17);

            chartFormat17.Append(pivotArea17);

            ChartFormat chartFormat18 = new ChartFormat(){ Chart = 8U, Format = 1U, Series = true };

            PivotArea pivotArea18 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences18 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference18 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem40 = new FieldItem(){ Val = 0U };

            pivotAreaReference18.Append(fieldItem40);

            pivotAreaReferences18.Append(pivotAreaReference18);

            pivotArea18.Append(pivotAreaReferences18);

            chartFormat18.Append(pivotArea18);

            ChartFormat chartFormat19 = new ChartFormat(){ Chart = 9U, Format = 15U, Series = true };

            PivotArea pivotArea19 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences19 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference19 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem41 = new FieldItem(){ Val = 0U };

            pivotAreaReference19.Append(fieldItem41);

            pivotAreaReferences19.Append(pivotAreaReference19);

            pivotArea19.Append(pivotAreaReferences19);

            chartFormat19.Append(pivotArea19);

            ChartFormat chartFormat20 = new ChartFormat(){ Chart = 10U, Format = 2U, Series = true };

            PivotArea pivotArea20 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences20 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference20 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem42 = new FieldItem(){ Val = 0U };

            pivotAreaReference20.Append(fieldItem42);

            pivotAreaReferences20.Append(pivotAreaReference20);

            pivotArea20.Append(pivotAreaReferences20);

            chartFormat20.Append(pivotArea20);

            ChartFormat chartFormat21 = new ChartFormat(){ Chart = 11U, Format = 16U, Series = true };

            PivotArea pivotArea21 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences21 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference21 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem43 = new FieldItem(){ Val = 0U };

            pivotAreaReference21.Append(fieldItem43);

            pivotAreaReferences21.Append(pivotAreaReference21);

            pivotArea21.Append(pivotAreaReferences21);

            chartFormat21.Append(pivotArea21);

            ChartFormat chartFormat22 = new ChartFormat(){ Chart = 12U, Format = 3U, Series = true };

            PivotArea pivotArea22 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences22 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference22 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem44 = new FieldItem(){ Val = 0U };

            pivotAreaReference22.Append(fieldItem44);

            pivotAreaReferences22.Append(pivotAreaReference22);

            pivotArea22.Append(pivotAreaReferences22);

            chartFormat22.Append(pivotArea22);

            chartFormats3.Append(chartFormat14);
            chartFormats3.Append(chartFormat15);
            chartFormats3.Append(chartFormat16);
            chartFormats3.Append(chartFormat17);
            chartFormats3.Append(chartFormat18);
            chartFormats3.Append(chartFormat19);
            chartFormats3.Append(chartFormat20);
            chartFormats3.Append(chartFormat21);
            chartFormats3.Append(chartFormat22);
            PivotTableStyle pivotTableStyle3 = new PivotTableStyle(){ Name = "PivotStyleLight16", ShowRowHeaders = true, ShowColumnHeaders = true, ShowRowStripes = false, ShowColumnStripes = false, ShowLastColumn = true };

            PivotTableDefinitionExtensionList pivotTableDefinitionExtensionList3 = new PivotTableDefinitionExtensionList();

            PivotTableDefinitionExtension pivotTableDefinitionExtension3 = new PivotTableDefinitionExtension(){ Uri = "{962EF5D1-5CA2-4c93-8EF4-DBF5C05439D2}" };
            pivotTableDefinitionExtension3.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");

            X14.PivotTableDefinition pivotTableDefinition6 = new X14.PivotTableDefinition(){ HideValuesRow = true };
            pivotTableDefinition6.AddNamespaceDeclaration("xm", "http://schemas.microsoft.com/office/excel/2006/main");

            pivotTableDefinitionExtension3.Append(pivotTableDefinition6);

            pivotTableDefinitionExtensionList3.Append(pivotTableDefinitionExtension3);

            pivotTableDefinition5.Append(location3);
            pivotTableDefinition5.Append(pivotFields3);
            pivotTableDefinition5.Append(rowFields3);
            pivotTableDefinition5.Append(rowItems3);
            pivotTableDefinition5.Append(columnItems3);
            pivotTableDefinition5.Append(dataFields3);
            pivotTableDefinition5.Append(chartFormats3);
            pivotTableDefinition5.Append(pivotTableStyle3);
            pivotTableDefinition5.Append(pivotTableDefinitionExtensionList3);

            pivotTablePart3.PivotTableDefinition = pivotTableDefinition5;
        }

        // Generates content of timeLineCachePart3.
        private static void GenerateTimeLineCachePart3Content(TimeLineCachePart timeLineCachePart3)
        {
            X15.TimelineCacheDefinition timelineCacheDefinition3 = new X15.TimelineCacheDefinition(){ Name = "NativeTimeline_DeliveryDate2", SourceName = "DeliveryDate" };
            timelineCacheDefinition3.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCachePivotTables timelineCachePivotTables3 = new X15.TimelineCachePivotTables();
            X15.TimelineCachePivotTable timelineCachePivotTable3 = new X15.TimelineCachePivotTable(){ TabId = 6U, Name = "PivotTable1" };

            timelineCachePivotTables3.Append(timelineCachePivotTable3);

            X15.TimelineState timelineState3 = new X15.TimelineState(){ MinimalRefreshVersion = 6U, LastRefreshVersion = 6U, PivotCacheId = 2U, FilterType = PivotFilterValues.Unknown };
            X15.BoundsTimelineRange boundsTimelineRange3 = new X15.BoundsTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2004-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelineState3.Append(boundsTimelineRange3);

            timelineCacheDefinition3.Append(timelineCachePivotTables3);
            timelineCacheDefinition3.Append(timelineState3);

            timeLineCachePart3.TimelineCacheDefinition = timelineCacheDefinition3;
        }

        // Generates content of sharedStringTablePart1.
        private static void GenerateSharedStringTablePart1Content(SharedStringTablePart sharedStringTablePart1)
        {
            SharedStringTable sharedStringTable1 = new SharedStringTable(){ Count = 130U, UniqueCount = 32U };

            SharedStringItem sharedStringItem1 = new SharedStringItem();
            Text text7 = new Text();
            text7.Text = "Date";

            PhoneticRun phoneticRun1 = new PhoneticRun(){ BaseTextStartIndex = 0U, EndingBaseIndex = 0U };
            Text text8 = new Text();
            text8.Text = string.Empty;

            phoneticRun1.Append(text8);
            PhoneticProperties phoneticProperties4 = new PhoneticProperties(){ FontId = 0U, Type = PhoneticValues.Hiragana };

            sharedStringItem1.Append(text7);
            sharedStringItem1.Append(phoneticRun1);
            sharedStringItem1.Append(phoneticProperties4);

            SharedStringItem sharedStringItem2 = new SharedStringItem();
            Text text9 = new Text();
            text9.Text = "Product";

            PhoneticRun phoneticRun2 = new PhoneticRun(){ BaseTextStartIndex = 0U, EndingBaseIndex = 0U };
            Text text10 = new Text();
            text10.Text = string.Empty;

            phoneticRun2.Append(text10);
            PhoneticProperties phoneticProperties5 = new PhoneticProperties(){ FontId = 0U, Type = PhoneticValues.Hiragana };

            sharedStringItem2.Append(text9);
            sharedStringItem2.Append(phoneticRun2);
            sharedStringItem2.Append(phoneticProperties5);

            SharedStringItem sharedStringItem3 = new SharedStringItem();
            Text text11 = new Text();
            text11.Text = "Quantity";

            PhoneticRun phoneticRun3 = new PhoneticRun(){ BaseTextStartIndex = 0U, EndingBaseIndex = 0U };
            Text text12 = new Text();
            text12.Text = string.Empty;

            phoneticRun3.Append(text12);
            PhoneticProperties phoneticProperties6 = new PhoneticProperties(){ FontId = 0U, Type = PhoneticValues.Hiragana };

            sharedStringItem3.Append(text11);
            sharedStringItem3.Append(phoneticRun3);
            sharedStringItem3.Append(phoneticProperties6);

            SharedStringItem sharedStringItem4 = new SharedStringItem();
            Text text13 = new Text();
            text13.Text = "Price";

            PhoneticRun phoneticRun4 = new PhoneticRun(){ BaseTextStartIndex = 0U, EndingBaseIndex = 0U };
            Text text14 = new Text();
            text14.Text = string.Empty;

            phoneticRun4.Append(text14);
            PhoneticProperties phoneticProperties7 = new PhoneticProperties(){ FontId = 0U, Type = PhoneticValues.Hiragana };

            sharedStringItem4.Append(text13);
            sharedStringItem4.Append(phoneticRun4);
            sharedStringItem4.Append(phoneticProperties7);

            SharedStringItem sharedStringItem5 = new SharedStringItem();
            Text text15 = new Text();
            text15.Text = "DeliveryDate";

            sharedStringItem5.Append(text15);

            SharedStringItem sharedStringItem6 = new SharedStringItem();
            Text text16 = new Text();
            text16.Text = "Employee";

            PhoneticRun phoneticRun5 = new PhoneticRun(){ BaseTextStartIndex = 0U, EndingBaseIndex = 0U };
            Text text17 = new Text();
            text17.Text = string.Empty;

            phoneticRun5.Append(text17);
            PhoneticProperties phoneticProperties8 = new PhoneticProperties(){ FontId = 0U, Type = PhoneticValues.Hiragana };

            sharedStringItem6.Append(text16);
            sharedStringItem6.Append(phoneticRun5);
            sharedStringItem6.Append(phoneticProperties8);

            SharedStringItem sharedStringItem7 = new SharedStringItem();
            Text text18 = new Text();
            text18.Text = "product_A";

            sharedStringItem7.Append(text18);

            SharedStringItem sharedStringItem8 = new SharedStringItem();
            Text text19 = new Text();
            text19.Text = "sales staff G";

            sharedStringItem8.Append(text19);

            SharedStringItem sharedStringItem9 = new SharedStringItem();
            Text text20 = new Text();
            text20.Text = "product_D";

            sharedStringItem9.Append(text20);

            SharedStringItem sharedStringItem10 = new SharedStringItem();
            Text text21 = new Text();
            text21.Text = "sales staff B";

            sharedStringItem10.Append(text21);

            SharedStringItem sharedStringItem11 = new SharedStringItem();
            Text text22 = new Text();
            text22.Text = "sales staff C";

            sharedStringItem11.Append(text22);

            SharedStringItem sharedStringItem12 = new SharedStringItem();
            Text text23 = new Text();
            text23.Text = "product_E";

            sharedStringItem12.Append(text23);

            SharedStringItem sharedStringItem13 = new SharedStringItem();
            Text text24 = new Text();
            text24.Text = "sales staff E";

            sharedStringItem13.Append(text24);

            SharedStringItem sharedStringItem14 = new SharedStringItem();
            Text text25 = new Text();
            text25.Text = "sales staff J";

            sharedStringItem14.Append(text25);

            SharedStringItem sharedStringItem15 = new SharedStringItem();
            Text text26 = new Text();
            text26.Text = "product_B";

            sharedStringItem15.Append(text26);

            SharedStringItem sharedStringItem16 = new SharedStringItem();
            Text text27 = new Text();
            text27.Text = "sales staff I";

            sharedStringItem16.Append(text27);

            SharedStringItem sharedStringItem17 = new SharedStringItem();
            Text text28 = new Text();
            text28.Text = "product_C";

            sharedStringItem17.Append(text28);

            SharedStringItem sharedStringItem18 = new SharedStringItem();
            Text text29 = new Text();
            text29.Text = "product_H";

            sharedStringItem18.Append(text29);

            SharedStringItem sharedStringItem19 = new SharedStringItem();
            Text text30 = new Text();
            text30.Text = "product_I";

            sharedStringItem19.Append(text30);

            SharedStringItem sharedStringItem20 = new SharedStringItem();
            Text text31 = new Text();
            text31.Text = "sales staff H";

            sharedStringItem20.Append(text31);

            SharedStringItem sharedStringItem21 = new SharedStringItem();
            Text text32 = new Text();
            text32.Text = "sales staff A";

            sharedStringItem21.Append(text32);

            SharedStringItem sharedStringItem22 = new SharedStringItem();
            Text text33 = new Text();
            text33.Text = "sales staff F";

            sharedStringItem22.Append(text33);

            SharedStringItem sharedStringItem23 = new SharedStringItem();
            Text text34 = new Text();
            text34.Text = "product_F";

            sharedStringItem23.Append(text34);

            SharedStringItem sharedStringItem24 = new SharedStringItem();
            Text text35 = new Text();
            text35.Text = "product_G";

            sharedStringItem24.Append(text35);

            SharedStringItem sharedStringItem25 = new SharedStringItem();
            Text text36 = new Text();
            text36.Text = "sales staff D";

            sharedStringItem25.Append(text36);

            SharedStringItem sharedStringItem26 = new SharedStringItem();
            Text text37 = new Text();
            text37.Text = "product_J";

            sharedStringItem26.Append(text37);

            SharedStringItem sharedStringItem27 = new SharedStringItem();
            Text text38 = new Text();
            text38.Text = "ProductName";

            PhoneticRun phoneticRun6 = new PhoneticRun(){ BaseTextStartIndex = 0U, EndingBaseIndex = 0U };
            Text text39 = new Text();
            text39.Text = string.Empty;

            phoneticRun6.Append(text39);
            PhoneticProperties phoneticProperties9 = new PhoneticProperties(){ FontId = 0U, Type = PhoneticValues.Hiragana };

            sharedStringItem27.Append(text38);
            sharedStringItem27.Append(phoneticRun6);
            sharedStringItem27.Append(phoneticProperties9);

            SharedStringItem sharedStringItem28 = new SharedStringItem();
            Text text40 = new Text();
            text40.Text = "Employee";

            sharedStringItem28.Append(text40);

            SharedStringItem sharedStringItem29 = new SharedStringItem();
            Text text41 = new Text();
            text41.Text = "Sum of Quantity";

            sharedStringItem29.Append(text41);

            SharedStringItem sharedStringItem30 = new SharedStringItem();
            Text text42 = new Text();
            text42.Text = "Row Labels";

            sharedStringItem30.Append(text42);

            SharedStringItem sharedStringItem31 = new SharedStringItem();
            Text text43 = new Text();
            text43.Text = "Grand Total";

            sharedStringItem31.Append(text43);

            SharedStringItem sharedStringItem32 = new SharedStringItem();
            Text text44 = new Text();
            text44.Text = "Toral / Price";

            sharedStringItem32.Append(text44);

            sharedStringTable1.Append(sharedStringItem1);
            sharedStringTable1.Append(sharedStringItem2);
            sharedStringTable1.Append(sharedStringItem3);
            sharedStringTable1.Append(sharedStringItem4);
            sharedStringTable1.Append(sharedStringItem5);
            sharedStringTable1.Append(sharedStringItem6);
            sharedStringTable1.Append(sharedStringItem7);
            sharedStringTable1.Append(sharedStringItem8);
            sharedStringTable1.Append(sharedStringItem9);
            sharedStringTable1.Append(sharedStringItem10);
            sharedStringTable1.Append(sharedStringItem11);
            sharedStringTable1.Append(sharedStringItem12);
            sharedStringTable1.Append(sharedStringItem13);
            sharedStringTable1.Append(sharedStringItem14);
            sharedStringTable1.Append(sharedStringItem15);
            sharedStringTable1.Append(sharedStringItem16);
            sharedStringTable1.Append(sharedStringItem17);
            sharedStringTable1.Append(sharedStringItem18);
            sharedStringTable1.Append(sharedStringItem19);
            sharedStringTable1.Append(sharedStringItem20);
            sharedStringTable1.Append(sharedStringItem21);
            sharedStringTable1.Append(sharedStringItem22);
            sharedStringTable1.Append(sharedStringItem23);
            sharedStringTable1.Append(sharedStringItem24);
            sharedStringTable1.Append(sharedStringItem25);
            sharedStringTable1.Append(sharedStringItem26);
            sharedStringTable1.Append(sharedStringItem27);
            sharedStringTable1.Append(sharedStringItem28);
            sharedStringTable1.Append(sharedStringItem29);
            sharedStringTable1.Append(sharedStringItem30);
            sharedStringTable1.Append(sharedStringItem31);
            sharedStringTable1.Append(sharedStringItem32);

            sharedStringTablePart1.SharedStringTable = sharedStringTable1;
        }

        // Generates content of worksheetPart4.
        private static void GenerateWorksheetPart4Content(WorksheetPart worksheetPart4)
        {
            Worksheet worksheet4 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet4.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet4.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet4.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension4 = new SheetDimension(){ Reference = "A1:K11" };

            SheetViews sheetViews4 = new SheetViews();
            SheetView sheetView4 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews4.Append(sheetView4);
            SheetFormatProperties sheetFormatProperties4 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns4 = new Columns();
            Column column16 = new Column(){ Min = 1U, Max = 1U, Width = 10.7109375D, BestFit = true, CustomWidth = true };
            Column column17 = new Column(){ Min = 2U, Max = 2U, Width = 10.140625D, BestFit = true, CustomWidth = true };
            Column column18 = new Column(){ Min = 3U, Max = 3U, Width = 8.140625D, BestFit = true, CustomWidth = true };
            Column column19 = new Column(){ Min = 4U, Max = 4U, Width = 10.42578125D, BestFit = true, CustomWidth = true };
            Column column20 = new Column(){ Min = 5U, Max = 5U, Width = 12.85546875D, BestFit = true, CustomWidth = true };
            Column column21 = new Column(){ Min = 6U, Max = 6U, Width = 11.5703125D, BestFit = true, CustomWidth = true };
            Column column22 = new Column(){ Min = 8U, Max = 8U, Width = 12.85546875D, BestFit = true, CustomWidth = true };
            Column column23 = new Column(){ Min = 9U, Max = 9U, Width = 10.42578125D, BestFit = true, CustomWidth = true };
            Column column24 = new Column(){ Min = 11U, Max = 11U, Width = 12.85546875D, BestFit = true, CustomWidth = true };

            columns4.Append(column16);
            columns4.Append(column17);
            columns4.Append(column18);
            columns4.Append(column19);
            columns4.Append(column20);
            columns4.Append(column21);
            columns4.Append(column22);
            columns4.Append(column23);
            columns4.Append(column24);

            SheetData sheetData4 = new SheetData();

            Row row16 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell31 = new Cell(){ CellReference = "A1", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue31 = new CellValue();
            cellValue31.Text = "0";

            cell31.Append(cellValue31);

            Cell cell32 = new Cell(){ CellReference = "B1", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue32 = new CellValue();
            cellValue32.Text = "1";

            cell32.Append(cellValue32);

            Cell cell33 = new Cell(){ CellReference = "C1", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue33 = new CellValue();
            cellValue33.Text = "2";

            cell33.Append(cellValue33);

            Cell cell34 = new Cell(){ CellReference = "D1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue34 = new CellValue();
            cellValue34.Text = "3";

            cell34.Append(cellValue34);

            Cell cell35 = new Cell(){ CellReference = "E1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue35 = new CellValue();
            cellValue35.Text = "4";

            cell35.Append(cellValue35);

            Cell cell36 = new Cell(){ CellReference = "F1", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue36 = new CellValue();
            cellValue36.Text = "5";

            cell36.Append(cellValue36);

            Cell cell37 = new Cell(){ CellReference = "H1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue37 = new CellValue();
            cellValue37.Text = "26";

            cell37.Append(cellValue37);

            Cell cell38 = new Cell(){ CellReference = "I1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue38 = new CellValue();
            cellValue38.Text = "3";

            cell38.Append(cellValue38);

            Cell cell39 = new Cell(){ CellReference = "K1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue39 = new CellValue();
            cellValue39.Text = "27";

            cell39.Append(cellValue39);

            row16.Append(cell31);
            row16.Append(cell32);
            row16.Append(cell33);
            row16.Append(cell34);
            row16.Append(cell35);
            row16.Append(cell36);
            row16.Append(cell37);
            row16.Append(cell38);
            row16.Append(cell39);

            Row row17 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell40 = new Cell(){ CellReference = "A2", StyleIndex = 3U };
            CellValue cellValue40 = new CellValue();
            cellValue40.Text = "36526.579536951103";

            cell40.Append(cellValue40);

            Cell cell41 = new Cell(){ CellReference = "B2", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue41 = new CellValue();
            cellValue41.Text = "22";

            cell41.Append(cellValue41);

            Cell cell42 = new Cell(){ CellReference = "C2", StyleIndex = 1U };
            CellValue cellValue42 = new CellValue();
            cellValue42.Text = "13";

            cell42.Append(cellValue42);

            Cell cell43 = new Cell(){ CellReference = "D2", StyleIndex = 1U };
            CellValue cellValue43 = new CellValue();
            cellValue43.Text = "1287";

            cell43.Append(cellValue43);

            Cell cell44 = new Cell(){ CellReference = "E2", StyleIndex = 3U };
            CellValue cellValue44 = new CellValue();
            cellValue44.Text = "36527.188771834619";

            cell44.Append(cellValue44);

            Cell cell45 = new Cell(){ CellReference = "F2", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue45 = new CellValue();
            cellValue45.Text = "19";

            cell45.Append(cellValue45);

            Cell cell46 = new Cell(){ CellReference = "H2", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue46 = new CellValue();
            cellValue46.Text = "6";

            cell46.Append(cellValue46);

            Cell cell47 = new Cell(){ CellReference = "I2", StyleIndex = 4U };
            CellValue cellValue47 = new CellValue();
            cellValue47.Text = "125";

            cell47.Append(cellValue47);

            Cell cell48 = new Cell(){ CellReference = "K2", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue48 = new CellValue();
            cellValue48.Text = "20";

            cell48.Append(cellValue48);

            row17.Append(cell40);
            row17.Append(cell41);
            row17.Append(cell42);
            row17.Append(cell43);
            row17.Append(cell44);
            row17.Append(cell45);
            row17.Append(cell46);
            row17.Append(cell47);
            row17.Append(cell48);

            Row row18 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell49 = new Cell(){ CellReference = "A3", StyleIndex = 3U };
            CellValue cellValue49 = new CellValue();
            cellValue49.Text = "36526.64725983989";

            cell49.Append(cellValue49);

            Cell cell50 = new Cell(){ CellReference = "B3", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue50 = new CellValue();
            cellValue50.Text = "23";

            cell50.Append(cellValue50);

            Cell cell51 = new Cell(){ CellReference = "C3", StyleIndex = 1U };
            CellValue cellValue51 = new CellValue();
            cellValue51.Text = "27";

            cell51.Append(cellValue51);

            Cell cell52 = new Cell(){ CellReference = "D3", StyleIndex = 1U };
            CellValue cellValue52 = new CellValue();
            cellValue52.Text = "11529";

            cell52.Append(cellValue52);

            Cell cell53 = new Cell(){ CellReference = "E3", StyleIndex = 3U };
            CellValue cellValue53 = new CellValue();
            cellValue53.Text = "36529.135002922048";

            cell53.Append(cellValue53);

            Cell cell54 = new Cell(){ CellReference = "F3", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue54 = new CellValue();
            cellValue54.Text = "15";

            cell54.Append(cellValue54);

            Cell cell55 = new Cell(){ CellReference = "H3", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue55 = new CellValue();
            cellValue55.Text = "14";

            cell55.Append(cellValue55);

            Cell cell56 = new Cell(){ CellReference = "I3", StyleIndex = 4U };
            CellValue cellValue56 = new CellValue();
            cellValue56.Text = "250";

            cell56.Append(cellValue56);

            Cell cell57 = new Cell(){ CellReference = "K3", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue57 = new CellValue();
            cellValue57.Text = "9";

            cell57.Append(cellValue57);

            row18.Append(cell49);
            row18.Append(cell50);
            row18.Append(cell51);
            row18.Append(cell52);
            row18.Append(cell53);
            row18.Append(cell54);
            row18.Append(cell55);
            row18.Append(cell56);
            row18.Append(cell57);

            Row row19 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell58 = new Cell(){ CellReference = "A4", StyleIndex = 3U };
            CellValue cellValue58 = new CellValue();
            cellValue58.Text = "36526.705772237176";

            cell58.Append(cellValue58);

            Cell cell59 = new Cell(){ CellReference = "B4", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue59 = new CellValue();
            cellValue59.Text = "22";

            cell59.Append(cellValue59);

            Cell cell60 = new Cell(){ CellReference = "C4", StyleIndex = 1U };
            CellValue cellValue60 = new CellValue();
            cellValue60.Text = "19";

            cell60.Append(cellValue60);

            Cell cell61 = new Cell(){ CellReference = "D4", StyleIndex = 1U };
            CellValue cellValue61 = new CellValue();
            cellValue61.Text = "1881";

            cell61.Append(cellValue61);

            Cell cell62 = new Cell(){ CellReference = "E4", StyleIndex = 3U };
            CellValue cellValue62 = new CellValue();
            cellValue62.Text = "36528.465495973578";

            cell62.Append(cellValue62);

            Cell cell63 = new Cell(){ CellReference = "F4", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue63 = new CellValue();
            cellValue63.Text = "13";

            cell63.Append(cellValue63);

            Cell cell64 = new Cell(){ CellReference = "H4", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue64 = new CellValue();
            cellValue64.Text = "16";

            cell64.Append(cellValue64);

            Cell cell65 = new Cell(){ CellReference = "I4", StyleIndex = 4U };
            CellValue cellValue65 = new CellValue();
            cellValue65.Text = "50";

            cell65.Append(cellValue65);

            Cell cell66 = new Cell(){ CellReference = "K4", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue66 = new CellValue();
            cellValue66.Text = "10";

            cell66.Append(cellValue66);

            row19.Append(cell58);
            row19.Append(cell59);
            row19.Append(cell60);
            row19.Append(cell61);
            row19.Append(cell62);
            row19.Append(cell63);
            row19.Append(cell64);
            row19.Append(cell65);
            row19.Append(cell66);

            Row row20 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell67 = new Cell(){ CellReference = "A5", StyleIndex = 3U };
            CellValue cellValue67 = new CellValue();
            cellValue67.Text = "36526.753330643623";

            cell67.Append(cellValue67);

            Cell cell68 = new Cell(){ CellReference = "B5", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue68 = new CellValue();
            cellValue68.Text = "16";

            cell68.Append(cellValue68);

            Cell cell69 = new Cell(){ CellReference = "C5", StyleIndex = 1U };
            CellValue cellValue69 = new CellValue();
            cellValue69.Text = "25";

            cell69.Append(cellValue69);

            Cell cell70 = new Cell(){ CellReference = "D5", StyleIndex = 1U };
            CellValue cellValue70 = new CellValue();
            cellValue70.Text = "1250";

            cell70.Append(cellValue70);

            Cell cell71 = new Cell(){ CellReference = "E5", StyleIndex = 3U };
            CellValue cellValue71 = new CellValue();
            cellValue71.Text = "36527.287605233112";

            cell71.Append(cellValue71);

            Cell cell72 = new Cell(){ CellReference = "F5", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue72 = new CellValue();
            cellValue72.Text = "9";

            cell72.Append(cellValue72);

            Cell cell73 = new Cell(){ CellReference = "H5", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue73 = new CellValue();
            cellValue73.Text = "8";

            cell73.Append(cellValue73);

            Cell cell74 = new Cell(){ CellReference = "I5", StyleIndex = 4U };
            CellValue cellValue74 = new CellValue();
            cellValue74.Text = "1230";

            cell74.Append(cellValue74);

            Cell cell75 = new Cell(){ CellReference = "K5", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue75 = new CellValue();
            cellValue75.Text = "24";

            cell75.Append(cellValue75);

            row20.Append(cell67);
            row20.Append(cell68);
            row20.Append(cell69);
            row20.Append(cell70);
            row20.Append(cell71);
            row20.Append(cell72);
            row20.Append(cell73);
            row20.Append(cell74);
            row20.Append(cell75);

            Row row21 = new Row(){ RowIndex = 6U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell76 = new Cell(){ CellReference = "A6", StyleIndex = 3U };
            CellValue cellValue76 = new CellValue();
            cellValue76.Text = "37620.934998271434";

            cell76.Append(cellValue76);

            Cell cell77 = new Cell(){ CellReference = "B6", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue77 = new CellValue();
            cellValue77.Text = "16";

            cell77.Append(cellValue77);

            Cell cell78 = new Cell(){ CellReference = "C6", StyleIndex = 1U };
            CellValue cellValue78 = new CellValue();
            cellValue78.Text = "16";

            cell78.Append(cellValue78);

            Cell cell79 = new Cell(){ CellReference = "D6", StyleIndex = 1U };
            CellValue cellValue79 = new CellValue();
            cellValue79.Text = "800";

            cell79.Append(cellValue79);

            Cell cell80 = new Cell(){ CellReference = "E6", StyleIndex = 3U };
            CellValue cellValue80 = new CellValue();
            cellValue80.Text = "37622.167683550928";

            cell80.Append(cellValue80);

            Cell cell81 = new Cell(){ CellReference = "F6", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue81 = new CellValue();
            cellValue81.Text = "21";

            cell81.Append(cellValue81);

            Cell cell82 = new Cell(){ CellReference = "H6", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue82 = new CellValue();
            cellValue82.Text = "11";

            cell82.Append(cellValue82);

            Cell cell83 = new Cell(){ CellReference = "I6", StyleIndex = 4U };
            CellValue cellValue83 = new CellValue();
            cellValue83.Text = "78";

            cell83.Append(cellValue83);

            Cell cell84 = new Cell(){ CellReference = "K6", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue84 = new CellValue();
            cellValue84.Text = "12";

            cell84.Append(cellValue84);

            row21.Append(cell76);
            row21.Append(cell77);
            row21.Append(cell78);
            row21.Append(cell79);
            row21.Append(cell80);
            row21.Append(cell81);
            row21.Append(cell82);
            row21.Append(cell83);
            row21.Append(cell84);

            Row row22 = new Row(){ RowIndex = 7U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell85 = new Cell(){ CellReference = "H7", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue85 = new CellValue();
            cellValue85.Text = "22";

            cell85.Append(cellValue85);

            Cell cell86 = new Cell(){ CellReference = "I7", StyleIndex = 4U };
            CellValue cellValue86 = new CellValue();
            cellValue86.Text = "99";

            cell86.Append(cellValue86);

            Cell cell87 = new Cell(){ CellReference = "K7", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue87 = new CellValue();
            cellValue87.Text = "21";

            cell87.Append(cellValue87);

            row22.Append(cell85);
            row22.Append(cell86);
            row22.Append(cell87);

            Row row23 = new Row(){ RowIndex = 8U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell88 = new Cell(){ CellReference = "H8", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue88 = new CellValue();
            cellValue88.Text = "23";

            cell88.Append(cellValue88);

            Cell cell89 = new Cell(){ CellReference = "I8", StyleIndex = 4U };
            CellValue cellValue89 = new CellValue();
            cellValue89.Text = "427";

            cell89.Append(cellValue89);

            Cell cell90 = new Cell(){ CellReference = "K8", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue90 = new CellValue();
            cellValue90.Text = "7";

            cell90.Append(cellValue90);

            row23.Append(cell88);
            row23.Append(cell89);
            row23.Append(cell90);

            Row row24 = new Row(){ RowIndex = 9U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell91 = new Cell(){ CellReference = "H9", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue91 = new CellValue();
            cellValue91.Text = "17";

            cell91.Append(cellValue91);

            Cell cell92 = new Cell(){ CellReference = "I9", StyleIndex = 4U };
            CellValue cellValue92 = new CellValue();
            cellValue92.Text = "8127";

            cell92.Append(cellValue92);

            Cell cell93 = new Cell(){ CellReference = "K9", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue93 = new CellValue();
            cellValue93.Text = "19";

            cell93.Append(cellValue93);

            row24.Append(cell91);
            row24.Append(cell92);
            row24.Append(cell93);

            Row row25 = new Row(){ RowIndex = 10U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell94 = new Cell(){ CellReference = "H10", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue94 = new CellValue();
            cellValue94.Text = "18";

            cell94.Append(cellValue94);

            Cell cell95 = new Cell(){ CellReference = "I10", StyleIndex = 4U };
            CellValue cellValue95 = new CellValue();
            cellValue95.Text = "777";

            cell95.Append(cellValue95);

            Cell cell96 = new Cell(){ CellReference = "K10", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue96 = new CellValue();
            cellValue96.Text = "15";

            cell96.Append(cellValue96);

            row25.Append(cell94);
            row25.Append(cell95);
            row25.Append(cell96);

            Row row26 = new Row(){ RowIndex = 11U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell97 = new Cell(){ CellReference = "H11", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue97 = new CellValue();
            cellValue97.Text = "25";

            cell97.Append(cellValue97);

            Cell cell98 = new Cell(){ CellReference = "I11", StyleIndex = 4U };
            CellValue cellValue98 = new CellValue();
            cellValue98.Text = "262";

            cell98.Append(cellValue98);

            Cell cell99 = new Cell(){ CellReference = "K11", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue99 = new CellValue();
            cellValue99.Text = "13";

            cell99.Append(cellValue99);

            row26.Append(cell97);
            row26.Append(cell98);
            row26.Append(cell99);

            sheetData4.Append(row16);
            sheetData4.Append(row17);
            sheetData4.Append(row18);
            sheetData4.Append(row19);
            sheetData4.Append(row20);
            sheetData4.Append(row21);
            sheetData4.Append(row22);
            sheetData4.Append(row23);
            sheetData4.Append(row24);
            sheetData4.Append(row25);
            sheetData4.Append(row26);
            PhoneticProperties phoneticProperties10 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins10 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };

            TableParts tableParts1 = new TableParts(){ Count = 3U };
            TablePart tablePart1 = new TablePart(){ Id = "rId1" };
            TablePart tablePart2 = new TablePart(){ Id = "rId2" };
            TablePart tablePart3 = new TablePart(){ Id = "rId3" };

            tableParts1.Append(tablePart1);
            tableParts1.Append(tablePart2);
            tableParts1.Append(tablePart3);

            worksheet4.Append(sheetDimension4);
            worksheet4.Append(sheetViews4);
            worksheet4.Append(sheetFormatProperties4);
            worksheet4.Append(columns4);
            worksheet4.Append(sheetData4);
            worksheet4.Append(phoneticProperties10);
            worksheet4.Append(pageMargins10);
            worksheet4.Append(tableParts1);

            worksheetPart4.Worksheet = worksheet4;
        }

        // Generates content of tableDefinitionPart1.
        private static void GenerateTableDefinitionPart1Content(TableDefinitionPart tableDefinitionPart1)
        {
            Table table1 = new Table(){ Id = 6U, Name = "SalesTable2", DisplayName = "SalesTable2", Reference = "K1:K11", TotalsRowShown = false, HeaderRowFormatId = 0U };
            AutoFilter autoFilter1 = new AutoFilter(){ Reference = "K1:K11" };

            TableColumns tableColumns1 = new TableColumns(){ Count = 1U };
            TableColumn tableColumn1 = new TableColumn(){ Id = 1U, Name = "Employee" };

            tableColumns1.Append(tableColumn1);
            TableStyleInfo tableStyleInfo1 = new TableStyleInfo(){ Name = "TableStyleMedium2", ShowFirstColumn = false, ShowLastColumn = false, ShowRowStripes = true, ShowColumnStripes = false };

            table1.Append(autoFilter1);
            table1.Append(tableColumns1);
            table1.Append(tableStyleInfo1);

            tableDefinitionPart1.Table = table1;
        }

        // Generates content of tableDefinitionPart2.
        private static void GenerateTableDefinitionPart2Content(TableDefinitionPart tableDefinitionPart2)
        {
            Table table2 = new Table(){ Id = 5U, Name = "ProductTable2", DisplayName = "ProductTable2", Reference = "H1:I11", TotalsRowShown = false, HeaderRowFormatId = 2U };
            AutoFilter autoFilter2 = new AutoFilter(){ Reference = "H1:I11" };

            TableColumns tableColumns2 = new TableColumns(){ Count = 2U };
            TableColumn tableColumn2 = new TableColumn(){ Id = 1U, Name = "ProductName" };
            TableColumn tableColumn3 = new TableColumn(){ Id = 2U, Name = "Price", DataFormatId = 1U };

            tableColumns2.Append(tableColumn2);
            tableColumns2.Append(tableColumn3);
            TableStyleInfo tableStyleInfo2 = new TableStyleInfo(){ Name = "TableStyleMedium2", ShowFirstColumn = false, ShowLastColumn = false, ShowRowStripes = true, ShowColumnStripes = false };

            table2.Append(autoFilter2);
            table2.Append(tableColumns2);
            table2.Append(tableStyleInfo2);

            tableDefinitionPart2.Table = table2;
        }

        // Generates content of tableDefinitionPart3.
        private static void GenerateTableDefinitionPart3Content(TableDefinitionPart tableDefinitionPart3)
        {
            Table table3 = new Table(){ Id = 4U, Name = "DataTable2", DisplayName = "DataTable2", Reference = "A1:F6", TotalsRowShown = false };
            AutoFilter autoFilter3 = new AutoFilter(){ Reference = "A1:F6" };

            SortState sortState1 = new SortState(){ Reference = "A2:F2001" };
            SortCondition sortCondition1 = new SortCondition(){ Reference = "A2" };

            sortState1.Append(sortCondition1);

            TableColumns tableColumns3 = new TableColumns(){ Count = 6U };
            TableColumn tableColumn4 = new TableColumn(){ Id = 1U, Name = "Date", DataFormatId = 8U };
            TableColumn tableColumn5 = new TableColumn(){ Id = 2U, Name = "Product", DataFormatId = 7U };
            TableColumn tableColumn6 = new TableColumn(){ Id = 3U, Name = "Quantity", DataFormatId = 6U };
            TableColumn tableColumn7 = new TableColumn(){ Id = 4U, Name = "Price", DataFormatId = 5U };
            TableColumn tableColumn8 = new TableColumn(){ Id = 5U, Name = "DeliveryDate", DataFormatId = 4U };
            TableColumn tableColumn9 = new TableColumn(){ Id = 6U, Name = "Employee", DataFormatId = 3U };

            tableColumns3.Append(tableColumn4);
            tableColumns3.Append(tableColumn5);
            tableColumns3.Append(tableColumn6);
            tableColumns3.Append(tableColumn7);
            tableColumns3.Append(tableColumn8);
            tableColumns3.Append(tableColumn9);
            TableStyleInfo tableStyleInfo3 = new TableStyleInfo(){ Name = "TableStyleMedium2", ShowFirstColumn = false, ShowLastColumn = false, ShowRowStripes = true, ShowColumnStripes = false };

            table3.Append(autoFilter3);
            table3.Append(sortState1);
            table3.Append(tableColumns3);
            table3.Append(tableStyleInfo3);

            tableDefinitionPart3.Table = table3;
        }

        // Generates content of timeLineCachePart4.
        private static void GenerateTimeLineCachePart4Content(TimeLineCachePart timeLineCachePart4)
        {
            X15.TimelineCacheDefinition timelineCacheDefinition4 = new X15.TimelineCacheDefinition(){ Name = "NativeTimeline_DeliveryDate1", SourceName = "DeliveryDate" };
            timelineCacheDefinition4.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCachePivotTables timelineCachePivotTables4 = new X15.TimelineCachePivotTables();
            X15.TimelineCachePivotTable timelineCachePivotTable4 = new X15.TimelineCachePivotTable(){ TabId = 5U, Name = "PivotTable1" };

            timelineCachePivotTables4.Append(timelineCachePivotTable4);

            X15.TimelineState timelineState4 = new X15.TimelineState(){ MinimalRefreshVersion = 6U, LastRefreshVersion = 6U, PivotCacheId = 2U, FilterType = PivotFilterValues.Unknown };
            X15.BoundsTimelineRange boundsTimelineRange4 = new X15.BoundsTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2004-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelineState4.Append(boundsTimelineRange4);

            timelineCacheDefinition4.Append(timelineCachePivotTables4);
            timelineCacheDefinition4.Append(timelineState4);

            timeLineCachePart4.TimelineCacheDefinition = timelineCacheDefinition4;
        }

        // Generates content of timeLineCachePart5.
        private static void GenerateTimeLineCachePart5Content(TimeLineCachePart timeLineCachePart5)
        {
            X15.TimelineCacheDefinition timelineCacheDefinition5 = new X15.TimelineCacheDefinition(){ Name = "NativeTimeline_DeliveryDate5", SourceName = "DeliveryDate" };
            timelineCacheDefinition5.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCachePivotTables timelineCachePivotTables5 = new X15.TimelineCachePivotTables();
            X15.TimelineCachePivotTable timelineCachePivotTable5 = new X15.TimelineCachePivotTable(){ TabId = 9U, Name = "PivotTable1" };

            timelineCachePivotTables5.Append(timelineCachePivotTable5);

            X15.TimelineState timelineState5 = new X15.TimelineState(){ MinimalRefreshVersion = 6U, LastRefreshVersion = 6U, PivotCacheId = 2U, FilterType = PivotFilterValues.DateBetween };
            X15.SelectionTimelineRange selectionTimelineRange1 = new X15.SelectionTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2003-12-31T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.BoundsTimelineRange boundsTimelineRange5 = new X15.BoundsTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2004-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelineState5.Append(selectionTimelineRange1);
            timelineState5.Append(boundsTimelineRange5);

            timelineCacheDefinition5.Append(timelineCachePivotTables5);
            timelineCacheDefinition5.Append(timelineState5);

            timeLineCachePart5.TimelineCacheDefinition = timelineCacheDefinition5;
        }

        // Generates content of worksheetPart5.
        private static void GenerateWorksheetPart5Content(WorksheetPart worksheetPart5)
        {
            Worksheet worksheet5 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet5.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet5.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet5.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension5 = new SheetDimension(){ Reference = "A1:K11" };

            SheetViews sheetViews5 = new SheetViews();
            SheetView sheetView5 = new SheetView(){ TabSelected = true, WorkbookViewId = 0U };

            sheetViews5.Append(sheetView5);
            SheetFormatProperties sheetFormatProperties5 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns5 = new Columns();
            Column column25 = new Column(){ Min = 1U, Max = 1U, Width = 10.7109375D, BestFit = true, CustomWidth = true };
            Column column26 = new Column(){ Min = 2U, Max = 2U, Width = 10.140625D, BestFit = true, CustomWidth = true };
            Column column27 = new Column(){ Min = 3U, Max = 3U, Width = 8.140625D, BestFit = true, CustomWidth = true };
            Column column28 = new Column(){ Min = 4U, Max = 4U, Width = 10.42578125D, BestFit = true, CustomWidth = true };
            Column column29 = new Column(){ Min = 5U, Max = 5U, Width = 12.85546875D, BestFit = true, CustomWidth = true };
            Column column30 = new Column(){ Min = 6U, Max = 6U, Width = 11.5703125D, BestFit = true, CustomWidth = true };
            Column column31 = new Column(){ Min = 8U, Max = 8U, Width = 12.85546875D, BestFit = true, CustomWidth = true };
            Column column32 = new Column(){ Min = 9U, Max = 9U, Width = 10.42578125D, BestFit = true, CustomWidth = true };
            Column column33 = new Column(){ Min = 11U, Max = 11U, Width = 12.85546875D, BestFit = true, CustomWidth = true };

            columns5.Append(column25);
            columns5.Append(column26);
            columns5.Append(column27);
            columns5.Append(column28);
            columns5.Append(column29);
            columns5.Append(column30);
            columns5.Append(column31);
            columns5.Append(column32);
            columns5.Append(column33);

            SheetData sheetData5 = new SheetData();

            Row row27 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell100 = new Cell(){ CellReference = "A1", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue100 = new CellValue();
            cellValue100.Text = "0";

            cell100.Append(cellValue100);

            Cell cell101 = new Cell(){ CellReference = "B1", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue101 = new CellValue();
            cellValue101.Text = "1";

            cell101.Append(cellValue101);

            Cell cell102 = new Cell(){ CellReference = "C1", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue102 = new CellValue();
            cellValue102.Text = "2";

            cell102.Append(cellValue102);

            Cell cell103 = new Cell(){ CellReference = "D1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue103 = new CellValue();
            cellValue103.Text = "3";

            cell103.Append(cellValue103);

            Cell cell104 = new Cell(){ CellReference = "E1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue104 = new CellValue();
            cellValue104.Text = "4";

            cell104.Append(cellValue104);

            Cell cell105 = new Cell(){ CellReference = "F1", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue105 = new CellValue();
            cellValue105.Text = "5";

            cell105.Append(cellValue105);

            Cell cell106 = new Cell(){ CellReference = "H1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue106 = new CellValue();
            cellValue106.Text = "26";

            cell106.Append(cellValue106);

            Cell cell107 = new Cell(){ CellReference = "I1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue107 = new CellValue();
            cellValue107.Text = "3";

            cell107.Append(cellValue107);

            Cell cell108 = new Cell(){ CellReference = "K1", StyleIndex = 2U, DataType = CellValues.SharedString };
            CellValue cellValue108 = new CellValue();
            cellValue108.Text = "27";

            cell108.Append(cellValue108);

            row27.Append(cell100);
            row27.Append(cell101);
            row27.Append(cell102);
            row27.Append(cell103);
            row27.Append(cell104);
            row27.Append(cell105);
            row27.Append(cell106);
            row27.Append(cell107);
            row27.Append(cell108);

            Row row28 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell109 = new Cell(){ CellReference = "A2", StyleIndex = 3U };
            CellValue cellValue109 = new CellValue();
            cellValue109.Text = "36526.653255014644";

            cell109.Append(cellValue109);

            Cell cell110 = new Cell(){ CellReference = "B2", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue110 = new CellValue();
            cellValue110.Text = "6";

            cell110.Append(cellValue110);

            Cell cell111 = new Cell(){ CellReference = "C2", StyleIndex = 1U };
            CellValue cellValue111 = new CellValue();
            cellValue111.Text = "19";

            cell111.Append(cellValue111);

            Cell cell112 = new Cell(){ CellReference = "D2", StyleIndex = 1U };
            CellValue cellValue112 = new CellValue();
            cellValue112.Text = "2375";

            cell112.Append(cellValue112);

            Cell cell113 = new Cell(){ CellReference = "E2", StyleIndex = 3U };
            CellValue cellValue113 = new CellValue();
            cellValue113.Text = "36531.653255014644";

            cell113.Append(cellValue113);

            Cell cell114 = new Cell(){ CellReference = "F2", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue114 = new CellValue();
            cellValue114.Text = "7";

            cell114.Append(cellValue114);

            Cell cell115 = new Cell(){ CellReference = "H2", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue115 = new CellValue();
            cellValue115.Text = "6";

            cell115.Append(cellValue115);

            Cell cell116 = new Cell(){ CellReference = "I2", StyleIndex = 4U };
            CellValue cellValue116 = new CellValue();
            cellValue116.Text = "125";

            cell116.Append(cellValue116);

            Cell cell117 = new Cell(){ CellReference = "K2", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue117 = new CellValue();
            cellValue117.Text = "20";

            cell117.Append(cellValue117);

            row28.Append(cell109);
            row28.Append(cell110);
            row28.Append(cell111);
            row28.Append(cell112);
            row28.Append(cell113);
            row28.Append(cell114);
            row28.Append(cell115);
            row28.Append(cell116);
            row28.Append(cell117);

            Row row29 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell118 = new Cell(){ CellReference = "A3", StyleIndex = 3U };
            CellValue cellValue118 = new CellValue();
            cellValue118.Text = "36527.149391461739";

            cell118.Append(cellValue118);

            Cell cell119 = new Cell(){ CellReference = "B3", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue119 = new CellValue();
            cellValue119.Text = "8";

            cell119.Append(cellValue119);

            Cell cell120 = new Cell(){ CellReference = "C3", StyleIndex = 1U };
            CellValue cellValue120 = new CellValue();
            cellValue120.Text = "13";

            cell120.Append(cellValue120);

            Cell cell121 = new Cell(){ CellReference = "D3", StyleIndex = 1U };
            CellValue cellValue121 = new CellValue();
            cellValue121.Text = "15990";

            cell121.Append(cellValue121);

            Cell cell122 = new Cell(){ CellReference = "E3", StyleIndex = 3U };
            CellValue cellValue122 = new CellValue();
            cellValue122.Text = "36532.149391461739";

            cell122.Append(cellValue122);

            Cell cell123 = new Cell(){ CellReference = "F3", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue123 = new CellValue();
            cellValue123.Text = "9";

            cell123.Append(cellValue123);

            Cell cell124 = new Cell(){ CellReference = "H3", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue124 = new CellValue();
            cellValue124.Text = "14";

            cell124.Append(cellValue124);

            Cell cell125 = new Cell(){ CellReference = "I3", StyleIndex = 4U };
            CellValue cellValue125 = new CellValue();
            cellValue125.Text = "250";

            cell125.Append(cellValue125);

            Cell cell126 = new Cell(){ CellReference = "K3", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue126 = new CellValue();
            cellValue126.Text = "9";

            cell126.Append(cellValue126);

            row29.Append(cell118);
            row29.Append(cell119);
            row29.Append(cell120);
            row29.Append(cell121);
            row29.Append(cell122);
            row29.Append(cell123);
            row29.Append(cell124);
            row29.Append(cell125);
            row29.Append(cell126);

            Row row30 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell127 = new Cell(){ CellReference = "A4", StyleIndex = 3U };
            CellValue cellValue127 = new CellValue();
            cellValue127.Text = "37620.280037325079";

            cell127.Append(cellValue127);

            Cell cell128 = new Cell(){ CellReference = "B4", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue128 = new CellValue();
            cellValue128.Text = "11";

            cell128.Append(cellValue128);

            Cell cell129 = new Cell(){ CellReference = "C4", StyleIndex = 1U };
            CellValue cellValue129 = new CellValue();
            cellValue129.Text = "4";

            cell129.Append(cellValue129);

            Cell cell130 = new Cell(){ CellReference = "D4", StyleIndex = 1U };
            CellValue cellValue130 = new CellValue();
            cellValue130.Text = "312";

            cell130.Append(cellValue130);

            Cell cell131 = new Cell(){ CellReference = "E4", StyleIndex = 3U };
            CellValue cellValue131 = new CellValue();
            cellValue131.Text = "37624.280037325079";

            cell131.Append(cellValue131);

            Cell cell132 = new Cell(){ CellReference = "F4", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue132 = new CellValue();
            cellValue132.Text = "12";

            cell132.Append(cellValue132);

            Cell cell133 = new Cell(){ CellReference = "H4", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue133 = new CellValue();
            cellValue133.Text = "16";

            cell133.Append(cellValue133);

            Cell cell134 = new Cell(){ CellReference = "I4", StyleIndex = 4U };
            CellValue cellValue134 = new CellValue();
            cellValue134.Text = "50";

            cell134.Append(cellValue134);

            Cell cell135 = new Cell(){ CellReference = "K4", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue135 = new CellValue();
            cellValue135.Text = "10";

            cell135.Append(cellValue135);

            row30.Append(cell127);
            row30.Append(cell128);
            row30.Append(cell129);
            row30.Append(cell130);
            row30.Append(cell131);
            row30.Append(cell132);
            row30.Append(cell133);
            row30.Append(cell134);
            row30.Append(cell135);

            Row row31 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell136 = new Cell(){ CellReference = "A5", StyleIndex = 3U };
            CellValue cellValue136 = new CellValue();
            cellValue136.Text = "37620.86855653645";

            cell136.Append(cellValue136);

            Cell cell137 = new Cell(){ CellReference = "B5", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue137 = new CellValue();
            cellValue137.Text = "11";

            cell137.Append(cellValue137);

            Cell cell138 = new Cell(){ CellReference = "C5", StyleIndex = 1U };
            CellValue cellValue138 = new CellValue();
            cellValue138.Text = "29";

            cell138.Append(cellValue138);

            Cell cell139 = new Cell(){ CellReference = "D5", StyleIndex = 1U };
            CellValue cellValue139 = new CellValue();
            cellValue139.Text = "2262";

            cell139.Append(cellValue139);

            Cell cell140 = new Cell(){ CellReference = "E5", StyleIndex = 3U };
            CellValue cellValue140 = new CellValue();
            cellValue140.Text = "37621.86855653645";

            cell140.Append(cellValue140);

            Cell cell141 = new Cell(){ CellReference = "F5", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue141 = new CellValue();
            cellValue141.Text = "12";

            cell141.Append(cellValue141);

            Cell cell142 = new Cell(){ CellReference = "H5", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue142 = new CellValue();
            cellValue142.Text = "8";

            cell142.Append(cellValue142);

            Cell cell143 = new Cell(){ CellReference = "I5", StyleIndex = 4U };
            CellValue cellValue143 = new CellValue();
            cellValue143.Text = "1230";

            cell143.Append(cellValue143);

            Cell cell144 = new Cell(){ CellReference = "K5", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue144 = new CellValue();
            cellValue144.Text = "24";

            cell144.Append(cellValue144);

            row31.Append(cell136);
            row31.Append(cell137);
            row31.Append(cell138);
            row31.Append(cell139);
            row31.Append(cell140);
            row31.Append(cell141);
            row31.Append(cell142);
            row31.Append(cell143);
            row31.Append(cell144);

            Row row32 = new Row(){ RowIndex = 6U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell145 = new Cell(){ CellReference = "H6", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue145 = new CellValue();
            cellValue145.Text = "11";

            cell145.Append(cellValue145);

            Cell cell146 = new Cell(){ CellReference = "I6", StyleIndex = 4U };
            CellValue cellValue146 = new CellValue();
            cellValue146.Text = "78";

            cell146.Append(cellValue146);

            Cell cell147 = new Cell(){ CellReference = "K6", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue147 = new CellValue();
            cellValue147.Text = "12";

            cell147.Append(cellValue147);

            row32.Append(cell145);
            row32.Append(cell146);
            row32.Append(cell147);

            Row row33 = new Row(){ RowIndex = 7U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell148 = new Cell(){ CellReference = "H7", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue148 = new CellValue();
            cellValue148.Text = "22";

            cell148.Append(cellValue148);

            Cell cell149 = new Cell(){ CellReference = "I7", StyleIndex = 4U };
            CellValue cellValue149 = new CellValue();
            cellValue149.Text = "99";

            cell149.Append(cellValue149);

            Cell cell150 = new Cell(){ CellReference = "K7", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue150 = new CellValue();
            cellValue150.Text = "21";

            cell150.Append(cellValue150);

            row33.Append(cell148);
            row33.Append(cell149);
            row33.Append(cell150);

            Row row34 = new Row(){ RowIndex = 8U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell151 = new Cell(){ CellReference = "H8", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue151 = new CellValue();
            cellValue151.Text = "23";

            cell151.Append(cellValue151);

            Cell cell152 = new Cell(){ CellReference = "I8", StyleIndex = 4U };
            CellValue cellValue152 = new CellValue();
            cellValue152.Text = "427";

            cell152.Append(cellValue152);

            Cell cell153 = new Cell(){ CellReference = "K8", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue153 = new CellValue();
            cellValue153.Text = "7";

            cell153.Append(cellValue153);

            row34.Append(cell151);
            row34.Append(cell152);
            row34.Append(cell153);

            Row row35 = new Row(){ RowIndex = 9U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell154 = new Cell(){ CellReference = "H9", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue154 = new CellValue();
            cellValue154.Text = "17";

            cell154.Append(cellValue154);

            Cell cell155 = new Cell(){ CellReference = "I9", StyleIndex = 4U };
            CellValue cellValue155 = new CellValue();
            cellValue155.Text = "8127";

            cell155.Append(cellValue155);

            Cell cell156 = new Cell(){ CellReference = "K9", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue156 = new CellValue();
            cellValue156.Text = "19";

            cell156.Append(cellValue156);

            row35.Append(cell154);
            row35.Append(cell155);
            row35.Append(cell156);

            Row row36 = new Row(){ RowIndex = 10U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell157 = new Cell(){ CellReference = "H10", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue157 = new CellValue();
            cellValue157.Text = "18";

            cell157.Append(cellValue157);

            Cell cell158 = new Cell(){ CellReference = "I10", StyleIndex = 4U };
            CellValue cellValue158 = new CellValue();
            cellValue158.Text = "777";

            cell158.Append(cellValue158);

            Cell cell159 = new Cell(){ CellReference = "K10", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue159 = new CellValue();
            cellValue159.Text = "15";

            cell159.Append(cellValue159);

            row36.Append(cell157);
            row36.Append(cell158);
            row36.Append(cell159);

            Row row37 = new Row(){ RowIndex = 11U, Spans = new ListValue<StringValue>() { InnerText = "1:11" } };

            Cell cell160 = new Cell(){ CellReference = "H11", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue160 = new CellValue();
            cellValue160.Text = "25";

            cell160.Append(cellValue160);

            Cell cell161 = new Cell(){ CellReference = "I11", StyleIndex = 4U };
            CellValue cellValue161 = new CellValue();
            cellValue161.Text = "262";

            cell161.Append(cellValue161);

            Cell cell162 = new Cell(){ CellReference = "K11", StyleIndex = 1U, DataType = CellValues.SharedString };
            CellValue cellValue162 = new CellValue();
            cellValue162.Text = "13";

            cell162.Append(cellValue162);

            row37.Append(cell160);
            row37.Append(cell161);
            row37.Append(cell162);

            sheetData5.Append(row27);
            sheetData5.Append(row28);
            sheetData5.Append(row29);
            sheetData5.Append(row30);
            sheetData5.Append(row31);
            sheetData5.Append(row32);
            sheetData5.Append(row33);
            sheetData5.Append(row34);
            sheetData5.Append(row35);
            sheetData5.Append(row36);
            sheetData5.Append(row37);
            PhoneticProperties phoneticProperties11 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins11 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };

            TableParts tableParts2 = new TableParts(){ Count = 3U };
            TablePart tablePart4 = new TablePart(){ Id = "rId1" };
            TablePart tablePart5 = new TablePart(){ Id = "rId2" };
            TablePart tablePart6 = new TablePart(){ Id = "rId3" };

            tableParts2.Append(tablePart4);
            tableParts2.Append(tablePart5);
            tableParts2.Append(tablePart6);

            worksheet5.Append(sheetDimension5);
            worksheet5.Append(sheetViews5);
            worksheet5.Append(sheetFormatProperties5);
            worksheet5.Append(columns5);
            worksheet5.Append(sheetData5);
            worksheet5.Append(phoneticProperties11);
            worksheet5.Append(pageMargins11);
            worksheet5.Append(tableParts2);

            worksheetPart5.Worksheet = worksheet5;
        }

        // Generates content of tableDefinitionPart4.
        private static void GenerateTableDefinitionPart4Content(TableDefinitionPart tableDefinitionPart4)
        {
            Table table4 = new Table(){ Id = 3U, Name = "SalesTable1", DisplayName = "SalesTable1", Reference = "K1:K11", TotalsRowShown = false, HeaderRowFormatId = 9U };
            AutoFilter autoFilter4 = new AutoFilter(){ Reference = "K1:K11" };

            TableColumns tableColumns4 = new TableColumns(){ Count = 1U };
            TableColumn tableColumn10 = new TableColumn(){ Id = 1U, Name = "Employee" };

            tableColumns4.Append(tableColumn10);
            TableStyleInfo tableStyleInfo4 = new TableStyleInfo(){ Name = "TableStyleMedium2", ShowFirstColumn = false, ShowLastColumn = false, ShowRowStripes = true, ShowColumnStripes = false };

            table4.Append(autoFilter4);
            table4.Append(tableColumns4);
            table4.Append(tableStyleInfo4);

            tableDefinitionPart4.Table = table4;
        }

        // Generates content of tableDefinitionPart5.
        private static void GenerateTableDefinitionPart5Content(TableDefinitionPart tableDefinitionPart5)
        {
            Table table5 = new Table(){ Id = 2U, Name = "ProductTable1", DisplayName = "ProductTable1", Reference = "H1:I11", TotalsRowShown = false, HeaderRowFormatId = 11U };
            AutoFilter autoFilter5 = new AutoFilter(){ Reference = "H1:I11" };

            TableColumns tableColumns5 = new TableColumns(){ Count = 2U };
            TableColumn tableColumn11 = new TableColumn(){ Id = 1U, Name = "ProductName" };
            TableColumn tableColumn12 = new TableColumn(){ Id = 2U, Name = "Price", DataFormatId = 10U };

            tableColumns5.Append(tableColumn11);
            tableColumns5.Append(tableColumn12);
            TableStyleInfo tableStyleInfo5 = new TableStyleInfo(){ Name = "TableStyleMedium2", ShowFirstColumn = false, ShowLastColumn = false, ShowRowStripes = true, ShowColumnStripes = false };

            table5.Append(autoFilter5);
            table5.Append(tableColumns5);
            table5.Append(tableStyleInfo5);

            tableDefinitionPart5.Table = table5;
        }

        // Generates content of tableDefinitionPart6.
        private static void GenerateTableDefinitionPart6Content(TableDefinitionPart tableDefinitionPart6)
        {
            Table table6 = new Table(){ Id = 1U, Name = "DataTable1", DisplayName = "DataTable1", Reference = "A1:F5", TotalsRowShown = false };
            AutoFilter autoFilter6 = new AutoFilter(){ Reference = "A1:F5" };

            SortState sortState2 = new SortState(){ Reference = "A2:F2001" };
            SortCondition sortCondition2 = new SortCondition(){ Reference = "A2:A2001" };

            sortState2.Append(sortCondition2);

            TableColumns tableColumns6 = new TableColumns(){ Count = 6U };
            TableColumn tableColumn13 = new TableColumn(){ Id = 1U, Name = "Date", DataFormatId = 13U };
            TableColumn tableColumn14 = new TableColumn(){ Id = 2U, Name = "Product" };
            TableColumn tableColumn15 = new TableColumn(){ Id = 3U, Name = "Quantity" };
            TableColumn tableColumn16 = new TableColumn(){ Id = 4U, Name = "Price" };
            TableColumn tableColumn17 = new TableColumn(){ Id = 5U, Name = "DeliveryDate", DataFormatId = 12U };
            TableColumn tableColumn18 = new TableColumn(){ Id = 6U, Name = "Employee" };

            tableColumns6.Append(tableColumn13);
            tableColumns6.Append(tableColumn14);
            tableColumns6.Append(tableColumn15);
            tableColumns6.Append(tableColumn16);
            tableColumns6.Append(tableColumn17);
            tableColumns6.Append(tableColumn18);
            TableStyleInfo tableStyleInfo6 = new TableStyleInfo(){ Name = "TableStyleMedium2", ShowFirstColumn = false, ShowLastColumn = false, ShowRowStripes = true, ShowColumnStripes = false };

            table6.Append(autoFilter6);
            table6.Append(sortState2);
            table6.Append(tableColumns6);
            table6.Append(tableStyleInfo6);

            tableDefinitionPart6.Table = table6;
        }

        // Generates content of worksheetPart6.
        private static void GenerateWorksheetPart6Content(WorksheetPart worksheetPart6)
        {
            Worksheet worksheet6 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet6.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet6.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet6.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension6 = new SheetDimension(){ Reference = "A1:B5" };

            SheetViews sheetViews6 = new SheetViews();
            SheetView sheetView6 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews6.Append(sheetView6);
            SheetFormatProperties sheetFormatProperties6 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns6 = new Columns();
            Column column34 = new Column(){ Min = 1U, Max = 1U, Width = 14.140625D, BestFit = true, CustomWidth = true };
            Column column35 = new Column(){ Min = 2U, Max = 2U, Width = 17.42578125D, CustomWidth = true };
            Column column36 = new Column(){ Min = 3U, Max = 3U, Width = 12.42578125D, CustomWidth = true };
            Column column37 = new Column(){ Min = 4U, Max = 11U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column38 = new Column(){ Min = 12U, Max = 12U, Width = 13D, CustomWidth = true };
            Column column39 = new Column(){ Min = 13U, Max = 20U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column40 = new Column(){ Min = 21U, Max = 23U, Width = 20.42578125D, BestFit = true, CustomWidth = true };

            columns6.Append(column34);
            columns6.Append(column35);
            columns6.Append(column36);
            columns6.Append(column37);
            columns6.Append(column38);
            columns6.Append(column39);
            columns6.Append(column40);

            SheetData sheetData6 = new SheetData();

            Row row38 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell163 = new Cell(){ CellReference = "A1", StyleIndex = 5U, DataType = CellValues.SharedString };
            CellValue cellValue163 = new CellValue();
            cellValue163.Text = "29";

            cell163.Append(cellValue163);

            Cell cell164 = new Cell(){ CellReference = "B1", DataType = CellValues.SharedString };
            CellValue cellValue164 = new CellValue();
            cellValue164.Text = "28";

            cell164.Append(cellValue164);

            row38.Append(cell163);
            row38.Append(cell164);

            Row row39 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell165 = new Cell(){ CellReference = "A2", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue165 = new CellValue();
            cellValue165.Text = "6";

            cell165.Append(cellValue165);

            Cell cell166 = new Cell(){ CellReference = "B2", StyleIndex = 7U };
            CellValue cellValue166 = new CellValue();
            cellValue166.Text = "19";

            cell166.Append(cellValue166);

            row39.Append(cell165);
            row39.Append(cell166);

            Row row40 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell167 = new Cell(){ CellReference = "A3", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue167 = new CellValue();
            cellValue167.Text = "8";

            cell167.Append(cellValue167);

            Cell cell168 = new Cell(){ CellReference = "B3", StyleIndex = 7U };
            CellValue cellValue168 = new CellValue();
            cellValue168.Text = "13";

            cell168.Append(cellValue168);

            row40.Append(cell167);
            row40.Append(cell168);

            Row row41 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell169 = new Cell(){ CellReference = "A4", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue169 = new CellValue();
            cellValue169.Text = "11";

            cell169.Append(cellValue169);

            Cell cell170 = new Cell(){ CellReference = "B4", StyleIndex = 7U };
            CellValue cellValue170 = new CellValue();
            cellValue170.Text = "33";

            cell170.Append(cellValue170);

            row41.Append(cell169);
            row41.Append(cell170);

            Row row42 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell171 = new Cell(){ CellReference = "A5", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue171 = new CellValue();
            cellValue171.Text = "30";

            cell171.Append(cellValue171);

            Cell cell172 = new Cell(){ CellReference = "B5", StyleIndex = 7U };
            CellValue cellValue172 = new CellValue();
            cellValue172.Text = "65";

            cell172.Append(cellValue172);

            row42.Append(cell171);
            row42.Append(cell172);

            sheetData6.Append(row38);
            sheetData6.Append(row39);
            sheetData6.Append(row40);
            sheetData6.Append(row41);
            sheetData6.Append(row42);
            PhoneticProperties phoneticProperties12 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins12 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            S.Drawing drawing4 = new S.Drawing(){ Id = "rId2" };

            WorksheetExtensionList worksheetExtensionList4 = new WorksheetExtensionList();

            WorksheetExtension worksheetExtension4 = new WorksheetExtension(){ Uri = "{7E03D99C-DC04-49d9-9315-930204A7B6E9}" };
            worksheetExtension4.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineReferences timelineReferences4 = new X15.TimelineReferences();
            X15.TimelineReference timelineReference4 = new X15.TimelineReference(){ Id = "rId3" };

            timelineReferences4.Append(timelineReference4);

            worksheetExtension4.Append(timelineReferences4);

            worksheetExtensionList4.Append(worksheetExtension4);

            worksheet6.Append(sheetDimension6);
            worksheet6.Append(sheetViews6);
            worksheet6.Append(sheetFormatProperties6);
            worksheet6.Append(columns6);
            worksheet6.Append(sheetData6);
            worksheet6.Append(phoneticProperties12);
            worksheet6.Append(pageMargins12);
            worksheet6.Append(drawing4);
            worksheet6.Append(worksheetExtensionList4);

            worksheetPart6.Worksheet = worksheet6;
        }

        // Generates content of timeLinePart4.
        private static void GenerateTimeLinePart4Content(TimeLinePart timeLinePart4)
        {
            X15.Timelines timelines4 = new X15.Timelines(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x" }  };
            timelines4.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            timelines4.AddNamespaceDeclaration("x", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");
            X15.Timeline timeline7 = new X15.Timeline(){ Name = "DeliveryDate 6", Cache = "NativeTimeline_DeliveryDate2", Caption = "ShowHeader1", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline8 = new X15.Timeline(){ Name = "DeliveryDate 7", Cache = "NativeTimeline_DeliveryDate2", Caption = "ShowHeader2", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelines4.Append(timeline7);
            timelines4.Append(timeline8);

            timeLinePart4.Timelines = timelines4;
        }

        // Generates content of drawingsPart4.
        private static void GenerateDrawingsPart4Content(DrawingsPart drawingsPart4)
        {
            Xdr.WorksheetDrawing worksheetDrawing4 = new Xdr.WorksheetDrawing();
            worksheetDrawing4.AddNamespaceDeclaration("xdr", "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing");
            worksheetDrawing4.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            Xdr.TwoCellAnchor twoCellAnchor13 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker13 = new Xdr.FromMarker();
            Xdr.ColumnId columnId25 = new Xdr.ColumnId();
            columnId25.Text = "2";
            Xdr.ColumnOffset columnOffset25 = new Xdr.ColumnOffset();
            columnOffset25.Text = "185737";
            Xdr.RowId rowId25 = new Xdr.RowId();
            rowId25.Text = "0";
            Xdr.RowOffset rowOffset25 = new Xdr.RowOffset();
            rowOffset25.Text = "0";

            fromMarker13.Append(columnId25);
            fromMarker13.Append(columnOffset25);
            fromMarker13.Append(rowId25);
            fromMarker13.Append(rowOffset25);

            Xdr.ToMarker toMarker13 = new Xdr.ToMarker();
            Xdr.ColumnId columnId26 = new Xdr.ColumnId();
            columnId26.Text = "9";
            Xdr.ColumnOffset columnOffset26 = new Xdr.ColumnOffset();
            columnOffset26.Text = "90487";
            Xdr.RowId rowId26 = new Xdr.RowId();
            rowId26.Text = "14";
            Xdr.RowOffset rowOffset26 = new Xdr.RowOffset();
            rowOffset26.Text = "76200";

            toMarker13.Append(columnId26);
            toMarker13.Append(columnOffset26);
            toMarker13.Append(rowId26);
            toMarker13.Append(rowOffset26);

            Xdr.GraphicFrame graphicFrame13 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties13 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties19 = new Xdr.NonVisualDrawingProperties(){ Id = 2U, Name = "Chart 1" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties13 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks5 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties13.Append(graphicFrameLocks5);

            nonVisualGraphicFrameProperties13.Append(nonVisualDrawingProperties19);
            nonVisualGraphicFrameProperties13.Append(nonVisualGraphicFrameDrawingProperties13);

            Xdr.Transform transform13 = new Xdr.Transform();
            A.Offset offset19 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents19 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform13.Append(offset19);
            transform13.Append(extents19);

            A.Graphic graphic13 = new A.Graphic();

            A.GraphicData graphicData13 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference7 = new C.ChartReference(){ Id = "rId1" };
            chartReference7.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference7.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData13.Append(chartReference7);

            graphic13.Append(graphicData13);

            graphicFrame13.Append(nonVisualGraphicFrameProperties13);
            graphicFrame13.Append(transform13);
            graphicFrame13.Append(graphic13);
            Xdr.ClientData clientData13 = new Xdr.ClientData();

            twoCellAnchor13.Append(fromMarker13);
            twoCellAnchor13.Append(toMarker13);
            twoCellAnchor13.Append(graphicFrame13);
            twoCellAnchor13.Append(clientData13);

            Xdr.TwoCellAnchor twoCellAnchor14 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker14 = new Xdr.FromMarker();
            Xdr.ColumnId columnId27 = new Xdr.ColumnId();
            columnId27.Text = "2";
            Xdr.ColumnOffset columnOffset27 = new Xdr.ColumnOffset();
            columnOffset27.Text = "200025";
            Xdr.RowId rowId27 = new Xdr.RowId();
            rowId27.Text = "14";
            Xdr.RowOffset rowOffset27 = new Xdr.RowOffset();
            rowOffset27.Text = "147637";

            fromMarker14.Append(columnId27);
            fromMarker14.Append(columnOffset27);
            fromMarker14.Append(rowId27);
            fromMarker14.Append(rowOffset27);

            Xdr.ToMarker toMarker14 = new Xdr.ToMarker();
            Xdr.ColumnId columnId28 = new Xdr.ColumnId();
            columnId28.Text = "7";
            Xdr.ColumnOffset columnOffset28 = new Xdr.ColumnOffset();
            columnOffset28.Text = "476250";
            Xdr.RowId rowId28 = new Xdr.RowId();
            rowId28.Text = "29";
            Xdr.RowOffset rowOffset28 = new Xdr.RowOffset();
            rowOffset28.Text = "33337";

            toMarker14.Append(columnId28);
            toMarker14.Append(columnOffset28);
            toMarker14.Append(rowId28);
            toMarker14.Append(rowOffset28);

            Xdr.GraphicFrame graphicFrame14 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties14 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties20 = new Xdr.NonVisualDrawingProperties(){ Id = 3U, Name = "グラフ 2" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties14 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks6 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties14.Append(graphicFrameLocks6);

            nonVisualGraphicFrameProperties14.Append(nonVisualDrawingProperties20);
            nonVisualGraphicFrameProperties14.Append(nonVisualGraphicFrameDrawingProperties14);

            Xdr.Transform transform14 = new Xdr.Transform();
            A.Offset offset20 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents20 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform14.Append(offset20);
            transform14.Append(extents20);

            A.Graphic graphic14 = new A.Graphic();

            A.GraphicData graphicData14 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference8 = new C.ChartReference(){ Id = "rId2" };
            chartReference8.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference8.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData14.Append(chartReference8);

            graphic14.Append(graphicData14);

            graphicFrame14.Append(nonVisualGraphicFrameProperties14);
            graphicFrame14.Append(transform14);
            graphicFrame14.Append(graphic14);
            Xdr.ClientData clientData14 = new Xdr.ClientData();

            twoCellAnchor14.Append(fromMarker14);
            twoCellAnchor14.Append(toMarker14);
            twoCellAnchor14.Append(graphicFrame14);
            twoCellAnchor14.Append(clientData14);

            Xdr.TwoCellAnchor twoCellAnchor15 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker15 = new Xdr.FromMarker();
            Xdr.ColumnId columnId29 = new Xdr.ColumnId();
            columnId29.Text = "10";
            Xdr.ColumnOffset columnOffset29 = new Xdr.ColumnOffset();
            columnOffset29.Text = "19050";
            Xdr.RowId rowId29 = new Xdr.RowId();
            rowId29.Text = "1";
            Xdr.RowOffset rowOffset29 = new Xdr.RowOffset();
            rowOffset29.Text = "19050";

            fromMarker15.Append(columnId29);
            fromMarker15.Append(columnOffset29);
            fromMarker15.Append(rowId29);
            fromMarker15.Append(rowOffset29);

            Xdr.ToMarker toMarker15 = new Xdr.ToMarker();
            Xdr.ColumnId columnId30 = new Xdr.ColumnId();
            columnId30.Text = "13";
            Xdr.ColumnOffset columnOffset30 = new Xdr.ColumnOffset();
            columnOffset30.Text = "752475";
            Xdr.RowId rowId30 = new Xdr.RowId();
            rowId30.Text = "7";
            Xdr.RowOffset rowOffset30 = new Xdr.RowOffset();
            rowOffset30.Text = "66675";

            toMarker15.Append(columnId30);
            toMarker15.Append(columnOffset30);
            toMarker15.Append(rowId30);
            toMarker15.Append(rowOffset30);

            AlternateContent alternateContent14 = new AlternateContent();
            alternateContent14.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent14.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice14 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame15 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties15 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties21 = new Xdr.NonVisualDrawingProperties(){ Id = 4U, Name = "DeliveryDate 6" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties15 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties15.Append(nonVisualDrawingProperties21);
            nonVisualGraphicFrameProperties15.Append(nonVisualGraphicFrameDrawingProperties15);

            Xdr.Transform transform15 = new Xdr.Transform();
            A.Offset offset21 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents21 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform15.Append(offset21);
            transform15.Append(extents21);

            A.Graphic graphic15 = new A.Graphic();

            A.GraphicData graphicData15 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer7 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 6" };
            timeSlicer7.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData15.Append(timeSlicer7);

            graphic15.Append(graphicData15);

            graphicFrame15.Append(nonVisualGraphicFrameProperties15);
            graphicFrame15.Append(transform15);
            graphicFrame15.Append(graphic15);

            alternateContentChoice14.Append(graphicFrame15);

            AlternateContentFallback alternateContentFallback13 = new AlternateContentFallback();
            alternateContentFallback13.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback13.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape7 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties7 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties22 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties7 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks7 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties7.Append(shapeLocks7);

            nonVisualShapeProperties7.Append(nonVisualDrawingProperties22);
            nonVisualShapeProperties7.Append(nonVisualShapeDrawingProperties7);

            Xdr.ShapeProperties shapeProperties22 = new Xdr.ShapeProperties();

            A.Transform2D transform2D7 = new A.Transform2D();
            A.Offset offset22 = new A.Offset(){ X = 8620125L, Y = 209550L };
            A.Extents extents22 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D7.Append(offset22);
            transform2D7.Append(extents22);

            A.PresetGeometry presetGeometry7 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList7 = new A.AdjustValueList();

            presetGeometry7.Append(adjustValueList7);

            A.SolidFill solidFill40 = new A.SolidFill();
            A.PresetColor presetColor13 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill40.Append(presetColor13);

            A.Outline outline32 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill41 = new A.SolidFill();
            A.PresetColor presetColor14 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill41.Append(presetColor14);

            outline32.Append(solidFill41);

            shapeProperties22.Append(transform2D7);
            shapeProperties22.Append(presetGeometry7);
            shapeProperties22.Append(solidFill40);
            shapeProperties22.Append(outline32);

            Xdr.TextBody textBody7 = new Xdr.TextBody();
            A.BodyProperties bodyProperties15 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle15 = new A.ListStyle();

            A.Paragraph paragraph15 = new A.Paragraph();

            A.Run run7 = new A.Run();
            A.RunProperties runProperties7 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text45 = new A.Text();
            text45.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run7.Append(runProperties7);
            run7.Append(text45);

            paragraph15.Append(run7);

            textBody7.Append(bodyProperties15);
            textBody7.Append(listStyle15);
            textBody7.Append(paragraph15);

            shape7.Append(nonVisualShapeProperties7);
            shape7.Append(shapeProperties22);
            shape7.Append(textBody7);

            alternateContentFallback13.Append(shape7);

            alternateContent14.Append(alternateContentChoice14);
            alternateContent14.Append(alternateContentFallback13);
            Xdr.ClientData clientData15 = new Xdr.ClientData();

            twoCellAnchor15.Append(fromMarker15);
            twoCellAnchor15.Append(toMarker15);
            twoCellAnchor15.Append(alternateContent14);
            twoCellAnchor15.Append(clientData15);

            Xdr.TwoCellAnchor twoCellAnchor16 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker16 = new Xdr.FromMarker();
            Xdr.ColumnId columnId31 = new Xdr.ColumnId();
            columnId31.Text = "10";
            Xdr.ColumnOffset columnOffset31 = new Xdr.ColumnOffset();
            columnOffset31.Text = "28575";
            Xdr.RowId rowId31 = new Xdr.RowId();
            rowId31.Text = "9";
            Xdr.RowOffset rowOffset31 = new Xdr.RowOffset();
            rowOffset31.Text = "19050";

            fromMarker16.Append(columnId31);
            fromMarker16.Append(columnOffset31);
            fromMarker16.Append(rowId31);
            fromMarker16.Append(rowOffset31);

            Xdr.ToMarker toMarker16 = new Xdr.ToMarker();
            Xdr.ColumnId columnId32 = new Xdr.ColumnId();
            columnId32.Text = "13";
            Xdr.ColumnOffset columnOffset32 = new Xdr.ColumnOffset();
            columnOffset32.Text = "762000";
            Xdr.RowId rowId32 = new Xdr.RowId();
            rowId32.Text = "15";
            Xdr.RowOffset rowOffset32 = new Xdr.RowOffset();
            rowOffset32.Text = "66675";

            toMarker16.Append(columnId32);
            toMarker16.Append(columnOffset32);
            toMarker16.Append(rowId32);
            toMarker16.Append(rowOffset32);

            AlternateContent alternateContent15 = new AlternateContent();
            alternateContent15.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent15.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice15 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame16 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties16 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties23 = new Xdr.NonVisualDrawingProperties(){ Id = 5U, Name = "DeliveryDate 7" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties16 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties16.Append(nonVisualDrawingProperties23);
            nonVisualGraphicFrameProperties16.Append(nonVisualGraphicFrameDrawingProperties16);

            Xdr.Transform transform16 = new Xdr.Transform();
            A.Offset offset23 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents23 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform16.Append(offset23);
            transform16.Append(extents23);

            A.Graphic graphic16 = new A.Graphic();

            A.GraphicData graphicData16 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer8 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 7" };
            timeSlicer8.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData16.Append(timeSlicer8);

            graphic16.Append(graphicData16);

            graphicFrame16.Append(nonVisualGraphicFrameProperties16);
            graphicFrame16.Append(transform16);
            graphicFrame16.Append(graphic16);

            alternateContentChoice15.Append(graphicFrame16);

            AlternateContentFallback alternateContentFallback14 = new AlternateContentFallback();
            alternateContentFallback14.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback14.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape8 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties8 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties24 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties8 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks8 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties8.Append(shapeLocks8);

            nonVisualShapeProperties8.Append(nonVisualDrawingProperties24);
            nonVisualShapeProperties8.Append(nonVisualShapeDrawingProperties8);

            Xdr.ShapeProperties shapeProperties23 = new Xdr.ShapeProperties();

            A.Transform2D transform2D8 = new A.Transform2D();
            A.Offset offset24 = new A.Offset(){ X = 8629650L, Y = 1733550L };
            A.Extents extents24 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D8.Append(offset24);
            transform2D8.Append(extents24);

            A.PresetGeometry presetGeometry8 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList8 = new A.AdjustValueList();

            presetGeometry8.Append(adjustValueList8);

            A.SolidFill solidFill42 = new A.SolidFill();
            A.PresetColor presetColor15 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill42.Append(presetColor15);

            A.Outline outline33 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill43 = new A.SolidFill();
            A.PresetColor presetColor16 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill43.Append(presetColor16);

            outline33.Append(solidFill43);

            shapeProperties23.Append(transform2D8);
            shapeProperties23.Append(presetGeometry8);
            shapeProperties23.Append(solidFill42);
            shapeProperties23.Append(outline33);

            Xdr.TextBody textBody8 = new Xdr.TextBody();
            A.BodyProperties bodyProperties16 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle16 = new A.ListStyle();

            A.Paragraph paragraph16 = new A.Paragraph();

            A.Run run8 = new A.Run();
            A.RunProperties runProperties8 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text46 = new A.Text();
            text46.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run8.Append(runProperties8);
            run8.Append(text46);

            paragraph16.Append(run8);

            textBody8.Append(bodyProperties16);
            textBody8.Append(listStyle16);
            textBody8.Append(paragraph16);

            shape8.Append(nonVisualShapeProperties8);
            shape8.Append(shapeProperties23);
            shape8.Append(textBody8);

            alternateContentFallback14.Append(shape8);

            alternateContent15.Append(alternateContentChoice15);
            alternateContent15.Append(alternateContentFallback14);
            Xdr.ClientData clientData16 = new Xdr.ClientData();

            twoCellAnchor16.Append(fromMarker16);
            twoCellAnchor16.Append(toMarker16);
            twoCellAnchor16.Append(alternateContent15);
            twoCellAnchor16.Append(clientData16);

            worksheetDrawing4.Append(twoCellAnchor13);
            worksheetDrawing4.Append(twoCellAnchor14);
            worksheetDrawing4.Append(twoCellAnchor15);
            worksheetDrawing4.Append(twoCellAnchor16);

            drawingsPart4.WorksheetDrawing = worksheetDrawing4;
        }

        // Generates content of chartPart7.
        private static void GenerateChartPart7Content(ChartPart chartPart7)
        {
            C.ChartSpace chartSpace7 = new C.ChartSpace();
            chartSpace7.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace7.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace7.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date19047 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage7 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners7 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent16 = new AlternateContent();
            alternateContent16.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice16 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice16.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style13 = new C14.Style(){ Val = 102 };

            alternateContentChoice16.Append(style13);

            AlternateContentFallback alternateContentFallback15 = new AlternateContentFallback();
            C.Style style14 = new C.Style(){ Val = 2 };

            alternateContentFallback15.Append(style14);

            alternateContent16.Append(alternateContentChoice16);
            alternateContent16.Append(alternateContentFallback15);

            C.PivotSource pivotSource7 = new C.PivotSource();
            C.PivotTableName pivotTableName7 = new C.PivotTableName();
            pivotTableName7.Text = "[GeneratedDocument.xlsx]ShowHeader!PivotTable1";
            C.FormatId formatId7 = new C.FormatId(){ Val = 10U };

            pivotSource7.Append(pivotTableName7);
            pivotSource7.Append(formatId7);

            C.Chart chart7 = new C.Chart();

            C.Title title7 = new C.Title();
            C.Overlay overlay13 = new C.Overlay(){ Val = false };

            title7.Append(overlay13);
            C.AutoTitleDeleted autoTitleDeleted7 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats7 = new C.PivotFormats();

            C.PivotFormat pivotFormat47 = new C.PivotFormat();
            C.Index index53 = new C.Index(){ Val = 0U };

            C.Marker marker47 = new C.Marker();
            C.Symbol symbol47 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker47.Append(symbol47);

            pivotFormat47.Append(index53);
            pivotFormat47.Append(marker47);

            C.PivotFormat pivotFormat48 = new C.PivotFormat();
            C.Index index54 = new C.Index(){ Val = 1U };

            C.Marker marker48 = new C.Marker();
            C.Symbol symbol48 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker48.Append(symbol48);

            pivotFormat48.Append(index54);
            pivotFormat48.Append(marker48);

            C.PivotFormat pivotFormat49 = new C.PivotFormat();
            C.Index index55 = new C.Index(){ Val = 2U };

            C.Marker marker49 = new C.Marker();
            C.Symbol symbol49 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker49.Append(symbol49);

            pivotFormat49.Append(index55);
            pivotFormat49.Append(marker49);

            pivotFormats7.Append(pivotFormat47);
            pivotFormats7.Append(pivotFormat48);
            pivotFormats7.Append(pivotFormat49);

            C.PlotArea plotArea7 = new C.PlotArea();
            C.Layout layout7 = new C.Layout();

            C.PieChart pieChart4 = new C.PieChart();
            C.VaryColors varyColors7 = new C.VaryColors(){ Val = true };

            C.PieChartSeries pieChartSeries4 = new C.PieChartSeries();
            C.Index index56 = new C.Index(){ Val = 0U };
            C.Order order7 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText7 = new C.SeriesText();

            C.StringReference stringReference13 = new C.StringReference();
            C.Formula formula19 = new C.Formula();
            formula19.Text = "ShowHeader!$B$1";

            C.StringCache stringCache13 = new C.StringCache();
            C.PointCount pointCount19 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint25 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue43 = new C.NumericValue();
            numericValue43.Text = "Total";

            stringPoint25.Append(numericValue43);

            stringCache13.Append(pointCount19);
            stringCache13.Append(stringPoint25);

            stringReference13.Append(formula19);
            stringReference13.Append(stringCache13);

            seriesText7.Append(stringReference13);

            C.CategoryAxisData categoryAxisData7 = new C.CategoryAxisData();

            C.StringReference stringReference14 = new C.StringReference();
            C.Formula formula20 = new C.Formula();
            formula20.Text = "ShowHeader!$A$2:$A$5";

            C.StringCache stringCache14 = new C.StringCache();
            C.PointCount pointCount20 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint26 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue44 = new C.NumericValue();
            numericValue44.Text = "product_A";

            stringPoint26.Append(numericValue44);

            C.StringPoint stringPoint27 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue45 = new C.NumericValue();
            numericValue45.Text = "product_D";

            stringPoint27.Append(numericValue45);

            C.StringPoint stringPoint28 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue46 = new C.NumericValue();
            numericValue46.Text = "product_E";

            stringPoint28.Append(numericValue46);

            stringCache14.Append(pointCount20);
            stringCache14.Append(stringPoint26);
            stringCache14.Append(stringPoint27);
            stringCache14.Append(stringPoint28);

            stringReference14.Append(formula20);
            stringReference14.Append(stringCache14);

            categoryAxisData7.Append(stringReference14);

            C.Values values7 = new C.Values();

            C.NumberReference numberReference7 = new C.NumberReference();
            C.Formula formula21 = new C.Formula();
            formula21.Text = "ShowHeader!$B$2:$B$5";

            C.NumberingCache numberingCache7 = new C.NumberingCache();
            C.FormatCode formatCode7 = new C.FormatCode();
            formatCode7.Text = "General";
            C.PointCount pointCount21 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint19 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue47 = new C.NumericValue();
            numericValue47.Text = "19";

            numericPoint19.Append(numericValue47);

            C.NumericPoint numericPoint20 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue48 = new C.NumericValue();
            numericValue48.Text = "13";

            numericPoint20.Append(numericValue48);

            C.NumericPoint numericPoint21 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue49 = new C.NumericValue();
            numericValue49.Text = "33";

            numericPoint21.Append(numericValue49);

            numberingCache7.Append(formatCode7);
            numberingCache7.Append(pointCount21);
            numberingCache7.Append(numericPoint19);
            numberingCache7.Append(numericPoint20);
            numberingCache7.Append(numericPoint21);

            numberReference7.Append(formula21);
            numberReference7.Append(numberingCache7);

            values7.Append(numberReference7);

            pieChartSeries4.Append(index56);
            pieChartSeries4.Append(order7);
            pieChartSeries4.Append(seriesText7);
            pieChartSeries4.Append(categoryAxisData7);
            pieChartSeries4.Append(values7);

            C.DataLabels dataLabels7 = new C.DataLabels();
            C.ShowLegendKey showLegendKey7 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue7 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName7 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName7 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent7 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize7 = new C.ShowBubbleSize(){ Val = false };
            C.ShowLeaderLines showLeaderLines4 = new C.ShowLeaderLines(){ Val = true };

            dataLabels7.Append(showLegendKey7);
            dataLabels7.Append(showValue7);
            dataLabels7.Append(showCategoryName7);
            dataLabels7.Append(showSeriesName7);
            dataLabels7.Append(showPercent7);
            dataLabels7.Append(showBubbleSize7);
            dataLabels7.Append(showLeaderLines4);
            C.FirstSliceAngle firstSliceAngle4 = new C.FirstSliceAngle(){ Val = (UInt16Value)0U };

            pieChart4.Append(varyColors7);
            pieChart4.Append(pieChartSeries4);
            pieChart4.Append(dataLabels7);
            pieChart4.Append(firstSliceAngle4);

            plotArea7.Append(layout7);
            plotArea7.Append(pieChart4);

            C.Legend legend7 = new C.Legend();
            C.LegendPosition legendPosition7 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay14 = new C.Overlay(){ Val = false };

            legend7.Append(legendPosition7);
            legend7.Append(overlay14);
            C.PlotVisibleOnly plotVisibleOnly7 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs7 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum7 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart7.Append(title7);
            chart7.Append(autoTitleDeleted7);
            chart7.Append(pivotFormats7);
            chart7.Append(plotArea7);
            chart7.Append(legend7);
            chart7.Append(plotVisibleOnly7);
            chart7.Append(displayBlanksAs7);
            chart7.Append(showDataLabelsOverMaximum7);

            C.PrintSettings printSettings7 = new C.PrintSettings();
            C.HeaderFooter headerFooter7 = new C.HeaderFooter();
            C.PageMargins pageMargins13 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup7 = new C.PageSetup();

            printSettings7.Append(headerFooter7);
            printSettings7.Append(pageMargins13);
            printSettings7.Append(pageSetup7);

            C.ChartSpaceExtensionList chartSpaceExtensionList7 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList7.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList7.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension7 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension7.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions7 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter7 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories7 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData7 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries7 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible7 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions7.Append(dropZoneFilter7);
            pivotOptions7.Append(dropZoneCategories7);
            pivotOptions7.Append(dropZoneData7);
            pivotOptions7.Append(dropZoneSeries7);
            pivotOptions7.Append(dropZonesVisible7);

            chartSpaceExtension7.Append(pivotOptions7);

            chartSpaceExtensionList7.Append(chartSpaceExtension7);

            chartSpace7.Append(date19047);
            chartSpace7.Append(editingLanguage7);
            chartSpace7.Append(roundedCorners7);
            chartSpace7.Append(alternateContent16);
            chartSpace7.Append(pivotSource7);
            chartSpace7.Append(chart7);
            chartSpace7.Append(printSettings7);
            chartSpace7.Append(chartSpaceExtensionList7);

            chartPart7.ChartSpace = chartSpace7;
        }

        // Generates content of chartPart8.
        private static void GenerateChartPart8Content(ChartPart chartPart8)
        {
            C.ChartSpace chartSpace8 = new C.ChartSpace();
            chartSpace8.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace8.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace8.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date19048 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage8 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners8 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent17 = new AlternateContent();
            alternateContent17.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice17 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice17.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style15 = new C14.Style(){ Val = 101 };

            alternateContentChoice17.Append(style15);

            AlternateContentFallback alternateContentFallback16 = new AlternateContentFallback();
            C.Style style16 = new C.Style(){ Val = 1 };

            alternateContentFallback16.Append(style16);

            alternateContent17.Append(alternateContentChoice17);
            alternateContent17.Append(alternateContentFallback16);

            C.PivotSource pivotSource8 = new C.PivotSource();
            C.PivotTableName pivotTableName8 = new C.PivotTableName();
            pivotTableName8.Text = "[GeneratedDocument.xlsx]ShowHeader!PivotTable1";
            C.FormatId formatId8 = new C.FormatId(){ Val = 9U };

            pivotSource8.Append(pivotTableName8);
            pivotSource8.Append(formatId8);

            C.Chart chart8 = new C.Chart();

            C.Title title8 = new C.Title();
            C.Overlay overlay15 = new C.Overlay(){ Val = false };

            title8.Append(overlay15);
            C.AutoTitleDeleted autoTitleDeleted8 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats8 = new C.PivotFormats();

            C.PivotFormat pivotFormat50 = new C.PivotFormat();
            C.Index index57 = new C.Index(){ Val = 0U };

            C.ShapeProperties shapeProperties24 = new C.ShapeProperties();

            A.SolidFill solidFill44 = new A.SolidFill();

            A.SchemeColor schemeColor28 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint14 = new A.Tint(){ Val = 100000 };

            schemeColor28.Append(tint14);

            solidFill44.Append(schemeColor28);

            A.Outline outline34 = new A.Outline();
            A.NoFill noFill28 = new A.NoFill();

            outline34.Append(noFill28);
            A.EffectList effectList26 = new A.EffectList();

            shapeProperties24.Append(solidFill44);
            shapeProperties24.Append(outline34);
            shapeProperties24.Append(effectList26);

            C.Marker marker50 = new C.Marker();
            C.Symbol symbol50 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker50.Append(symbol50);

            pivotFormat50.Append(index57);
            pivotFormat50.Append(shapeProperties24);
            pivotFormat50.Append(marker50);

            C.PivotFormat pivotFormat51 = new C.PivotFormat();
            C.Index index58 = new C.Index(){ Val = 1U };

            C.ShapeProperties shapeProperties25 = new C.ShapeProperties();

            A.SolidFill solidFill45 = new A.SolidFill();

            A.SchemeColor schemeColor29 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent2 };
            A.Tint tint15 = new A.Tint(){ Val = 100000 };

            schemeColor29.Append(tint15);

            solidFill45.Append(schemeColor29);

            A.Outline outline35 = new A.Outline();
            A.NoFill noFill29 = new A.NoFill();

            outline35.Append(noFill29);
            A.EffectList effectList27 = new A.EffectList();

            shapeProperties25.Append(solidFill45);
            shapeProperties25.Append(outline35);
            shapeProperties25.Append(effectList27);

            C.Marker marker51 = new C.Marker();
            C.Symbol symbol51 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker51.Append(symbol51);

            pivotFormat51.Append(index58);
            pivotFormat51.Append(shapeProperties25);
            pivotFormat51.Append(marker51);

            C.PivotFormat pivotFormat52 = new C.PivotFormat();
            C.Index index59 = new C.Index(){ Val = 2U };

            C.Marker marker52 = new C.Marker();
            C.Symbol symbol52 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker52.Append(symbol52);

            pivotFormat52.Append(index59);
            pivotFormat52.Append(marker52);

            C.PivotFormat pivotFormat53 = new C.PivotFormat();
            C.Index index60 = new C.Index(){ Val = 3U };

            C.Marker marker53 = new C.Marker();
            C.Symbol symbol53 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker53.Append(symbol53);

            pivotFormat53.Append(index60);
            pivotFormat53.Append(marker53);

            C.PivotFormat pivotFormat54 = new C.PivotFormat();
            C.Index index61 = new C.Index(){ Val = 4U };

            C.Marker marker54 = new C.Marker();
            C.Symbol symbol54 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker54.Append(symbol54);

            pivotFormat54.Append(index61);
            pivotFormat54.Append(marker54);

            C.PivotFormat pivotFormat55 = new C.PivotFormat();
            C.Index index62 = new C.Index(){ Val = 5U };

            C.Marker marker55 = new C.Marker();
            C.Symbol symbol55 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker55.Append(symbol55);

            pivotFormat55.Append(index62);
            pivotFormat55.Append(marker55);

            C.PivotFormat pivotFormat56 = new C.PivotFormat();
            C.Index index63 = new C.Index(){ Val = 6U };

            C.Marker marker56 = new C.Marker();
            C.Symbol symbol56 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker56.Append(symbol56);

            pivotFormat56.Append(index63);
            pivotFormat56.Append(marker56);

            C.PivotFormat pivotFormat57 = new C.PivotFormat();
            C.Index index64 = new C.Index(){ Val = 7U };

            C.Marker marker57 = new C.Marker();
            C.Symbol symbol57 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker57.Append(symbol57);

            pivotFormat57.Append(index64);
            pivotFormat57.Append(marker57);

            C.PivotFormat pivotFormat58 = new C.PivotFormat();
            C.Index index65 = new C.Index(){ Val = 8U };

            C.Marker marker58 = new C.Marker();
            C.Symbol symbol58 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker58.Append(symbol58);

            pivotFormat58.Append(index65);
            pivotFormat58.Append(marker58);

            C.PivotFormat pivotFormat59 = new C.PivotFormat();
            C.Index index66 = new C.Index(){ Val = 9U };

            C.Marker marker59 = new C.Marker();
            C.Symbol symbol59 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker59.Append(symbol59);

            pivotFormat59.Append(index66);
            pivotFormat59.Append(marker59);

            C.PivotFormat pivotFormat60 = new C.PivotFormat();
            C.Index index67 = new C.Index(){ Val = 10U };

            C.Marker marker60 = new C.Marker();
            C.Symbol symbol60 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker60.Append(symbol60);

            pivotFormat60.Append(index67);
            pivotFormat60.Append(marker60);

            C.PivotFormat pivotFormat61 = new C.PivotFormat();
            C.Index index68 = new C.Index(){ Val = 11U };

            C.Marker marker61 = new C.Marker();
            C.Symbol symbol61 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker61.Append(symbol61);

            pivotFormat61.Append(index68);
            pivotFormat61.Append(marker61);

            C.PivotFormat pivotFormat62 = new C.PivotFormat();
            C.Index index69 = new C.Index(){ Val = 12U };

            C.Marker marker62 = new C.Marker();
            C.Symbol symbol62 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker62.Append(symbol62);

            pivotFormat62.Append(index69);
            pivotFormat62.Append(marker62);

            C.PivotFormat pivotFormat63 = new C.PivotFormat();
            C.Index index70 = new C.Index(){ Val = 13U };

            C.Marker marker63 = new C.Marker();
            C.Symbol symbol63 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker63.Append(symbol63);

            pivotFormat63.Append(index70);
            pivotFormat63.Append(marker63);

            C.PivotFormat pivotFormat64 = new C.PivotFormat();
            C.Index index71 = new C.Index(){ Val = 14U };

            C.ShapeProperties shapeProperties26 = new C.ShapeProperties();

            A.SolidFill solidFill46 = new A.SolidFill();

            A.SchemeColor schemeColor30 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint16 = new A.Tint(){ Val = 100000 };

            schemeColor30.Append(tint16);

            solidFill46.Append(schemeColor30);

            A.Outline outline36 = new A.Outline();
            A.NoFill noFill30 = new A.NoFill();

            outline36.Append(noFill30);
            A.EffectList effectList28 = new A.EffectList();

            shapeProperties26.Append(solidFill46);
            shapeProperties26.Append(outline36);
            shapeProperties26.Append(effectList28);

            C.Marker marker64 = new C.Marker();
            C.Symbol symbol64 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker64.Append(symbol64);

            pivotFormat64.Append(index71);
            pivotFormat64.Append(shapeProperties26);
            pivotFormat64.Append(marker64);

            C.PivotFormat pivotFormat65 = new C.PivotFormat();
            C.Index index72 = new C.Index(){ Val = 15U };

            C.ShapeProperties shapeProperties27 = new C.ShapeProperties();

            A.SolidFill solidFill47 = new A.SolidFill();

            A.SchemeColor schemeColor31 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint17 = new A.Tint(){ Val = 100000 };

            schemeColor31.Append(tint17);

            solidFill47.Append(schemeColor31);

            A.Outline outline37 = new A.Outline();
            A.NoFill noFill31 = new A.NoFill();

            outline37.Append(noFill31);
            A.EffectList effectList29 = new A.EffectList();

            shapeProperties27.Append(solidFill47);
            shapeProperties27.Append(outline37);
            shapeProperties27.Append(effectList29);

            C.Marker marker65 = new C.Marker();
            C.Symbol symbol65 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker65.Append(symbol65);

            pivotFormat65.Append(index72);
            pivotFormat65.Append(shapeProperties27);
            pivotFormat65.Append(marker65);

            pivotFormats8.Append(pivotFormat50);
            pivotFormats8.Append(pivotFormat51);
            pivotFormats8.Append(pivotFormat52);
            pivotFormats8.Append(pivotFormat53);
            pivotFormats8.Append(pivotFormat54);
            pivotFormats8.Append(pivotFormat55);
            pivotFormats8.Append(pivotFormat56);
            pivotFormats8.Append(pivotFormat57);
            pivotFormats8.Append(pivotFormat58);
            pivotFormats8.Append(pivotFormat59);
            pivotFormats8.Append(pivotFormat60);
            pivotFormats8.Append(pivotFormat61);
            pivotFormats8.Append(pivotFormat62);
            pivotFormats8.Append(pivotFormat63);
            pivotFormats8.Append(pivotFormat64);
            pivotFormats8.Append(pivotFormat65);

            C.PlotArea plotArea8 = new C.PlotArea();
            C.Layout layout8 = new C.Layout();

            C.BarChart barChart4 = new C.BarChart();
            C.BarDirection barDirection4 = new C.BarDirection(){ Val = C.BarDirectionValues.Column };
            C.BarGrouping barGrouping4 = new C.BarGrouping(){ Val = C.BarGroupingValues.Clustered };
            C.VaryColors varyColors8 = new C.VaryColors(){ Val = false };

            C.BarChartSeries barChartSeries4 = new C.BarChartSeries();
            C.Index index73 = new C.Index(){ Val = 0U };
            C.Order order8 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText8 = new C.SeriesText();

            C.StringReference stringReference15 = new C.StringReference();
            C.Formula formula22 = new C.Formula();
            formula22.Text = "ShowHeader!$B$1";

            C.StringCache stringCache15 = new C.StringCache();
            C.PointCount pointCount22 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint29 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue50 = new C.NumericValue();
            numericValue50.Text = "Total";

            stringPoint29.Append(numericValue50);

            stringCache15.Append(pointCount22);
            stringCache15.Append(stringPoint29);

            stringReference15.Append(formula22);
            stringReference15.Append(stringCache15);

            seriesText8.Append(stringReference15);

            C.ChartShapeProperties chartShapeProperties11 = new C.ChartShapeProperties();

            A.SolidFill solidFill48 = new A.SolidFill();

            A.SchemeColor schemeColor32 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint18 = new A.Tint(){ Val = 100000 };

            schemeColor32.Append(tint18);

            solidFill48.Append(schemeColor32);

            A.Outline outline38 = new A.Outline();
            A.NoFill noFill32 = new A.NoFill();

            outline38.Append(noFill32);
            A.EffectList effectList30 = new A.EffectList();

            chartShapeProperties11.Append(solidFill48);
            chartShapeProperties11.Append(outline38);
            chartShapeProperties11.Append(effectList30);
            C.InvertIfNegative invertIfNegative4 = new C.InvertIfNegative(){ Val = false };

            C.CategoryAxisData categoryAxisData8 = new C.CategoryAxisData();

            C.StringReference stringReference16 = new C.StringReference();
            C.Formula formula23 = new C.Formula();
            formula23.Text = "ShowHeader!$A$2:$A$5";

            C.StringCache stringCache16 = new C.StringCache();
            C.PointCount pointCount23 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint30 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue51 = new C.NumericValue();
            numericValue51.Text = "product_A";

            stringPoint30.Append(numericValue51);

            C.StringPoint stringPoint31 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue52 = new C.NumericValue();
            numericValue52.Text = "product_D";

            stringPoint31.Append(numericValue52);

            C.StringPoint stringPoint32 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue53 = new C.NumericValue();
            numericValue53.Text = "product_E";

            stringPoint32.Append(numericValue53);

            stringCache16.Append(pointCount23);
            stringCache16.Append(stringPoint30);
            stringCache16.Append(stringPoint31);
            stringCache16.Append(stringPoint32);

            stringReference16.Append(formula23);
            stringReference16.Append(stringCache16);

            categoryAxisData8.Append(stringReference16);

            C.Values values8 = new C.Values();

            C.NumberReference numberReference8 = new C.NumberReference();
            C.Formula formula24 = new C.Formula();
            formula24.Text = "ShowHeader!$B$2:$B$5";

            C.NumberingCache numberingCache8 = new C.NumberingCache();
            C.FormatCode formatCode8 = new C.FormatCode();
            formatCode8.Text = "General";
            C.PointCount pointCount24 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint22 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue54 = new C.NumericValue();
            numericValue54.Text = "19";

            numericPoint22.Append(numericValue54);

            C.NumericPoint numericPoint23 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue55 = new C.NumericValue();
            numericValue55.Text = "13";

            numericPoint23.Append(numericValue55);

            C.NumericPoint numericPoint24 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue56 = new C.NumericValue();
            numericValue56.Text = "33";

            numericPoint24.Append(numericValue56);

            numberingCache8.Append(formatCode8);
            numberingCache8.Append(pointCount24);
            numberingCache8.Append(numericPoint22);
            numberingCache8.Append(numericPoint23);
            numberingCache8.Append(numericPoint24);

            numberReference8.Append(formula24);
            numberReference8.Append(numberingCache8);

            values8.Append(numberReference8);

            barChartSeries4.Append(index73);
            barChartSeries4.Append(order8);
            barChartSeries4.Append(seriesText8);
            barChartSeries4.Append(chartShapeProperties11);
            barChartSeries4.Append(invertIfNegative4);
            barChartSeries4.Append(categoryAxisData8);
            barChartSeries4.Append(values8);

            C.DataLabels dataLabels8 = new C.DataLabels();
            C.ShowLegendKey showLegendKey8 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue8 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName8 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName8 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent8 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize8 = new C.ShowBubbleSize(){ Val = false };

            dataLabels8.Append(showLegendKey8);
            dataLabels8.Append(showValue8);
            dataLabels8.Append(showCategoryName8);
            dataLabels8.Append(showSeriesName8);
            dataLabels8.Append(showPercent8);
            dataLabels8.Append(showBubbleSize8);
            C.GapWidth gapWidth4 = new C.GapWidth(){ Val = (UInt16Value)219U };
            C.Overlap overlap3 = new C.Overlap(){ Val = -27 };
            C.AxisId axisId13 = new C.AxisId(){ Val = 209618640U };
            C.AxisId axisId14 = new C.AxisId(){ Val = 209382248U };

            barChart4.Append(barDirection4);
            barChart4.Append(barGrouping4);
            barChart4.Append(varyColors8);
            barChart4.Append(barChartSeries4);
            barChart4.Append(dataLabels8);
            barChart4.Append(gapWidth4);
            barChart4.Append(overlap3);
            barChart4.Append(axisId13);
            barChart4.Append(axisId14);

            C.CategoryAxis categoryAxis4 = new C.CategoryAxis();
            C.AxisId axisId15 = new C.AxisId(){ Val = 209618640U };

            C.Scaling scaling7 = new C.Scaling();
            C.Orientation orientation7 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling7.Append(orientation7);
            C.Delete delete7 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition7 = new C.AxisPosition(){ Val = C.AxisPositionValues.Bottom };
            C.NumberingFormat numberingFormat7 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = false };
            C.MajorTickMark majorTickMark7 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark7 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition7 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties12 = new C.ChartShapeProperties();
            A.NoFill noFill33 = new A.NoFill();

            A.Outline outline39 = new A.Outline();
            A.NoFill noFill34 = new A.NoFill();

            outline39.Append(noFill34);
            A.EffectList effectList31 = new A.EffectList();

            chartShapeProperties12.Append(noFill33);
            chartShapeProperties12.Append(outline39);
            chartShapeProperties12.Append(effectList31);

            C.TextProperties textProperties9 = new C.TextProperties();
            A.BodyProperties bodyProperties17 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle17 = new A.ListStyle();

            A.Paragraph paragraph17 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties9 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties9 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill49 = new A.SolidFill();

            A.SchemeColor schemeColor33 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation11 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset11 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor33.Append(luminanceModulation11);
            schemeColor33.Append(luminanceOffset11);

            solidFill49.Append(schemeColor33);
            A.LatinFont latinFont7 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont7 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont7 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties9.Append(solidFill49);
            defaultRunProperties9.Append(latinFont7);
            defaultRunProperties9.Append(eastAsianFont7);
            defaultRunProperties9.Append(complexScriptFont7);

            paragraphProperties9.Append(defaultRunProperties9);
            A.EndParagraphRunProperties endParagraphRunProperties9 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph17.Append(paragraphProperties9);
            paragraph17.Append(endParagraphRunProperties9);

            textProperties9.Append(bodyProperties17);
            textProperties9.Append(listStyle17);
            textProperties9.Append(paragraph17);
            C.CrossingAxis crossingAxis7 = new C.CrossingAxis(){ Val = 209382248U };
            C.Crosses crosses7 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.AutoLabeled autoLabeled4 = new C.AutoLabeled(){ Val = true };
            C.LabelAlignment labelAlignment4 = new C.LabelAlignment(){ Val = C.LabelAlignmentValues.Center };
            C.LabelOffset labelOffset4 = new C.LabelOffset(){ Val = (UInt16Value)100U };
            C.NoMultiLevelLabels noMultiLevelLabels4 = new C.NoMultiLevelLabels(){ Val = false };

            categoryAxis4.Append(axisId15);
            categoryAxis4.Append(scaling7);
            categoryAxis4.Append(delete7);
            categoryAxis4.Append(axisPosition7);
            categoryAxis4.Append(numberingFormat7);
            categoryAxis4.Append(majorTickMark7);
            categoryAxis4.Append(minorTickMark7);
            categoryAxis4.Append(tickLabelPosition7);
            categoryAxis4.Append(chartShapeProperties12);
            categoryAxis4.Append(textProperties9);
            categoryAxis4.Append(crossingAxis7);
            categoryAxis4.Append(crosses7);
            categoryAxis4.Append(autoLabeled4);
            categoryAxis4.Append(labelAlignment4);
            categoryAxis4.Append(labelOffset4);
            categoryAxis4.Append(noMultiLevelLabels4);

            C.ValueAxis valueAxis4 = new C.ValueAxis();
            C.AxisId axisId16 = new C.AxisId(){ Val = 209382248U };

            C.Scaling scaling8 = new C.Scaling();
            C.Orientation orientation8 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling8.Append(orientation8);
            C.Delete delete8 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition8 = new C.AxisPosition(){ Val = C.AxisPositionValues.Left };

            C.MajorGridlines majorGridlines4 = new C.MajorGridlines();

            C.ChartShapeProperties chartShapeProperties13 = new C.ChartShapeProperties();

            A.Outline outline40 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill50 = new A.SolidFill();

            A.SchemeColor schemeColor34 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation12 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset12 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor34.Append(luminanceModulation12);
            schemeColor34.Append(luminanceOffset12);

            solidFill50.Append(schemeColor34);
            A.Round round5 = new A.Round();

            outline40.Append(solidFill50);
            outline40.Append(round5);
            A.EffectList effectList32 = new A.EffectList();

            chartShapeProperties13.Append(outline40);
            chartShapeProperties13.Append(effectList32);

            majorGridlines4.Append(chartShapeProperties13);
            C.NumberingFormat numberingFormat8 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = true };
            C.MajorTickMark majorTickMark8 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark8 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition8 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties14 = new C.ChartShapeProperties();
            A.NoFill noFill35 = new A.NoFill();

            A.Outline outline41 = new A.Outline();
            A.NoFill noFill36 = new A.NoFill();

            outline41.Append(noFill36);
            A.EffectList effectList33 = new A.EffectList();

            chartShapeProperties14.Append(noFill35);
            chartShapeProperties14.Append(outline41);
            chartShapeProperties14.Append(effectList33);

            C.TextProperties textProperties10 = new C.TextProperties();
            A.BodyProperties bodyProperties18 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle18 = new A.ListStyle();

            A.Paragraph paragraph18 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties10 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties10 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill51 = new A.SolidFill();

            A.SchemeColor schemeColor35 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation13 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset13 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor35.Append(luminanceModulation13);
            schemeColor35.Append(luminanceOffset13);

            solidFill51.Append(schemeColor35);
            A.LatinFont latinFont8 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont8 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont8 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties10.Append(solidFill51);
            defaultRunProperties10.Append(latinFont8);
            defaultRunProperties10.Append(eastAsianFont8);
            defaultRunProperties10.Append(complexScriptFont8);

            paragraphProperties10.Append(defaultRunProperties10);
            A.EndParagraphRunProperties endParagraphRunProperties10 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph18.Append(paragraphProperties10);
            paragraph18.Append(endParagraphRunProperties10);

            textProperties10.Append(bodyProperties18);
            textProperties10.Append(listStyle18);
            textProperties10.Append(paragraph18);
            C.CrossingAxis crossingAxis8 = new C.CrossingAxis(){ Val = 209618640U };
            C.Crosses crosses8 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.CrossBetween crossBetween4 = new C.CrossBetween(){ Val = C.CrossBetweenValues.Between };

            valueAxis4.Append(axisId16);
            valueAxis4.Append(scaling8);
            valueAxis4.Append(delete8);
            valueAxis4.Append(axisPosition8);
            valueAxis4.Append(majorGridlines4);
            valueAxis4.Append(numberingFormat8);
            valueAxis4.Append(majorTickMark8);
            valueAxis4.Append(minorTickMark8);
            valueAxis4.Append(tickLabelPosition8);
            valueAxis4.Append(chartShapeProperties14);
            valueAxis4.Append(textProperties10);
            valueAxis4.Append(crossingAxis8);
            valueAxis4.Append(crosses8);
            valueAxis4.Append(crossBetween4);

            C.ShapeProperties shapeProperties28 = new C.ShapeProperties();

            A.SolidFill solidFill52 = new A.SolidFill();
            A.SchemeColor schemeColor36 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill52.Append(schemeColor36);

            A.Outline outline42 = new A.Outline();
            A.NoFill noFill37 = new A.NoFill();

            outline42.Append(noFill37);
            A.EffectList effectList34 = new A.EffectList();

            shapeProperties28.Append(solidFill52);
            shapeProperties28.Append(outline42);
            shapeProperties28.Append(effectList34);

            plotArea8.Append(layout8);
            plotArea8.Append(barChart4);
            plotArea8.Append(categoryAxis4);
            plotArea8.Append(valueAxis4);
            plotArea8.Append(shapeProperties28);

            C.Legend legend8 = new C.Legend();
            C.LegendPosition legendPosition8 = new C.LegendPosition(){ Val = C.LegendPositionValues.Bottom };
            C.Overlay overlay16 = new C.Overlay(){ Val = false };

            C.ChartShapeProperties chartShapeProperties15 = new C.ChartShapeProperties();
            A.NoFill noFill38 = new A.NoFill();

            A.Outline outline43 = new A.Outline();
            A.NoFill noFill39 = new A.NoFill();

            outline43.Append(noFill39);
            A.EffectList effectList35 = new A.EffectList();

            chartShapeProperties15.Append(noFill38);
            chartShapeProperties15.Append(outline43);
            chartShapeProperties15.Append(effectList35);

            C.TextProperties textProperties11 = new C.TextProperties();
            A.BodyProperties bodyProperties19 = new A.BodyProperties(){ Rotation = 0, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle19 = new A.ListStyle();

            A.Paragraph paragraph19 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties11 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties11 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill53 = new A.SolidFill();

            A.SchemeColor schemeColor37 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation14 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset14 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor37.Append(luminanceModulation14);
            schemeColor37.Append(luminanceOffset14);

            solidFill53.Append(schemeColor37);
            A.LatinFont latinFont9 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont9 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont9 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties11.Append(solidFill53);
            defaultRunProperties11.Append(latinFont9);
            defaultRunProperties11.Append(eastAsianFont9);
            defaultRunProperties11.Append(complexScriptFont9);

            paragraphProperties11.Append(defaultRunProperties11);
            A.EndParagraphRunProperties endParagraphRunProperties11 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph19.Append(paragraphProperties11);
            paragraph19.Append(endParagraphRunProperties11);

            textProperties11.Append(bodyProperties19);
            textProperties11.Append(listStyle19);
            textProperties11.Append(paragraph19);

            legend8.Append(legendPosition8);
            legend8.Append(overlay16);
            legend8.Append(chartShapeProperties15);
            legend8.Append(textProperties11);
            C.PlotVisibleOnly plotVisibleOnly8 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs8 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum8 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart8.Append(title8);
            chart8.Append(autoTitleDeleted8);
            chart8.Append(pivotFormats8);
            chart8.Append(plotArea8);
            chart8.Append(legend8);
            chart8.Append(plotVisibleOnly8);
            chart8.Append(displayBlanksAs8);
            chart8.Append(showDataLabelsOverMaximum8);

            C.ShapeProperties shapeProperties29 = new C.ShapeProperties();

            A.SolidFill solidFill54 = new A.SolidFill();
            A.SchemeColor schemeColor38 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill54.Append(schemeColor38);

            A.Outline outline44 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill55 = new A.SolidFill();

            A.SchemeColor schemeColor39 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation15 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset15 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor39.Append(luminanceModulation15);
            schemeColor39.Append(luminanceOffset15);

            solidFill55.Append(schemeColor39);
            A.Round round6 = new A.Round();

            outline44.Append(solidFill55);
            outline44.Append(round6);
            A.EffectList effectList36 = new A.EffectList();

            shapeProperties29.Append(solidFill54);
            shapeProperties29.Append(outline44);
            shapeProperties29.Append(effectList36);

            C.TextProperties textProperties12 = new C.TextProperties();
            A.BodyProperties bodyProperties20 = new A.BodyProperties();
            A.ListStyle listStyle20 = new A.ListStyle();

            A.Paragraph paragraph20 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties12 = new A.ParagraphProperties();
            A.DefaultRunProperties defaultRunProperties12 = new A.DefaultRunProperties();

            paragraphProperties12.Append(defaultRunProperties12);
            A.EndParagraphRunProperties endParagraphRunProperties12 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph20.Append(paragraphProperties12);
            paragraph20.Append(endParagraphRunProperties12);

            textProperties12.Append(bodyProperties20);
            textProperties12.Append(listStyle20);
            textProperties12.Append(paragraph20);

            C.PrintSettings printSettings8 = new C.PrintSettings();
            C.HeaderFooter headerFooter8 = new C.HeaderFooter();
            C.PageMargins pageMargins14 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup8 = new C.PageSetup();

            printSettings8.Append(headerFooter8);
            printSettings8.Append(pageMargins14);
            printSettings8.Append(pageSetup8);

            C.ChartSpaceExtensionList chartSpaceExtensionList8 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList8.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList8.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension8 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension8.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions8 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter8 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories8 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData8 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries8 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible8 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions8.Append(dropZoneFilter8);
            pivotOptions8.Append(dropZoneCategories8);
            pivotOptions8.Append(dropZoneData8);
            pivotOptions8.Append(dropZoneSeries8);
            pivotOptions8.Append(dropZonesVisible8);

            chartSpaceExtension8.Append(pivotOptions8);

            chartSpaceExtensionList8.Append(chartSpaceExtension8);

            chartSpace8.Append(date19048);
            chartSpace8.Append(editingLanguage8);
            chartSpace8.Append(roundedCorners8);
            chartSpace8.Append(alternateContent17);
            chartSpace8.Append(pivotSource8);
            chartSpace8.Append(chart8);
            chartSpace8.Append(shapeProperties29);
            chartSpace8.Append(textProperties12);
            chartSpace8.Append(printSettings8);
            chartSpace8.Append(chartSpaceExtensionList8);

            chartPart8.ChartSpace = chartSpace8;
        }

        // Generates content of pivotTablePart4.
        private static void GeneratePivotTablePart4Content(PivotTablePart pivotTablePart4)
        {
            PivotTableDefinition pivotTableDefinition7 = new PivotTableDefinition(){ Name = "PivotTable1", CacheId = 1U, ApplyNumberFormats = false, ApplyBorderFormats = false, ApplyFontFormats = false, ApplyPatternFormats = false, ApplyAlignmentFormats = false, ApplyWidthHeightFormats = true, DataCaption = "Values", UpdatedVersion = 5, MinRefreshableVersion = 5, UseAutoFormatting = true, ItemPrintTitles = true, CreatedVersion = 4, Indent = 0U, Outline = true, OutlineData = true, MultipleFieldFilters = false, ChartFormat = 11U };
            Location location4 = new Location(){ Reference = "A1:B5", FirstHeaderRow = 1U, FirstDataRow = 1U, FirstDataColumn = 1U };

            PivotFields pivotFields4 = new PivotFields(){ Count = 7U };

            PivotField pivotField21 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items11 = new Items(){ Count = 15U };
            Item item90 = new Item(){ Index = 0U };
            Item item91 = new Item(){ Index = 1U };
            Item item92 = new Item(){ Index = 2U };
            Item item93 = new Item(){ Index = 3U };
            Item item94 = new Item(){ Index = 4U };
            Item item95 = new Item(){ Index = 5U };
            Item item96 = new Item(){ Index = 6U };
            Item item97 = new Item(){ Index = 7U };
            Item item98 = new Item(){ Index = 8U };
            Item item99 = new Item(){ Index = 9U };
            Item item100 = new Item(){ Index = 10U };
            Item item101 = new Item(){ Index = 11U };
            Item item102 = new Item(){ Index = 12U };
            Item item103 = new Item(){ Index = 13U };
            Item item104 = new Item(){ ItemType = ItemValues.Default };

            items11.Append(item90);
            items11.Append(item91);
            items11.Append(item92);
            items11.Append(item93);
            items11.Append(item94);
            items11.Append(item95);
            items11.Append(item96);
            items11.Append(item97);
            items11.Append(item98);
            items11.Append(item99);
            items11.Append(item100);
            items11.Append(item101);
            items11.Append(item102);
            items11.Append(item103);
            items11.Append(item104);

            pivotField21.Append(items11);

            PivotField pivotField22 = new PivotField(){ Axis = PivotTableAxisValues.AxisRow, ShowAll = false };

            Items items12 = new Items(){ Count = 11U };
            Item item105 = new Item(){ Index = 0U };
            Item item106 = new Item(){ Missing = true, Index = 4U };
            Item item107 = new Item(){ Missing = true, Index = 3U };
            Item item108 = new Item(){ Index = 1U };
            Item item109 = new Item(){ Index = 2U };
            Item item110 = new Item(){ Missing = true, Index = 9U };
            Item item111 = new Item(){ Missing = true, Index = 8U };
            Item item112 = new Item(){ Missing = true, Index = 7U };
            Item item113 = new Item(){ Missing = true, Index = 6U };
            Item item114 = new Item(){ Missing = true, Index = 5U };
            Item item115 = new Item(){ ItemType = ItemValues.Default };

            items12.Append(item105);
            items12.Append(item106);
            items12.Append(item107);
            items12.Append(item108);
            items12.Append(item109);
            items12.Append(item110);
            items12.Append(item111);
            items12.Append(item112);
            items12.Append(item113);
            items12.Append(item114);
            items12.Append(item115);

            pivotField22.Append(items12);
            PivotField pivotField23 = new PivotField(){ DataField = true, ShowAll = false };
            PivotField pivotField24 = new PivotField(){ ShowAll = false };

            PivotField pivotField25 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items13 = new Items(){ Count = 5U };
            Item item116 = new Item(){ Index = 0U };
            Item item117 = new Item(){ Index = 1U };
            Item item118 = new Item(){ Index = 3U };
            Item item119 = new Item(){ Index = 2U };
            Item item120 = new Item(){ ItemType = ItemValues.Default };

            items13.Append(item116);
            items13.Append(item117);
            items13.Append(item118);
            items13.Append(item119);
            items13.Append(item120);

            pivotField25.Append(items13);
            PivotField pivotField26 = new PivotField(){ ShowAll = false };

            PivotField pivotField27 = new PivotField(){ ShowAll = false, DefaultSubtotal = false };

            Items items14 = new Items(){ Count = 5U };
            Item item121 = new Item(){ Index = 0U };
            Item item122 = new Item(){ Index = 1U };
            Item item123 = new Item(){ Index = 2U };
            Item item124 = new Item(){ Index = 3U };
            Item item125 = new Item(){ Index = 4U };

            items14.Append(item121);
            items14.Append(item122);
            items14.Append(item123);
            items14.Append(item124);
            items14.Append(item125);

            pivotField27.Append(items14);

            pivotFields4.Append(pivotField21);
            pivotFields4.Append(pivotField22);
            pivotFields4.Append(pivotField23);
            pivotFields4.Append(pivotField24);
            pivotFields4.Append(pivotField25);
            pivotFields4.Append(pivotField26);
            pivotFields4.Append(pivotField27);

            RowFields rowFields4 = new RowFields(){ Count = 1U };
            Field field4 = new Field(){ Index = 1 };

            rowFields4.Append(field4);

            RowItems rowItems4 = new RowItems(){ Count = 4U };

            RowItem rowItem16 = new RowItem();
            MemberPropertyIndex memberPropertyIndex13 = new MemberPropertyIndex();

            rowItem16.Append(memberPropertyIndex13);

            RowItem rowItem17 = new RowItem();
            MemberPropertyIndex memberPropertyIndex14 = new MemberPropertyIndex(){ Val = 3 };

            rowItem17.Append(memberPropertyIndex14);

            RowItem rowItem18 = new RowItem();
            MemberPropertyIndex memberPropertyIndex15 = new MemberPropertyIndex(){ Val = 4 };

            rowItem18.Append(memberPropertyIndex15);

            RowItem rowItem19 = new RowItem(){ ItemType = ItemValues.Grand };
            MemberPropertyIndex memberPropertyIndex16 = new MemberPropertyIndex();

            rowItem19.Append(memberPropertyIndex16);

            rowItems4.Append(rowItem16);
            rowItems4.Append(rowItem17);
            rowItems4.Append(rowItem18);
            rowItems4.Append(rowItem19);

            ColumnItems columnItems4 = new ColumnItems(){ Count = 1U };
            RowItem rowItem20 = new RowItem();

            columnItems4.Append(rowItem20);

            DataFields dataFields4 = new DataFields(){ Count = 1U };
            DataField dataField4 = new DataField(){ Name = "Sum of Quantity", Field = 2U, BaseField = 0, BaseItem = 0U };

            dataFields4.Append(dataField4);

            ChartFormats chartFormats4 = new ChartFormats(){ Count = 7U };

            ChartFormat chartFormat23 = new ChartFormat(){ Chart = 4U, Format = 0U, Series = true };

            PivotArea pivotArea23 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences23 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference23 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem45 = new FieldItem(){ Val = 0U };

            pivotAreaReference23.Append(fieldItem45);

            pivotAreaReferences23.Append(pivotAreaReference23);

            pivotArea23.Append(pivotAreaReferences23);

            chartFormat23.Append(pivotArea23);

            ChartFormat chartFormat24 = new ChartFormat(){ Chart = 5U, Format = 2U, Series = true };

            PivotArea pivotArea24 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences24 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference24 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem46 = new FieldItem(){ Val = 0U };

            pivotAreaReference24.Append(fieldItem46);

            pivotAreaReferences24.Append(pivotAreaReference24);

            pivotArea24.Append(pivotAreaReferences24);

            chartFormat24.Append(pivotArea24);

            ChartFormat chartFormat25 = new ChartFormat(){ Chart = 6U, Format = 0U, Series = true };

            PivotArea pivotArea25 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences25 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference25 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem47 = new FieldItem(){ Val = 0U };

            pivotAreaReference25.Append(fieldItem47);

            pivotAreaReferences25.Append(pivotAreaReference25);

            pivotArea25.Append(pivotAreaReferences25);

            chartFormat25.Append(pivotArea25);

            ChartFormat chartFormat26 = new ChartFormat(){ Chart = 7U, Format = 14U, Series = true };

            PivotArea pivotArea26 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences26 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference26 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem48 = new FieldItem(){ Val = 0U };

            pivotAreaReference26.Append(fieldItem48);

            pivotAreaReferences26.Append(pivotAreaReference26);

            pivotArea26.Append(pivotAreaReferences26);

            chartFormat26.Append(pivotArea26);

            ChartFormat chartFormat27 = new ChartFormat(){ Chart = 8U, Format = 1U, Series = true };

            PivotArea pivotArea27 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences27 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference27 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem49 = new FieldItem(){ Val = 0U };

            pivotAreaReference27.Append(fieldItem49);

            pivotAreaReferences27.Append(pivotAreaReference27);

            pivotArea27.Append(pivotAreaReferences27);

            chartFormat27.Append(pivotArea27);

            ChartFormat chartFormat28 = new ChartFormat(){ Chart = 9U, Format = 15U, Series = true };

            PivotArea pivotArea28 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences28 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference28 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem50 = new FieldItem(){ Val = 0U };

            pivotAreaReference28.Append(fieldItem50);

            pivotAreaReferences28.Append(pivotAreaReference28);

            pivotArea28.Append(pivotAreaReferences28);

            chartFormat28.Append(pivotArea28);

            ChartFormat chartFormat29 = new ChartFormat(){ Chart = 10U, Format = 2U, Series = true };

            PivotArea pivotArea29 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences29 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference29 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem51 = new FieldItem(){ Val = 0U };

            pivotAreaReference29.Append(fieldItem51);

            pivotAreaReferences29.Append(pivotAreaReference29);

            pivotArea29.Append(pivotAreaReferences29);

            chartFormat29.Append(pivotArea29);

            chartFormats4.Append(chartFormat23);
            chartFormats4.Append(chartFormat24);
            chartFormats4.Append(chartFormat25);
            chartFormats4.Append(chartFormat26);
            chartFormats4.Append(chartFormat27);
            chartFormats4.Append(chartFormat28);
            chartFormats4.Append(chartFormat29);
            PivotTableStyle pivotTableStyle4 = new PivotTableStyle(){ Name = "PivotStyleLight16", ShowRowHeaders = true, ShowColumnHeaders = true, ShowRowStripes = false, ShowColumnStripes = false, ShowLastColumn = true };

            PivotTableDefinitionExtensionList pivotTableDefinitionExtensionList4 = new PivotTableDefinitionExtensionList();

            PivotTableDefinitionExtension pivotTableDefinitionExtension4 = new PivotTableDefinitionExtension(){ Uri = "{962EF5D1-5CA2-4c93-8EF4-DBF5C05439D2}" };
            pivotTableDefinitionExtension4.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");

            X14.PivotTableDefinition pivotTableDefinition8 = new X14.PivotTableDefinition(){ HideValuesRow = true };
            pivotTableDefinition8.AddNamespaceDeclaration("xm", "http://schemas.microsoft.com/office/excel/2006/main");

            pivotTableDefinitionExtension4.Append(pivotTableDefinition8);

            pivotTableDefinitionExtensionList4.Append(pivotTableDefinitionExtension4);

            pivotTableDefinition7.Append(location4);
            pivotTableDefinition7.Append(pivotFields4);
            pivotTableDefinition7.Append(rowFields4);
            pivotTableDefinition7.Append(rowItems4);
            pivotTableDefinition7.Append(columnItems4);
            pivotTableDefinition7.Append(dataFields4);
            pivotTableDefinition7.Append(chartFormats4);
            pivotTableDefinition7.Append(pivotTableStyle4);
            pivotTableDefinition7.Append(pivotTableDefinitionExtensionList4);

            pivotTablePart4.PivotTableDefinition = pivotTableDefinition7;
        }

        // Generates content of worksheetPart7.
        private static void GenerateWorksheetPart7Content(WorksheetPart worksheetPart7)
        {
            Worksheet worksheet7 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet7.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet7.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet7.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension7 = new SheetDimension(){ Reference = "A1:B5" };

            SheetViews sheetViews7 = new SheetViews();
            SheetView sheetView7 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews7.Append(sheetView7);
            SheetFormatProperties sheetFormatProperties7 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns7 = new Columns();
            Column column41 = new Column(){ Min = 1U, Max = 1U, Width = 14.140625D, BestFit = true, CustomWidth = true };
            Column column42 = new Column(){ Min = 2U, Max = 2U, Width = 17.42578125D, CustomWidth = true };
            Column column43 = new Column(){ Min = 3U, Max = 3U, Width = 12.42578125D, CustomWidth = true };
            Column column44 = new Column(){ Min = 4U, Max = 11U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column45 = new Column(){ Min = 12U, Max = 12U, Width = 13D, CustomWidth = true };
            Column column46 = new Column(){ Min = 13U, Max = 20U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column47 = new Column(){ Min = 21U, Max = 23U, Width = 20.42578125D, BestFit = true, CustomWidth = true };

            columns7.Append(column41);
            columns7.Append(column42);
            columns7.Append(column43);
            columns7.Append(column44);
            columns7.Append(column45);
            columns7.Append(column46);
            columns7.Append(column47);

            SheetData sheetData7 = new SheetData();

            Row row43 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell173 = new Cell(){ CellReference = "A1", StyleIndex = 5U, DataType = CellValues.SharedString };
            CellValue cellValue173 = new CellValue();
            cellValue173.Text = "29";

            cell173.Append(cellValue173);

            Cell cell174 = new Cell(){ CellReference = "B1", DataType = CellValues.SharedString };
            CellValue cellValue174 = new CellValue();
            cellValue174.Text = "28";

            cell174.Append(cellValue174);

            row43.Append(cell173);
            row43.Append(cell174);

            Row row44 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell175 = new Cell(){ CellReference = "A2", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue175 = new CellValue();
            cellValue175.Text = "6";

            cell175.Append(cellValue175);

            Cell cell176 = new Cell(){ CellReference = "B2", StyleIndex = 7U };
            CellValue cellValue176 = new CellValue();
            cellValue176.Text = "19";

            cell176.Append(cellValue176);

            row44.Append(cell175);
            row44.Append(cell176);

            Row row45 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell177 = new Cell(){ CellReference = "A3", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue177 = new CellValue();
            cellValue177.Text = "8";

            cell177.Append(cellValue177);

            Cell cell178 = new Cell(){ CellReference = "B3", StyleIndex = 7U };
            CellValue cellValue178 = new CellValue();
            cellValue178.Text = "13";

            cell178.Append(cellValue178);

            row45.Append(cell177);
            row45.Append(cell178);

            Row row46 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell179 = new Cell(){ CellReference = "A4", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue179 = new CellValue();
            cellValue179.Text = "11";

            cell179.Append(cellValue179);

            Cell cell180 = new Cell(){ CellReference = "B4", StyleIndex = 7U };
            CellValue cellValue180 = new CellValue();
            cellValue180.Text = "33";

            cell180.Append(cellValue180);

            row46.Append(cell179);
            row46.Append(cell180);

            Row row47 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell181 = new Cell(){ CellReference = "A5", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue181 = new CellValue();
            cellValue181.Text = "30";

            cell181.Append(cellValue181);

            Cell cell182 = new Cell(){ CellReference = "B5", StyleIndex = 7U };
            CellValue cellValue182 = new CellValue();
            cellValue182.Text = "65";

            cell182.Append(cellValue182);

            row47.Append(cell181);
            row47.Append(cell182);

            sheetData7.Append(row43);
            sheetData7.Append(row44);
            sheetData7.Append(row45);
            sheetData7.Append(row46);
            sheetData7.Append(row47);
            PhoneticProperties phoneticProperties13 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins15 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            S.Drawing drawing5 = new S.Drawing(){ Id = "rId2" };

            WorksheetExtensionList worksheetExtensionList5 = new WorksheetExtensionList();

            WorksheetExtension worksheetExtension5 = new WorksheetExtension(){ Uri = "{7E03D99C-DC04-49d9-9315-930204A7B6E9}" };
            worksheetExtension5.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineReferences timelineReferences5 = new X15.TimelineReferences();
            X15.TimelineReference timelineReference5 = new X15.TimelineReference(){ Id = "rId3" };

            timelineReferences5.Append(timelineReference5);

            worksheetExtension5.Append(timelineReferences5);

            worksheetExtensionList5.Append(worksheetExtension5);

            worksheet7.Append(sheetDimension7);
            worksheet7.Append(sheetViews7);
            worksheet7.Append(sheetFormatProperties7);
            worksheet7.Append(columns7);
            worksheet7.Append(sheetData7);
            worksheet7.Append(phoneticProperties13);
            worksheet7.Append(pageMargins15);
            worksheet7.Append(drawing5);
            worksheet7.Append(worksheetExtensionList5);

            worksheetPart7.Worksheet = worksheet7;
        }

        // Generates content of timeLinePart5.
        private static void GenerateTimeLinePart5Content(TimeLinePart timeLinePart5)
        {
            X15.Timelines timelines5 = new X15.Timelines(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x" }  };
            timelines5.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            timelines5.AddNamespaceDeclaration("x", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");
            X15.Timeline timeline9 = new X15.Timeline(){ Name = "DeliveryDate 16", Cache = "NativeTimeline_DeliveryDate7", Caption = "Style1", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline10 = new X15.Timeline(){ Name = "DeliveryDate 17", Cache = "NativeTimeline_DeliveryDate7", Caption = "Style2", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), Style = "TimeSlicerStyleLight2" };

            timelines5.Append(timeline9);
            timelines5.Append(timeline10);

            timeLinePart5.Timelines = timelines5;
        }

        // Generates content of drawingsPart5.
        private static void GenerateDrawingsPart5Content(DrawingsPart drawingsPart5)
        {
            Xdr.WorksheetDrawing worksheetDrawing5 = new Xdr.WorksheetDrawing();
            worksheetDrawing5.AddNamespaceDeclaration("xdr", "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing");
            worksheetDrawing5.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            Xdr.TwoCellAnchor twoCellAnchor17 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker17 = new Xdr.FromMarker();
            Xdr.ColumnId columnId33 = new Xdr.ColumnId();
            columnId33.Text = "2";
            Xdr.ColumnOffset columnOffset33 = new Xdr.ColumnOffset();
            columnOffset33.Text = "185737";
            Xdr.RowId rowId33 = new Xdr.RowId();
            rowId33.Text = "0";
            Xdr.RowOffset rowOffset33 = new Xdr.RowOffset();
            rowOffset33.Text = "0";

            fromMarker17.Append(columnId33);
            fromMarker17.Append(columnOffset33);
            fromMarker17.Append(rowId33);
            fromMarker17.Append(rowOffset33);

            Xdr.ToMarker toMarker17 = new Xdr.ToMarker();
            Xdr.ColumnId columnId34 = new Xdr.ColumnId();
            columnId34.Text = "9";
            Xdr.ColumnOffset columnOffset34 = new Xdr.ColumnOffset();
            columnOffset34.Text = "90487";
            Xdr.RowId rowId34 = new Xdr.RowId();
            rowId34.Text = "14";
            Xdr.RowOffset rowOffset34 = new Xdr.RowOffset();
            rowOffset34.Text = "76200";

            toMarker17.Append(columnId34);
            toMarker17.Append(columnOffset34);
            toMarker17.Append(rowId34);
            toMarker17.Append(rowOffset34);

            Xdr.GraphicFrame graphicFrame17 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties17 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties25 = new Xdr.NonVisualDrawingProperties(){ Id = 2U, Name = "Chart 1" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties17 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks7 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties17.Append(graphicFrameLocks7);

            nonVisualGraphicFrameProperties17.Append(nonVisualDrawingProperties25);
            nonVisualGraphicFrameProperties17.Append(nonVisualGraphicFrameDrawingProperties17);

            Xdr.Transform transform17 = new Xdr.Transform();
            A.Offset offset25 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents25 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform17.Append(offset25);
            transform17.Append(extents25);

            A.Graphic graphic17 = new A.Graphic();

            A.GraphicData graphicData17 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference9 = new C.ChartReference(){ Id = "rId1" };
            chartReference9.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference9.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData17.Append(chartReference9);

            graphic17.Append(graphicData17);

            graphicFrame17.Append(nonVisualGraphicFrameProperties17);
            graphicFrame17.Append(transform17);
            graphicFrame17.Append(graphic17);
            Xdr.ClientData clientData17 = new Xdr.ClientData();

            twoCellAnchor17.Append(fromMarker17);
            twoCellAnchor17.Append(toMarker17);
            twoCellAnchor17.Append(graphicFrame17);
            twoCellAnchor17.Append(clientData17);

            Xdr.TwoCellAnchor twoCellAnchor18 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker18 = new Xdr.FromMarker();
            Xdr.ColumnId columnId35 = new Xdr.ColumnId();
            columnId35.Text = "2";
            Xdr.ColumnOffset columnOffset35 = new Xdr.ColumnOffset();
            columnOffset35.Text = "200025";
            Xdr.RowId rowId35 = new Xdr.RowId();
            rowId35.Text = "14";
            Xdr.RowOffset rowOffset35 = new Xdr.RowOffset();
            rowOffset35.Text = "147637";

            fromMarker18.Append(columnId35);
            fromMarker18.Append(columnOffset35);
            fromMarker18.Append(rowId35);
            fromMarker18.Append(rowOffset35);

            Xdr.ToMarker toMarker18 = new Xdr.ToMarker();
            Xdr.ColumnId columnId36 = new Xdr.ColumnId();
            columnId36.Text = "7";
            Xdr.ColumnOffset columnOffset36 = new Xdr.ColumnOffset();
            columnOffset36.Text = "476250";
            Xdr.RowId rowId36 = new Xdr.RowId();
            rowId36.Text = "29";
            Xdr.RowOffset rowOffset36 = new Xdr.RowOffset();
            rowOffset36.Text = "33337";

            toMarker18.Append(columnId36);
            toMarker18.Append(columnOffset36);
            toMarker18.Append(rowId36);
            toMarker18.Append(rowOffset36);

            Xdr.GraphicFrame graphicFrame18 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties18 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties26 = new Xdr.NonVisualDrawingProperties(){ Id = 3U, Name = "グラフ 2" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties18 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks8 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties18.Append(graphicFrameLocks8);

            nonVisualGraphicFrameProperties18.Append(nonVisualDrawingProperties26);
            nonVisualGraphicFrameProperties18.Append(nonVisualGraphicFrameDrawingProperties18);

            Xdr.Transform transform18 = new Xdr.Transform();
            A.Offset offset26 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents26 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform18.Append(offset26);
            transform18.Append(extents26);

            A.Graphic graphic18 = new A.Graphic();

            A.GraphicData graphicData18 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference10 = new C.ChartReference(){ Id = "rId2" };
            chartReference10.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference10.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData18.Append(chartReference10);

            graphic18.Append(graphicData18);

            graphicFrame18.Append(nonVisualGraphicFrameProperties18);
            graphicFrame18.Append(transform18);
            graphicFrame18.Append(graphic18);
            Xdr.ClientData clientData18 = new Xdr.ClientData();

            twoCellAnchor18.Append(fromMarker18);
            twoCellAnchor18.Append(toMarker18);
            twoCellAnchor18.Append(graphicFrame18);
            twoCellAnchor18.Append(clientData18);

            Xdr.TwoCellAnchor twoCellAnchor19 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker19 = new Xdr.FromMarker();
            Xdr.ColumnId columnId37 = new Xdr.ColumnId();
            columnId37.Text = "10";
            Xdr.ColumnOffset columnOffset37 = new Xdr.ColumnOffset();
            columnOffset37.Text = "19050";
            Xdr.RowId rowId37 = new Xdr.RowId();
            rowId37.Text = "1";
            Xdr.RowOffset rowOffset37 = new Xdr.RowOffset();
            rowOffset37.Text = "19050";

            fromMarker19.Append(columnId37);
            fromMarker19.Append(columnOffset37);
            fromMarker19.Append(rowId37);
            fromMarker19.Append(rowOffset37);

            Xdr.ToMarker toMarker19 = new Xdr.ToMarker();
            Xdr.ColumnId columnId38 = new Xdr.ColumnId();
            columnId38.Text = "13";
            Xdr.ColumnOffset columnOffset38 = new Xdr.ColumnOffset();
            columnOffset38.Text = "752475";
            Xdr.RowId rowId38 = new Xdr.RowId();
            rowId38.Text = "7";
            Xdr.RowOffset rowOffset38 = new Xdr.RowOffset();
            rowOffset38.Text = "66675";

            toMarker19.Append(columnId38);
            toMarker19.Append(columnOffset38);
            toMarker19.Append(rowId38);
            toMarker19.Append(rowOffset38);

            AlternateContent alternateContent18 = new AlternateContent();
            alternateContent18.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent18.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice18 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame19 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties19 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties27 = new Xdr.NonVisualDrawingProperties(){ Id = 4U, Name = "DeliveryDate 16" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties19 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties19.Append(nonVisualDrawingProperties27);
            nonVisualGraphicFrameProperties19.Append(nonVisualGraphicFrameDrawingProperties19);

            Xdr.Transform transform19 = new Xdr.Transform();
            A.Offset offset27 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents27 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform19.Append(offset27);
            transform19.Append(extents27);

            A.Graphic graphic19 = new A.Graphic();

            A.GraphicData graphicData19 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer9 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 16" };
            timeSlicer9.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData19.Append(timeSlicer9);

            graphic19.Append(graphicData19);

            graphicFrame19.Append(nonVisualGraphicFrameProperties19);
            graphicFrame19.Append(transform19);
            graphicFrame19.Append(graphic19);

            alternateContentChoice18.Append(graphicFrame19);

            AlternateContentFallback alternateContentFallback17 = new AlternateContentFallback();
            alternateContentFallback17.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback17.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape9 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties9 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties28 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties9 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks9 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties9.Append(shapeLocks9);

            nonVisualShapeProperties9.Append(nonVisualDrawingProperties28);
            nonVisualShapeProperties9.Append(nonVisualShapeDrawingProperties9);

            Xdr.ShapeProperties shapeProperties30 = new Xdr.ShapeProperties();

            A.Transform2D transform2D9 = new A.Transform2D();
            A.Offset offset28 = new A.Offset(){ X = 8620125L, Y = 209550L };
            A.Extents extents28 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D9.Append(offset28);
            transform2D9.Append(extents28);

            A.PresetGeometry presetGeometry9 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList9 = new A.AdjustValueList();

            presetGeometry9.Append(adjustValueList9);

            A.SolidFill solidFill56 = new A.SolidFill();
            A.PresetColor presetColor17 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill56.Append(presetColor17);

            A.Outline outline45 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill57 = new A.SolidFill();
            A.PresetColor presetColor18 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill57.Append(presetColor18);

            outline45.Append(solidFill57);

            shapeProperties30.Append(transform2D9);
            shapeProperties30.Append(presetGeometry9);
            shapeProperties30.Append(solidFill56);
            shapeProperties30.Append(outline45);

            Xdr.TextBody textBody9 = new Xdr.TextBody();
            A.BodyProperties bodyProperties21 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle21 = new A.ListStyle();

            A.Paragraph paragraph21 = new A.Paragraph();

            A.Run run9 = new A.Run();
            A.RunProperties runProperties9 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text47 = new A.Text();
            text47.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run9.Append(runProperties9);
            run9.Append(text47);

            paragraph21.Append(run9);

            textBody9.Append(bodyProperties21);
            textBody9.Append(listStyle21);
            textBody9.Append(paragraph21);

            shape9.Append(nonVisualShapeProperties9);
            shape9.Append(shapeProperties30);
            shape9.Append(textBody9);

            alternateContentFallback17.Append(shape9);

            alternateContent18.Append(alternateContentChoice18);
            alternateContent18.Append(alternateContentFallback17);
            Xdr.ClientData clientData19 = new Xdr.ClientData();

            twoCellAnchor19.Append(fromMarker19);
            twoCellAnchor19.Append(toMarker19);
            twoCellAnchor19.Append(alternateContent18);
            twoCellAnchor19.Append(clientData19);

            Xdr.TwoCellAnchor twoCellAnchor20 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker20 = new Xdr.FromMarker();
            Xdr.ColumnId columnId39 = new Xdr.ColumnId();
            columnId39.Text = "10";
            Xdr.ColumnOffset columnOffset39 = new Xdr.ColumnOffset();
            columnOffset39.Text = "9525";
            Xdr.RowId rowId39 = new Xdr.RowId();
            rowId39.Text = "9";
            Xdr.RowOffset rowOffset39 = new Xdr.RowOffset();
            rowOffset39.Text = "19050";

            fromMarker20.Append(columnId39);
            fromMarker20.Append(columnOffset39);
            fromMarker20.Append(rowId39);
            fromMarker20.Append(rowOffset39);

            Xdr.ToMarker toMarker20 = new Xdr.ToMarker();
            Xdr.ColumnId columnId40 = new Xdr.ColumnId();
            columnId40.Text = "13";
            Xdr.ColumnOffset columnOffset40 = new Xdr.ColumnOffset();
            columnOffset40.Text = "742950";
            Xdr.RowId rowId40 = new Xdr.RowId();
            rowId40.Text = "15";
            Xdr.RowOffset rowOffset40 = new Xdr.RowOffset();
            rowOffset40.Text = "66675";

            toMarker20.Append(columnId40);
            toMarker20.Append(columnOffset40);
            toMarker20.Append(rowId40);
            toMarker20.Append(rowOffset40);

            AlternateContent alternateContent19 = new AlternateContent();
            alternateContent19.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent19.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice19 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame20 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties20 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties29 = new Xdr.NonVisualDrawingProperties(){ Id = 5U, Name = "DeliveryDate 17" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties20 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties20.Append(nonVisualDrawingProperties29);
            nonVisualGraphicFrameProperties20.Append(nonVisualGraphicFrameDrawingProperties20);

            Xdr.Transform transform20 = new Xdr.Transform();
            A.Offset offset29 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents29 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform20.Append(offset29);
            transform20.Append(extents29);

            A.Graphic graphic20 = new A.Graphic();

            A.GraphicData graphicData20 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer10 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 17" };
            timeSlicer10.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData20.Append(timeSlicer10);

            graphic20.Append(graphicData20);

            graphicFrame20.Append(nonVisualGraphicFrameProperties20);
            graphicFrame20.Append(transform20);
            graphicFrame20.Append(graphic20);

            alternateContentChoice19.Append(graphicFrame20);

            AlternateContentFallback alternateContentFallback18 = new AlternateContentFallback();
            alternateContentFallback18.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback18.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape10 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties10 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties30 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties10 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks10 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties10.Append(shapeLocks10);

            nonVisualShapeProperties10.Append(nonVisualDrawingProperties30);
            nonVisualShapeProperties10.Append(nonVisualShapeDrawingProperties10);

            Xdr.ShapeProperties shapeProperties31 = new Xdr.ShapeProperties();

            A.Transform2D transform2D10 = new A.Transform2D();
            A.Offset offset30 = new A.Offset(){ X = 8610600L, Y = 1733550L };
            A.Extents extents30 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D10.Append(offset30);
            transform2D10.Append(extents30);

            A.PresetGeometry presetGeometry10 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList10 = new A.AdjustValueList();

            presetGeometry10.Append(adjustValueList10);

            A.SolidFill solidFill58 = new A.SolidFill();
            A.PresetColor presetColor19 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill58.Append(presetColor19);

            A.Outline outline46 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill59 = new A.SolidFill();
            A.PresetColor presetColor20 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill59.Append(presetColor20);

            outline46.Append(solidFill59);

            shapeProperties31.Append(transform2D10);
            shapeProperties31.Append(presetGeometry10);
            shapeProperties31.Append(solidFill58);
            shapeProperties31.Append(outline46);

            Xdr.TextBody textBody10 = new Xdr.TextBody();
            A.BodyProperties bodyProperties22 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle22 = new A.ListStyle();

            A.Paragraph paragraph22 = new A.Paragraph();

            A.Run run10 = new A.Run();
            A.RunProperties runProperties10 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text48 = new A.Text();
            text48.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run10.Append(runProperties10);
            run10.Append(text48);

            paragraph22.Append(run10);

            textBody10.Append(bodyProperties22);
            textBody10.Append(listStyle22);
            textBody10.Append(paragraph22);

            shape10.Append(nonVisualShapeProperties10);
            shape10.Append(shapeProperties31);
            shape10.Append(textBody10);

            alternateContentFallback18.Append(shape10);

            alternateContent19.Append(alternateContentChoice19);
            alternateContent19.Append(alternateContentFallback18);
            Xdr.ClientData clientData20 = new Xdr.ClientData();

            twoCellAnchor20.Append(fromMarker20);
            twoCellAnchor20.Append(toMarker20);
            twoCellAnchor20.Append(alternateContent19);
            twoCellAnchor20.Append(clientData20);

            worksheetDrawing5.Append(twoCellAnchor17);
            worksheetDrawing5.Append(twoCellAnchor18);
            worksheetDrawing5.Append(twoCellAnchor19);
            worksheetDrawing5.Append(twoCellAnchor20);

            drawingsPart5.WorksheetDrawing = worksheetDrawing5;
        }

        // Generates content of chartPart9.
        private static void GenerateChartPart9Content(ChartPart chartPart9)
        {
            C.ChartSpace chartSpace9 = new C.ChartSpace();
            chartSpace9.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace9.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace9.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date19049 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage9 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners9 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent20 = new AlternateContent();
            alternateContent20.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice20 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice20.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style17 = new C14.Style(){ Val = 102 };

            alternateContentChoice20.Append(style17);

            AlternateContentFallback alternateContentFallback19 = new AlternateContentFallback();
            C.Style style18 = new C.Style(){ Val = 2 };

            alternateContentFallback19.Append(style18);

            alternateContent20.Append(alternateContentChoice20);
            alternateContent20.Append(alternateContentFallback19);

            C.PivotSource pivotSource9 = new C.PivotSource();
            C.PivotTableName pivotTableName9 = new C.PivotTableName();
            pivotTableName9.Text = "[GeneratedDocument.xlsx]Style!PivotTable1";
            C.FormatId formatId9 = new C.FormatId(){ Val = 20U };

            pivotSource9.Append(pivotTableName9);
            pivotSource9.Append(formatId9);

            C.Chart chart9 = new C.Chart();

            C.Title title9 = new C.Title();
            C.Overlay overlay17 = new C.Overlay(){ Val = false };

            title9.Append(overlay17);
            C.AutoTitleDeleted autoTitleDeleted9 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats9 = new C.PivotFormats();

            C.PivotFormat pivotFormat66 = new C.PivotFormat();
            C.Index index74 = new C.Index(){ Val = 0U };

            C.Marker marker66 = new C.Marker();
            C.Symbol symbol66 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker66.Append(symbol66);

            pivotFormat66.Append(index74);
            pivotFormat66.Append(marker66);

            C.PivotFormat pivotFormat67 = new C.PivotFormat();
            C.Index index75 = new C.Index(){ Val = 1U };

            C.Marker marker67 = new C.Marker();
            C.Symbol symbol67 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker67.Append(symbol67);

            pivotFormat67.Append(index75);
            pivotFormat67.Append(marker67);

            C.PivotFormat pivotFormat68 = new C.PivotFormat();
            C.Index index76 = new C.Index(){ Val = 2U };

            C.Marker marker68 = new C.Marker();
            C.Symbol symbol68 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker68.Append(symbol68);

            pivotFormat68.Append(index76);
            pivotFormat68.Append(marker68);

            C.PivotFormat pivotFormat69 = new C.PivotFormat();
            C.Index index77 = new C.Index(){ Val = 3U };

            C.Marker marker69 = new C.Marker();
            C.Symbol symbol69 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker69.Append(symbol69);

            pivotFormat69.Append(index77);
            pivotFormat69.Append(marker69);

            C.PivotFormat pivotFormat70 = new C.PivotFormat();
            C.Index index78 = new C.Index(){ Val = 4U };

            C.Marker marker70 = new C.Marker();
            C.Symbol symbol70 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker70.Append(symbol70);

            pivotFormat70.Append(index78);
            pivotFormat70.Append(marker70);

            C.PivotFormat pivotFormat71 = new C.PivotFormat();
            C.Index index79 = new C.Index(){ Val = 5U };

            C.Marker marker71 = new C.Marker();
            C.Symbol symbol71 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker71.Append(symbol71);

            pivotFormat71.Append(index79);
            pivotFormat71.Append(marker71);

            C.PivotFormat pivotFormat72 = new C.PivotFormat();
            C.Index index80 = new C.Index(){ Val = 6U };

            C.Marker marker72 = new C.Marker();
            C.Symbol symbol72 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker72.Append(symbol72);

            pivotFormat72.Append(index80);
            pivotFormat72.Append(marker72);

            C.PivotFormat pivotFormat73 = new C.PivotFormat();
            C.Index index81 = new C.Index(){ Val = 7U };

            C.Marker marker73 = new C.Marker();
            C.Symbol symbol73 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker73.Append(symbol73);

            pivotFormat73.Append(index81);
            pivotFormat73.Append(marker73);

            pivotFormats9.Append(pivotFormat66);
            pivotFormats9.Append(pivotFormat67);
            pivotFormats9.Append(pivotFormat68);
            pivotFormats9.Append(pivotFormat69);
            pivotFormats9.Append(pivotFormat70);
            pivotFormats9.Append(pivotFormat71);
            pivotFormats9.Append(pivotFormat72);
            pivotFormats9.Append(pivotFormat73);

            C.PlotArea plotArea9 = new C.PlotArea();
            C.Layout layout9 = new C.Layout();

            C.PieChart pieChart5 = new C.PieChart();
            C.VaryColors varyColors9 = new C.VaryColors(){ Val = true };

            C.PieChartSeries pieChartSeries5 = new C.PieChartSeries();
            C.Index index82 = new C.Index(){ Val = 0U };
            C.Order order9 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText9 = new C.SeriesText();

            C.StringReference stringReference17 = new C.StringReference();
            C.Formula formula25 = new C.Formula();
            formula25.Text = "Style!$B$1";

            C.StringCache stringCache17 = new C.StringCache();
            C.PointCount pointCount25 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint33 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue57 = new C.NumericValue();
            numericValue57.Text = "Total";

            stringPoint33.Append(numericValue57);

            stringCache17.Append(pointCount25);
            stringCache17.Append(stringPoint33);

            stringReference17.Append(formula25);
            stringReference17.Append(stringCache17);

            seriesText9.Append(stringReference17);

            C.CategoryAxisData categoryAxisData9 = new C.CategoryAxisData();

            C.StringReference stringReference18 = new C.StringReference();
            C.Formula formula26 = new C.Formula();
            formula26.Text = "Style!$A$2:$A$5";

            C.StringCache stringCache18 = new C.StringCache();
            C.PointCount pointCount26 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint34 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue58 = new C.NumericValue();
            numericValue58.Text = "product_A";

            stringPoint34.Append(numericValue58);

            C.StringPoint stringPoint35 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue59 = new C.NumericValue();
            numericValue59.Text = "product_D";

            stringPoint35.Append(numericValue59);

            C.StringPoint stringPoint36 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue60 = new C.NumericValue();
            numericValue60.Text = "product_E";

            stringPoint36.Append(numericValue60);

            stringCache18.Append(pointCount26);
            stringCache18.Append(stringPoint34);
            stringCache18.Append(stringPoint35);
            stringCache18.Append(stringPoint36);

            stringReference18.Append(formula26);
            stringReference18.Append(stringCache18);

            categoryAxisData9.Append(stringReference18);

            C.Values values9 = new C.Values();

            C.NumberReference numberReference9 = new C.NumberReference();
            C.Formula formula27 = new C.Formula();
            formula27.Text = "Style!$B$2:$B$5";

            C.NumberingCache numberingCache9 = new C.NumberingCache();
            C.FormatCode formatCode9 = new C.FormatCode();
            formatCode9.Text = "General";
            C.PointCount pointCount27 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint25 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue61 = new C.NumericValue();
            numericValue61.Text = "19";

            numericPoint25.Append(numericValue61);

            C.NumericPoint numericPoint26 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue62 = new C.NumericValue();
            numericValue62.Text = "13";

            numericPoint26.Append(numericValue62);

            C.NumericPoint numericPoint27 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue63 = new C.NumericValue();
            numericValue63.Text = "33";

            numericPoint27.Append(numericValue63);

            numberingCache9.Append(formatCode9);
            numberingCache9.Append(pointCount27);
            numberingCache9.Append(numericPoint25);
            numberingCache9.Append(numericPoint26);
            numberingCache9.Append(numericPoint27);

            numberReference9.Append(formula27);
            numberReference9.Append(numberingCache9);

            values9.Append(numberReference9);

            pieChartSeries5.Append(index82);
            pieChartSeries5.Append(order9);
            pieChartSeries5.Append(seriesText9);
            pieChartSeries5.Append(categoryAxisData9);
            pieChartSeries5.Append(values9);

            C.DataLabels dataLabels9 = new C.DataLabels();
            C.ShowLegendKey showLegendKey9 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue9 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName9 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName9 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent9 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize9 = new C.ShowBubbleSize(){ Val = false };
            C.ShowLeaderLines showLeaderLines5 = new C.ShowLeaderLines(){ Val = true };

            dataLabels9.Append(showLegendKey9);
            dataLabels9.Append(showValue9);
            dataLabels9.Append(showCategoryName9);
            dataLabels9.Append(showSeriesName9);
            dataLabels9.Append(showPercent9);
            dataLabels9.Append(showBubbleSize9);
            dataLabels9.Append(showLeaderLines5);
            C.FirstSliceAngle firstSliceAngle5 = new C.FirstSliceAngle(){ Val = (UInt16Value)0U };

            pieChart5.Append(varyColors9);
            pieChart5.Append(pieChartSeries5);
            pieChart5.Append(dataLabels9);
            pieChart5.Append(firstSliceAngle5);

            plotArea9.Append(layout9);
            plotArea9.Append(pieChart5);

            C.Legend legend9 = new C.Legend();
            C.LegendPosition legendPosition9 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay18 = new C.Overlay(){ Val = false };

            legend9.Append(legendPosition9);
            legend9.Append(overlay18);
            C.PlotVisibleOnly plotVisibleOnly9 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs9 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum9 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart9.Append(title9);
            chart9.Append(autoTitleDeleted9);
            chart9.Append(pivotFormats9);
            chart9.Append(plotArea9);
            chart9.Append(legend9);
            chart9.Append(plotVisibleOnly9);
            chart9.Append(displayBlanksAs9);
            chart9.Append(showDataLabelsOverMaximum9);

            C.PrintSettings printSettings9 = new C.PrintSettings();
            C.HeaderFooter headerFooter9 = new C.HeaderFooter();
            C.PageMargins pageMargins16 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup9 = new C.PageSetup();

            printSettings9.Append(headerFooter9);
            printSettings9.Append(pageMargins16);
            printSettings9.Append(pageSetup9);

            C.ChartSpaceExtensionList chartSpaceExtensionList9 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList9.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList9.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension9 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension9.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions9 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter9 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories9 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData9 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries9 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible9 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions9.Append(dropZoneFilter9);
            pivotOptions9.Append(dropZoneCategories9);
            pivotOptions9.Append(dropZoneData9);
            pivotOptions9.Append(dropZoneSeries9);
            pivotOptions9.Append(dropZonesVisible9);

            chartSpaceExtension9.Append(pivotOptions9);

            chartSpaceExtensionList9.Append(chartSpaceExtension9);

            chartSpace9.Append(date19049);
            chartSpace9.Append(editingLanguage9);
            chartSpace9.Append(roundedCorners9);
            chartSpace9.Append(alternateContent20);
            chartSpace9.Append(pivotSource9);
            chartSpace9.Append(chart9);
            chartSpace9.Append(printSettings9);
            chartSpace9.Append(chartSpaceExtensionList9);

            chartPart9.ChartSpace = chartSpace9;
        }

        // Generates content of chartPart10.
        private static void GenerateChartPart10Content(ChartPart chartPart10)
        {
            C.ChartSpace chartSpace10 = new C.ChartSpace();
            chartSpace10.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace10.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace10.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date190410 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage10 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners10 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent21 = new AlternateContent();
            alternateContent21.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice21 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice21.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style19 = new C14.Style(){ Val = 101 };

            alternateContentChoice21.Append(style19);

            AlternateContentFallback alternateContentFallback20 = new AlternateContentFallback();
            C.Style style20 = new C.Style(){ Val = 1 };

            alternateContentFallback20.Append(style20);

            alternateContent21.Append(alternateContentChoice21);
            alternateContent21.Append(alternateContentFallback20);

            C.PivotSource pivotSource10 = new C.PivotSource();
            C.PivotTableName pivotTableName10 = new C.PivotTableName();
            pivotTableName10.Text = "[GeneratedDocument.xlsx]Style!PivotTable1";
            C.FormatId formatId10 = new C.FormatId(){ Val = 19U };

            pivotSource10.Append(pivotTableName10);
            pivotSource10.Append(formatId10);

            C.Chart chart10 = new C.Chart();

            C.Title title10 = new C.Title();
            C.Overlay overlay19 = new C.Overlay(){ Val = false };

            title10.Append(overlay19);
            C.AutoTitleDeleted autoTitleDeleted10 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats10 = new C.PivotFormats();

            C.PivotFormat pivotFormat74 = new C.PivotFormat();
            C.Index index83 = new C.Index(){ Val = 0U };

            C.ShapeProperties shapeProperties32 = new C.ShapeProperties();

            A.SolidFill solidFill60 = new A.SolidFill();

            A.SchemeColor schemeColor40 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint19 = new A.Tint(){ Val = 100000 };

            schemeColor40.Append(tint19);

            solidFill60.Append(schemeColor40);

            A.Outline outline47 = new A.Outline();
            A.NoFill noFill40 = new A.NoFill();

            outline47.Append(noFill40);
            A.EffectList effectList37 = new A.EffectList();

            shapeProperties32.Append(solidFill60);
            shapeProperties32.Append(outline47);
            shapeProperties32.Append(effectList37);

            C.Marker marker74 = new C.Marker();
            C.Symbol symbol74 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker74.Append(symbol74);

            pivotFormat74.Append(index83);
            pivotFormat74.Append(shapeProperties32);
            pivotFormat74.Append(marker74);

            C.PivotFormat pivotFormat75 = new C.PivotFormat();
            C.Index index84 = new C.Index(){ Val = 1U };

            C.ShapeProperties shapeProperties33 = new C.ShapeProperties();

            A.SolidFill solidFill61 = new A.SolidFill();

            A.SchemeColor schemeColor41 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent2 };
            A.Tint tint20 = new A.Tint(){ Val = 100000 };

            schemeColor41.Append(tint20);

            solidFill61.Append(schemeColor41);

            A.Outline outline48 = new A.Outline();
            A.NoFill noFill41 = new A.NoFill();

            outline48.Append(noFill41);
            A.EffectList effectList38 = new A.EffectList();

            shapeProperties33.Append(solidFill61);
            shapeProperties33.Append(outline48);
            shapeProperties33.Append(effectList38);

            C.Marker marker75 = new C.Marker();
            C.Symbol symbol75 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker75.Append(symbol75);

            pivotFormat75.Append(index84);
            pivotFormat75.Append(shapeProperties33);
            pivotFormat75.Append(marker75);

            C.PivotFormat pivotFormat76 = new C.PivotFormat();
            C.Index index85 = new C.Index(){ Val = 2U };

            C.Marker marker76 = new C.Marker();
            C.Symbol symbol76 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker76.Append(symbol76);

            pivotFormat76.Append(index85);
            pivotFormat76.Append(marker76);

            C.PivotFormat pivotFormat77 = new C.PivotFormat();
            C.Index index86 = new C.Index(){ Val = 3U };

            C.Marker marker77 = new C.Marker();
            C.Symbol symbol77 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker77.Append(symbol77);

            pivotFormat77.Append(index86);
            pivotFormat77.Append(marker77);

            C.PivotFormat pivotFormat78 = new C.PivotFormat();
            C.Index index87 = new C.Index(){ Val = 4U };

            C.Marker marker78 = new C.Marker();
            C.Symbol symbol78 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker78.Append(symbol78);

            pivotFormat78.Append(index87);
            pivotFormat78.Append(marker78);

            C.PivotFormat pivotFormat79 = new C.PivotFormat();
            C.Index index88 = new C.Index(){ Val = 5U };

            C.Marker marker79 = new C.Marker();
            C.Symbol symbol79 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker79.Append(symbol79);

            pivotFormat79.Append(index88);
            pivotFormat79.Append(marker79);

            C.PivotFormat pivotFormat80 = new C.PivotFormat();
            C.Index index89 = new C.Index(){ Val = 6U };

            C.Marker marker80 = new C.Marker();
            C.Symbol symbol80 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker80.Append(symbol80);

            pivotFormat80.Append(index89);
            pivotFormat80.Append(marker80);

            C.PivotFormat pivotFormat81 = new C.PivotFormat();
            C.Index index90 = new C.Index(){ Val = 7U };

            C.Marker marker81 = new C.Marker();
            C.Symbol symbol81 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker81.Append(symbol81);

            pivotFormat81.Append(index90);
            pivotFormat81.Append(marker81);

            C.PivotFormat pivotFormat82 = new C.PivotFormat();
            C.Index index91 = new C.Index(){ Val = 8U };

            C.Marker marker82 = new C.Marker();
            C.Symbol symbol82 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker82.Append(symbol82);

            pivotFormat82.Append(index91);
            pivotFormat82.Append(marker82);

            C.PivotFormat pivotFormat83 = new C.PivotFormat();
            C.Index index92 = new C.Index(){ Val = 9U };

            C.Marker marker83 = new C.Marker();
            C.Symbol symbol83 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker83.Append(symbol83);

            pivotFormat83.Append(index92);
            pivotFormat83.Append(marker83);

            C.PivotFormat pivotFormat84 = new C.PivotFormat();
            C.Index index93 = new C.Index(){ Val = 10U };

            C.Marker marker84 = new C.Marker();
            C.Symbol symbol84 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker84.Append(symbol84);

            pivotFormat84.Append(index93);
            pivotFormat84.Append(marker84);

            C.PivotFormat pivotFormat85 = new C.PivotFormat();
            C.Index index94 = new C.Index(){ Val = 11U };

            C.Marker marker85 = new C.Marker();
            C.Symbol symbol85 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker85.Append(symbol85);

            pivotFormat85.Append(index94);
            pivotFormat85.Append(marker85);

            C.PivotFormat pivotFormat86 = new C.PivotFormat();
            C.Index index95 = new C.Index(){ Val = 12U };

            C.Marker marker86 = new C.Marker();
            C.Symbol symbol86 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker86.Append(symbol86);

            pivotFormat86.Append(index95);
            pivotFormat86.Append(marker86);

            C.PivotFormat pivotFormat87 = new C.PivotFormat();
            C.Index index96 = new C.Index(){ Val = 13U };

            C.Marker marker87 = new C.Marker();
            C.Symbol symbol87 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker87.Append(symbol87);

            pivotFormat87.Append(index96);
            pivotFormat87.Append(marker87);

            C.PivotFormat pivotFormat88 = new C.PivotFormat();
            C.Index index97 = new C.Index(){ Val = 14U };

            C.ShapeProperties shapeProperties34 = new C.ShapeProperties();

            A.SolidFill solidFill62 = new A.SolidFill();

            A.SchemeColor schemeColor42 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint21 = new A.Tint(){ Val = 100000 };

            schemeColor42.Append(tint21);

            solidFill62.Append(schemeColor42);

            A.Outline outline49 = new A.Outline();
            A.NoFill noFill42 = new A.NoFill();

            outline49.Append(noFill42);
            A.EffectList effectList39 = new A.EffectList();

            shapeProperties34.Append(solidFill62);
            shapeProperties34.Append(outline49);
            shapeProperties34.Append(effectList39);

            C.Marker marker88 = new C.Marker();
            C.Symbol symbol88 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker88.Append(symbol88);

            pivotFormat88.Append(index97);
            pivotFormat88.Append(shapeProperties34);
            pivotFormat88.Append(marker88);

            C.PivotFormat pivotFormat89 = new C.PivotFormat();
            C.Index index98 = new C.Index(){ Val = 15U };

            C.ShapeProperties shapeProperties35 = new C.ShapeProperties();

            A.SolidFill solidFill63 = new A.SolidFill();

            A.SchemeColor schemeColor43 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint22 = new A.Tint(){ Val = 100000 };

            schemeColor43.Append(tint22);

            solidFill63.Append(schemeColor43);

            A.Outline outline50 = new A.Outline();
            A.NoFill noFill43 = new A.NoFill();

            outline50.Append(noFill43);
            A.EffectList effectList40 = new A.EffectList();

            shapeProperties35.Append(solidFill63);
            shapeProperties35.Append(outline50);
            shapeProperties35.Append(effectList40);

            C.Marker marker89 = new C.Marker();
            C.Symbol symbol89 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker89.Append(symbol89);

            pivotFormat89.Append(index98);
            pivotFormat89.Append(shapeProperties35);
            pivotFormat89.Append(marker89);

            C.PivotFormat pivotFormat90 = new C.PivotFormat();
            C.Index index99 = new C.Index(){ Val = 16U };

            C.ShapeProperties shapeProperties36 = new C.ShapeProperties();

            A.SolidFill solidFill64 = new A.SolidFill();

            A.SchemeColor schemeColor44 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint23 = new A.Tint(){ Val = 100000 };

            schemeColor44.Append(tint23);

            solidFill64.Append(schemeColor44);

            A.Outline outline51 = new A.Outline();
            A.NoFill noFill44 = new A.NoFill();

            outline51.Append(noFill44);
            A.EffectList effectList41 = new A.EffectList();

            shapeProperties36.Append(solidFill64);
            shapeProperties36.Append(outline51);
            shapeProperties36.Append(effectList41);

            C.Marker marker90 = new C.Marker();
            C.Symbol symbol90 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker90.Append(symbol90);

            pivotFormat90.Append(index99);
            pivotFormat90.Append(shapeProperties36);
            pivotFormat90.Append(marker90);

            C.PivotFormat pivotFormat91 = new C.PivotFormat();
            C.Index index100 = new C.Index(){ Val = 17U };

            C.ShapeProperties shapeProperties37 = new C.ShapeProperties();

            A.SolidFill solidFill65 = new A.SolidFill();

            A.SchemeColor schemeColor45 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint24 = new A.Tint(){ Val = 100000 };

            schemeColor45.Append(tint24);

            solidFill65.Append(schemeColor45);

            A.Outline outline52 = new A.Outline();
            A.NoFill noFill45 = new A.NoFill();

            outline52.Append(noFill45);
            A.EffectList effectList42 = new A.EffectList();

            shapeProperties37.Append(solidFill65);
            shapeProperties37.Append(outline52);
            shapeProperties37.Append(effectList42);

            C.Marker marker91 = new C.Marker();
            C.Symbol symbol91 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker91.Append(symbol91);

            pivotFormat91.Append(index100);
            pivotFormat91.Append(shapeProperties37);
            pivotFormat91.Append(marker91);

            C.PivotFormat pivotFormat92 = new C.PivotFormat();
            C.Index index101 = new C.Index(){ Val = 18U };

            C.ShapeProperties shapeProperties38 = new C.ShapeProperties();

            A.SolidFill solidFill66 = new A.SolidFill();

            A.SchemeColor schemeColor46 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint25 = new A.Tint(){ Val = 100000 };

            schemeColor46.Append(tint25);

            solidFill66.Append(schemeColor46);

            A.Outline outline53 = new A.Outline();
            A.NoFill noFill46 = new A.NoFill();

            outline53.Append(noFill46);
            A.EffectList effectList43 = new A.EffectList();

            shapeProperties38.Append(solidFill66);
            shapeProperties38.Append(outline53);
            shapeProperties38.Append(effectList43);

            C.Marker marker92 = new C.Marker();
            C.Symbol symbol92 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker92.Append(symbol92);

            pivotFormat92.Append(index101);
            pivotFormat92.Append(shapeProperties38);
            pivotFormat92.Append(marker92);

            C.PivotFormat pivotFormat93 = new C.PivotFormat();
            C.Index index102 = new C.Index(){ Val = 19U };

            C.ShapeProperties shapeProperties39 = new C.ShapeProperties();

            A.SolidFill solidFill67 = new A.SolidFill();

            A.SchemeColor schemeColor47 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint26 = new A.Tint(){ Val = 100000 };

            schemeColor47.Append(tint26);

            solidFill67.Append(schemeColor47);

            A.Outline outline54 = new A.Outline();
            A.NoFill noFill47 = new A.NoFill();

            outline54.Append(noFill47);
            A.EffectList effectList44 = new A.EffectList();

            shapeProperties39.Append(solidFill67);
            shapeProperties39.Append(outline54);
            shapeProperties39.Append(effectList44);

            C.Marker marker93 = new C.Marker();
            C.Symbol symbol93 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker93.Append(symbol93);

            pivotFormat93.Append(index102);
            pivotFormat93.Append(shapeProperties39);
            pivotFormat93.Append(marker93);

            C.PivotFormat pivotFormat94 = new C.PivotFormat();
            C.Index index103 = new C.Index(){ Val = 20U };

            C.ShapeProperties shapeProperties40 = new C.ShapeProperties();

            A.SolidFill solidFill68 = new A.SolidFill();

            A.SchemeColor schemeColor48 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint27 = new A.Tint(){ Val = 100000 };

            schemeColor48.Append(tint27);

            solidFill68.Append(schemeColor48);

            A.Outline outline55 = new A.Outline();
            A.NoFill noFill48 = new A.NoFill();

            outline55.Append(noFill48);
            A.EffectList effectList45 = new A.EffectList();

            shapeProperties40.Append(solidFill68);
            shapeProperties40.Append(outline55);
            shapeProperties40.Append(effectList45);

            C.Marker marker94 = new C.Marker();
            C.Symbol symbol94 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker94.Append(symbol94);

            pivotFormat94.Append(index103);
            pivotFormat94.Append(shapeProperties40);
            pivotFormat94.Append(marker94);

            pivotFormats10.Append(pivotFormat74);
            pivotFormats10.Append(pivotFormat75);
            pivotFormats10.Append(pivotFormat76);
            pivotFormats10.Append(pivotFormat77);
            pivotFormats10.Append(pivotFormat78);
            pivotFormats10.Append(pivotFormat79);
            pivotFormats10.Append(pivotFormat80);
            pivotFormats10.Append(pivotFormat81);
            pivotFormats10.Append(pivotFormat82);
            pivotFormats10.Append(pivotFormat83);
            pivotFormats10.Append(pivotFormat84);
            pivotFormats10.Append(pivotFormat85);
            pivotFormats10.Append(pivotFormat86);
            pivotFormats10.Append(pivotFormat87);
            pivotFormats10.Append(pivotFormat88);
            pivotFormats10.Append(pivotFormat89);
            pivotFormats10.Append(pivotFormat90);
            pivotFormats10.Append(pivotFormat91);
            pivotFormats10.Append(pivotFormat92);
            pivotFormats10.Append(pivotFormat93);
            pivotFormats10.Append(pivotFormat94);

            C.PlotArea plotArea10 = new C.PlotArea();
            C.Layout layout10 = new C.Layout();

            C.BarChart barChart5 = new C.BarChart();
            C.BarDirection barDirection5 = new C.BarDirection(){ Val = C.BarDirectionValues.Column };
            C.BarGrouping barGrouping5 = new C.BarGrouping(){ Val = C.BarGroupingValues.Clustered };
            C.VaryColors varyColors10 = new C.VaryColors(){ Val = false };

            C.BarChartSeries barChartSeries5 = new C.BarChartSeries();
            C.Index index104 = new C.Index(){ Val = 0U };
            C.Order order10 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText10 = new C.SeriesText();

            C.StringReference stringReference19 = new C.StringReference();
            C.Formula formula28 = new C.Formula();
            formula28.Text = "Style!$B$1";

            C.StringCache stringCache19 = new C.StringCache();
            C.PointCount pointCount28 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint37 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue64 = new C.NumericValue();
            numericValue64.Text = "Total";

            stringPoint37.Append(numericValue64);

            stringCache19.Append(pointCount28);
            stringCache19.Append(stringPoint37);

            stringReference19.Append(formula28);
            stringReference19.Append(stringCache19);

            seriesText10.Append(stringReference19);

            C.ChartShapeProperties chartShapeProperties16 = new C.ChartShapeProperties();

            A.SolidFill solidFill69 = new A.SolidFill();

            A.SchemeColor schemeColor49 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint28 = new A.Tint(){ Val = 100000 };

            schemeColor49.Append(tint28);

            solidFill69.Append(schemeColor49);

            A.Outline outline56 = new A.Outline();
            A.NoFill noFill49 = new A.NoFill();

            outline56.Append(noFill49);
            A.EffectList effectList46 = new A.EffectList();

            chartShapeProperties16.Append(solidFill69);
            chartShapeProperties16.Append(outline56);
            chartShapeProperties16.Append(effectList46);
            C.InvertIfNegative invertIfNegative5 = new C.InvertIfNegative(){ Val = false };

            C.CategoryAxisData categoryAxisData10 = new C.CategoryAxisData();

            C.StringReference stringReference20 = new C.StringReference();
            C.Formula formula29 = new C.Formula();
            formula29.Text = "Style!$A$2:$A$5";

            C.StringCache stringCache20 = new C.StringCache();
            C.PointCount pointCount29 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint38 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue65 = new C.NumericValue();
            numericValue65.Text = "product_A";

            stringPoint38.Append(numericValue65);

            C.StringPoint stringPoint39 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue66 = new C.NumericValue();
            numericValue66.Text = "product_D";

            stringPoint39.Append(numericValue66);

            C.StringPoint stringPoint40 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue67 = new C.NumericValue();
            numericValue67.Text = "product_E";

            stringPoint40.Append(numericValue67);

            stringCache20.Append(pointCount29);
            stringCache20.Append(stringPoint38);
            stringCache20.Append(stringPoint39);
            stringCache20.Append(stringPoint40);

            stringReference20.Append(formula29);
            stringReference20.Append(stringCache20);

            categoryAxisData10.Append(stringReference20);

            C.Values values10 = new C.Values();

            C.NumberReference numberReference10 = new C.NumberReference();
            C.Formula formula30 = new C.Formula();
            formula30.Text = "Style!$B$2:$B$5";

            C.NumberingCache numberingCache10 = new C.NumberingCache();
            C.FormatCode formatCode10 = new C.FormatCode();
            formatCode10.Text = "General";
            C.PointCount pointCount30 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint28 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue68 = new C.NumericValue();
            numericValue68.Text = "19";

            numericPoint28.Append(numericValue68);

            C.NumericPoint numericPoint29 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue69 = new C.NumericValue();
            numericValue69.Text = "13";

            numericPoint29.Append(numericValue69);

            C.NumericPoint numericPoint30 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue70 = new C.NumericValue();
            numericValue70.Text = "33";

            numericPoint30.Append(numericValue70);

            numberingCache10.Append(formatCode10);
            numberingCache10.Append(pointCount30);
            numberingCache10.Append(numericPoint28);
            numberingCache10.Append(numericPoint29);
            numberingCache10.Append(numericPoint30);

            numberReference10.Append(formula30);
            numberReference10.Append(numberingCache10);

            values10.Append(numberReference10);

            barChartSeries5.Append(index104);
            barChartSeries5.Append(order10);
            barChartSeries5.Append(seriesText10);
            barChartSeries5.Append(chartShapeProperties16);
            barChartSeries5.Append(invertIfNegative5);
            barChartSeries5.Append(categoryAxisData10);
            barChartSeries5.Append(values10);

            C.DataLabels dataLabels10 = new C.DataLabels();
            C.ShowLegendKey showLegendKey10 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue10 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName10 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName10 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent10 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize10 = new C.ShowBubbleSize(){ Val = false };

            dataLabels10.Append(showLegendKey10);
            dataLabels10.Append(showValue10);
            dataLabels10.Append(showCategoryName10);
            dataLabels10.Append(showSeriesName10);
            dataLabels10.Append(showPercent10);
            dataLabels10.Append(showBubbleSize10);
            C.GapWidth gapWidth5 = new C.GapWidth(){ Val = (UInt16Value)219U };
            C.Overlap overlap4 = new C.Overlap(){ Val = -27 };
            C.AxisId axisId17 = new C.AxisId(){ Val = 208842560U };
            C.AxisId axisId18 = new C.AxisId(){ Val = 208842952U };

            barChart5.Append(barDirection5);
            barChart5.Append(barGrouping5);
            barChart5.Append(varyColors10);
            barChart5.Append(barChartSeries5);
            barChart5.Append(dataLabels10);
            barChart5.Append(gapWidth5);
            barChart5.Append(overlap4);
            barChart5.Append(axisId17);
            barChart5.Append(axisId18);

            C.CategoryAxis categoryAxis5 = new C.CategoryAxis();
            C.AxisId axisId19 = new C.AxisId(){ Val = 208842560U };

            C.Scaling scaling9 = new C.Scaling();
            C.Orientation orientation9 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling9.Append(orientation9);
            C.Delete delete9 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition9 = new C.AxisPosition(){ Val = C.AxisPositionValues.Bottom };
            C.NumberingFormat numberingFormat9 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = false };
            C.MajorTickMark majorTickMark9 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark9 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition9 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties17 = new C.ChartShapeProperties();
            A.NoFill noFill50 = new A.NoFill();

            A.Outline outline57 = new A.Outline();
            A.NoFill noFill51 = new A.NoFill();

            outline57.Append(noFill51);
            A.EffectList effectList47 = new A.EffectList();

            chartShapeProperties17.Append(noFill50);
            chartShapeProperties17.Append(outline57);
            chartShapeProperties17.Append(effectList47);

            C.TextProperties textProperties13 = new C.TextProperties();
            A.BodyProperties bodyProperties23 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle23 = new A.ListStyle();

            A.Paragraph paragraph23 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties13 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties13 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill70 = new A.SolidFill();

            A.SchemeColor schemeColor50 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation16 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset16 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor50.Append(luminanceModulation16);
            schemeColor50.Append(luminanceOffset16);

            solidFill70.Append(schemeColor50);
            A.LatinFont latinFont10 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont10 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont10 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties13.Append(solidFill70);
            defaultRunProperties13.Append(latinFont10);
            defaultRunProperties13.Append(eastAsianFont10);
            defaultRunProperties13.Append(complexScriptFont10);

            paragraphProperties13.Append(defaultRunProperties13);
            A.EndParagraphRunProperties endParagraphRunProperties13 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph23.Append(paragraphProperties13);
            paragraph23.Append(endParagraphRunProperties13);

            textProperties13.Append(bodyProperties23);
            textProperties13.Append(listStyle23);
            textProperties13.Append(paragraph23);
            C.CrossingAxis crossingAxis9 = new C.CrossingAxis(){ Val = 208842952U };
            C.Crosses crosses9 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.AutoLabeled autoLabeled5 = new C.AutoLabeled(){ Val = true };
            C.LabelAlignment labelAlignment5 = new C.LabelAlignment(){ Val = C.LabelAlignmentValues.Center };
            C.LabelOffset labelOffset5 = new C.LabelOffset(){ Val = (UInt16Value)100U };
            C.NoMultiLevelLabels noMultiLevelLabels5 = new C.NoMultiLevelLabels(){ Val = false };

            categoryAxis5.Append(axisId19);
            categoryAxis5.Append(scaling9);
            categoryAxis5.Append(delete9);
            categoryAxis5.Append(axisPosition9);
            categoryAxis5.Append(numberingFormat9);
            categoryAxis5.Append(majorTickMark9);
            categoryAxis5.Append(minorTickMark9);
            categoryAxis5.Append(tickLabelPosition9);
            categoryAxis5.Append(chartShapeProperties17);
            categoryAxis5.Append(textProperties13);
            categoryAxis5.Append(crossingAxis9);
            categoryAxis5.Append(crosses9);
            categoryAxis5.Append(autoLabeled5);
            categoryAxis5.Append(labelAlignment5);
            categoryAxis5.Append(labelOffset5);
            categoryAxis5.Append(noMultiLevelLabels5);

            C.ValueAxis valueAxis5 = new C.ValueAxis();
            C.AxisId axisId20 = new C.AxisId(){ Val = 208842952U };

            C.Scaling scaling10 = new C.Scaling();
            C.Orientation orientation10 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling10.Append(orientation10);
            C.Delete delete10 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition10 = new C.AxisPosition(){ Val = C.AxisPositionValues.Left };

            C.MajorGridlines majorGridlines5 = new C.MajorGridlines();

            C.ChartShapeProperties chartShapeProperties18 = new C.ChartShapeProperties();

            A.Outline outline58 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill71 = new A.SolidFill();

            A.SchemeColor schemeColor51 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation17 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset17 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor51.Append(luminanceModulation17);
            schemeColor51.Append(luminanceOffset17);

            solidFill71.Append(schemeColor51);
            A.Round round7 = new A.Round();

            outline58.Append(solidFill71);
            outline58.Append(round7);
            A.EffectList effectList48 = new A.EffectList();

            chartShapeProperties18.Append(outline58);
            chartShapeProperties18.Append(effectList48);

            majorGridlines5.Append(chartShapeProperties18);
            C.NumberingFormat numberingFormat10 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = true };
            C.MajorTickMark majorTickMark10 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark10 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition10 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties19 = new C.ChartShapeProperties();
            A.NoFill noFill52 = new A.NoFill();

            A.Outline outline59 = new A.Outline();
            A.NoFill noFill53 = new A.NoFill();

            outline59.Append(noFill53);
            A.EffectList effectList49 = new A.EffectList();

            chartShapeProperties19.Append(noFill52);
            chartShapeProperties19.Append(outline59);
            chartShapeProperties19.Append(effectList49);

            C.TextProperties textProperties14 = new C.TextProperties();
            A.BodyProperties bodyProperties24 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle24 = new A.ListStyle();

            A.Paragraph paragraph24 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties14 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties14 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill72 = new A.SolidFill();

            A.SchemeColor schemeColor52 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation18 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset18 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor52.Append(luminanceModulation18);
            schemeColor52.Append(luminanceOffset18);

            solidFill72.Append(schemeColor52);
            A.LatinFont latinFont11 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont11 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont11 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties14.Append(solidFill72);
            defaultRunProperties14.Append(latinFont11);
            defaultRunProperties14.Append(eastAsianFont11);
            defaultRunProperties14.Append(complexScriptFont11);

            paragraphProperties14.Append(defaultRunProperties14);
            A.EndParagraphRunProperties endParagraphRunProperties14 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph24.Append(paragraphProperties14);
            paragraph24.Append(endParagraphRunProperties14);

            textProperties14.Append(bodyProperties24);
            textProperties14.Append(listStyle24);
            textProperties14.Append(paragraph24);
            C.CrossingAxis crossingAxis10 = new C.CrossingAxis(){ Val = 208842560U };
            C.Crosses crosses10 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.CrossBetween crossBetween5 = new C.CrossBetween(){ Val = C.CrossBetweenValues.Between };

            valueAxis5.Append(axisId20);
            valueAxis5.Append(scaling10);
            valueAxis5.Append(delete10);
            valueAxis5.Append(axisPosition10);
            valueAxis5.Append(majorGridlines5);
            valueAxis5.Append(numberingFormat10);
            valueAxis5.Append(majorTickMark10);
            valueAxis5.Append(minorTickMark10);
            valueAxis5.Append(tickLabelPosition10);
            valueAxis5.Append(chartShapeProperties19);
            valueAxis5.Append(textProperties14);
            valueAxis5.Append(crossingAxis10);
            valueAxis5.Append(crosses10);
            valueAxis5.Append(crossBetween5);

            C.ShapeProperties shapeProperties41 = new C.ShapeProperties();

            A.SolidFill solidFill73 = new A.SolidFill();
            A.SchemeColor schemeColor53 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill73.Append(schemeColor53);

            A.Outline outline60 = new A.Outline();
            A.NoFill noFill54 = new A.NoFill();

            outline60.Append(noFill54);
            A.EffectList effectList50 = new A.EffectList();

            shapeProperties41.Append(solidFill73);
            shapeProperties41.Append(outline60);
            shapeProperties41.Append(effectList50);

            plotArea10.Append(layout10);
            plotArea10.Append(barChart5);
            plotArea10.Append(categoryAxis5);
            plotArea10.Append(valueAxis5);
            plotArea10.Append(shapeProperties41);

            C.Legend legend10 = new C.Legend();
            C.LegendPosition legendPosition10 = new C.LegendPosition(){ Val = C.LegendPositionValues.Bottom };
            C.Overlay overlay20 = new C.Overlay(){ Val = false };

            C.ChartShapeProperties chartShapeProperties20 = new C.ChartShapeProperties();
            A.NoFill noFill55 = new A.NoFill();

            A.Outline outline61 = new A.Outline();
            A.NoFill noFill56 = new A.NoFill();

            outline61.Append(noFill56);
            A.EffectList effectList51 = new A.EffectList();

            chartShapeProperties20.Append(noFill55);
            chartShapeProperties20.Append(outline61);
            chartShapeProperties20.Append(effectList51);

            C.TextProperties textProperties15 = new C.TextProperties();
            A.BodyProperties bodyProperties25 = new A.BodyProperties(){ Rotation = 0, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle25 = new A.ListStyle();

            A.Paragraph paragraph25 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties15 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties15 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill74 = new A.SolidFill();

            A.SchemeColor schemeColor54 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation19 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset19 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor54.Append(luminanceModulation19);
            schemeColor54.Append(luminanceOffset19);

            solidFill74.Append(schemeColor54);
            A.LatinFont latinFont12 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont12 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont12 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties15.Append(solidFill74);
            defaultRunProperties15.Append(latinFont12);
            defaultRunProperties15.Append(eastAsianFont12);
            defaultRunProperties15.Append(complexScriptFont12);

            paragraphProperties15.Append(defaultRunProperties15);
            A.EndParagraphRunProperties endParagraphRunProperties15 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph25.Append(paragraphProperties15);
            paragraph25.Append(endParagraphRunProperties15);

            textProperties15.Append(bodyProperties25);
            textProperties15.Append(listStyle25);
            textProperties15.Append(paragraph25);

            legend10.Append(legendPosition10);
            legend10.Append(overlay20);
            legend10.Append(chartShapeProperties20);
            legend10.Append(textProperties15);
            C.PlotVisibleOnly plotVisibleOnly10 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs10 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum10 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart10.Append(title10);
            chart10.Append(autoTitleDeleted10);
            chart10.Append(pivotFormats10);
            chart10.Append(plotArea10);
            chart10.Append(legend10);
            chart10.Append(plotVisibleOnly10);
            chart10.Append(displayBlanksAs10);
            chart10.Append(showDataLabelsOverMaximum10);

            C.ShapeProperties shapeProperties42 = new C.ShapeProperties();

            A.SolidFill solidFill75 = new A.SolidFill();
            A.SchemeColor schemeColor55 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill75.Append(schemeColor55);

            A.Outline outline62 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill76 = new A.SolidFill();

            A.SchemeColor schemeColor56 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation20 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset20 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor56.Append(luminanceModulation20);
            schemeColor56.Append(luminanceOffset20);

            solidFill76.Append(schemeColor56);
            A.Round round8 = new A.Round();

            outline62.Append(solidFill76);
            outline62.Append(round8);
            A.EffectList effectList52 = new A.EffectList();

            shapeProperties42.Append(solidFill75);
            shapeProperties42.Append(outline62);
            shapeProperties42.Append(effectList52);

            C.TextProperties textProperties16 = new C.TextProperties();
            A.BodyProperties bodyProperties26 = new A.BodyProperties();
            A.ListStyle listStyle26 = new A.ListStyle();

            A.Paragraph paragraph26 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties16 = new A.ParagraphProperties();
            A.DefaultRunProperties defaultRunProperties16 = new A.DefaultRunProperties();

            paragraphProperties16.Append(defaultRunProperties16);
            A.EndParagraphRunProperties endParagraphRunProperties16 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph26.Append(paragraphProperties16);
            paragraph26.Append(endParagraphRunProperties16);

            textProperties16.Append(bodyProperties26);
            textProperties16.Append(listStyle26);
            textProperties16.Append(paragraph26);

            C.PrintSettings printSettings10 = new C.PrintSettings();
            C.HeaderFooter headerFooter10 = new C.HeaderFooter();
            C.PageMargins pageMargins17 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup10 = new C.PageSetup();

            printSettings10.Append(headerFooter10);
            printSettings10.Append(pageMargins17);
            printSettings10.Append(pageSetup10);

            C.ChartSpaceExtensionList chartSpaceExtensionList10 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList10.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList10.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension10 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension10.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions10 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter10 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories10 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData10 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries10 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible10 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions10.Append(dropZoneFilter10);
            pivotOptions10.Append(dropZoneCategories10);
            pivotOptions10.Append(dropZoneData10);
            pivotOptions10.Append(dropZoneSeries10);
            pivotOptions10.Append(dropZonesVisible10);

            chartSpaceExtension10.Append(pivotOptions10);

            chartSpaceExtensionList10.Append(chartSpaceExtension10);

            chartSpace10.Append(date190410);
            chartSpace10.Append(editingLanguage10);
            chartSpace10.Append(roundedCorners10);
            chartSpace10.Append(alternateContent21);
            chartSpace10.Append(pivotSource10);
            chartSpace10.Append(chart10);
            chartSpace10.Append(shapeProperties42);
            chartSpace10.Append(textProperties16);
            chartSpace10.Append(printSettings10);
            chartSpace10.Append(chartSpaceExtensionList10);

            chartPart10.ChartSpace = chartSpace10;
        }

        // Generates content of pivotTablePart5.
        private static void GeneratePivotTablePart5Content(PivotTablePart pivotTablePart5)
        {
            PivotTableDefinition pivotTableDefinition9 = new PivotTableDefinition(){ Name = "PivotTable1", CacheId = 1U, ApplyNumberFormats = false, ApplyBorderFormats = false, ApplyFontFormats = false, ApplyPatternFormats = false, ApplyAlignmentFormats = false, ApplyWidthHeightFormats = true, DataCaption = "Values", UpdatedVersion = 5, MinRefreshableVersion = 5, UseAutoFormatting = true, ItemPrintTitles = true, CreatedVersion = 4, Indent = 0U, Outline = true, OutlineData = true, MultipleFieldFilters = false, ChartFormat = 21U };
            Location location5 = new Location(){ Reference = "A1:B5", FirstHeaderRow = 1U, FirstDataRow = 1U, FirstDataColumn = 1U };

            PivotFields pivotFields5 = new PivotFields(){ Count = 7U };

            PivotField pivotField28 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items15 = new Items(){ Count = 15U };
            Item item126 = new Item(){ Index = 0U };
            Item item127 = new Item(){ Index = 1U };
            Item item128 = new Item(){ Index = 2U };
            Item item129 = new Item(){ Index = 3U };
            Item item130 = new Item(){ Index = 4U };
            Item item131 = new Item(){ Index = 5U };
            Item item132 = new Item(){ Index = 6U };
            Item item133 = new Item(){ Index = 7U };
            Item item134 = new Item(){ Index = 8U };
            Item item135 = new Item(){ Index = 9U };
            Item item136 = new Item(){ Index = 10U };
            Item item137 = new Item(){ Index = 11U };
            Item item138 = new Item(){ Index = 12U };
            Item item139 = new Item(){ Index = 13U };
            Item item140 = new Item(){ ItemType = ItemValues.Default };

            items15.Append(item126);
            items15.Append(item127);
            items15.Append(item128);
            items15.Append(item129);
            items15.Append(item130);
            items15.Append(item131);
            items15.Append(item132);
            items15.Append(item133);
            items15.Append(item134);
            items15.Append(item135);
            items15.Append(item136);
            items15.Append(item137);
            items15.Append(item138);
            items15.Append(item139);
            items15.Append(item140);

            pivotField28.Append(items15);

            PivotField pivotField29 = new PivotField(){ Axis = PivotTableAxisValues.AxisRow, ShowAll = false };

            Items items16 = new Items(){ Count = 11U };
            Item item141 = new Item(){ Index = 0U };
            Item item142 = new Item(){ Missing = true, Index = 4U };
            Item item143 = new Item(){ Missing = true, Index = 3U };
            Item item144 = new Item(){ Index = 1U };
            Item item145 = new Item(){ Index = 2U };
            Item item146 = new Item(){ Missing = true, Index = 9U };
            Item item147 = new Item(){ Missing = true, Index = 8U };
            Item item148 = new Item(){ Missing = true, Index = 7U };
            Item item149 = new Item(){ Missing = true, Index = 6U };
            Item item150 = new Item(){ Missing = true, Index = 5U };
            Item item151 = new Item(){ ItemType = ItemValues.Default };

            items16.Append(item141);
            items16.Append(item142);
            items16.Append(item143);
            items16.Append(item144);
            items16.Append(item145);
            items16.Append(item146);
            items16.Append(item147);
            items16.Append(item148);
            items16.Append(item149);
            items16.Append(item150);
            items16.Append(item151);

            pivotField29.Append(items16);
            PivotField pivotField30 = new PivotField(){ DataField = true, ShowAll = false };
            PivotField pivotField31 = new PivotField(){ ShowAll = false };

            PivotField pivotField32 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items17 = new Items(){ Count = 5U };
            Item item152 = new Item(){ Index = 0U };
            Item item153 = new Item(){ Index = 1U };
            Item item154 = new Item(){ Index = 3U };
            Item item155 = new Item(){ Index = 2U };
            Item item156 = new Item(){ ItemType = ItemValues.Default };

            items17.Append(item152);
            items17.Append(item153);
            items17.Append(item154);
            items17.Append(item155);
            items17.Append(item156);

            pivotField32.Append(items17);
            PivotField pivotField33 = new PivotField(){ ShowAll = false };

            PivotField pivotField34 = new PivotField(){ ShowAll = false, DefaultSubtotal = false };

            Items items18 = new Items(){ Count = 5U };
            Item item157 = new Item(){ Index = 0U };
            Item item158 = new Item(){ Index = 1U };
            Item item159 = new Item(){ Index = 2U };
            Item item160 = new Item(){ Index = 3U };
            Item item161 = new Item(){ Index = 4U };

            items18.Append(item157);
            items18.Append(item158);
            items18.Append(item159);
            items18.Append(item160);
            items18.Append(item161);

            pivotField34.Append(items18);

            pivotFields5.Append(pivotField28);
            pivotFields5.Append(pivotField29);
            pivotFields5.Append(pivotField30);
            pivotFields5.Append(pivotField31);
            pivotFields5.Append(pivotField32);
            pivotFields5.Append(pivotField33);
            pivotFields5.Append(pivotField34);

            RowFields rowFields5 = new RowFields(){ Count = 1U };
            Field field5 = new Field(){ Index = 1 };

            rowFields5.Append(field5);

            RowItems rowItems5 = new RowItems(){ Count = 4U };

            RowItem rowItem21 = new RowItem();
            MemberPropertyIndex memberPropertyIndex17 = new MemberPropertyIndex();

            rowItem21.Append(memberPropertyIndex17);

            RowItem rowItem22 = new RowItem();
            MemberPropertyIndex memberPropertyIndex18 = new MemberPropertyIndex(){ Val = 3 };

            rowItem22.Append(memberPropertyIndex18);

            RowItem rowItem23 = new RowItem();
            MemberPropertyIndex memberPropertyIndex19 = new MemberPropertyIndex(){ Val = 4 };

            rowItem23.Append(memberPropertyIndex19);

            RowItem rowItem24 = new RowItem(){ ItemType = ItemValues.Grand };
            MemberPropertyIndex memberPropertyIndex20 = new MemberPropertyIndex();

            rowItem24.Append(memberPropertyIndex20);

            rowItems5.Append(rowItem21);
            rowItems5.Append(rowItem22);
            rowItems5.Append(rowItem23);
            rowItems5.Append(rowItem24);

            ColumnItems columnItems5 = new ColumnItems(){ Count = 1U };
            RowItem rowItem25 = new RowItem();

            columnItems5.Append(rowItem25);

            DataFields dataFields5 = new DataFields(){ Count = 1U };
            DataField dataField5 = new DataField(){ Name = "Sum of Quantity", Field = 2U, BaseField = 0, BaseItem = 0U };

            dataFields5.Append(dataField5);

            ChartFormats chartFormats5 = new ChartFormats(){ Count = 17U };

            ChartFormat chartFormat30 = new ChartFormat(){ Chart = 4U, Format = 0U, Series = true };

            PivotArea pivotArea30 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences30 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference30 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem52 = new FieldItem(){ Val = 0U };

            pivotAreaReference30.Append(fieldItem52);

            pivotAreaReferences30.Append(pivotAreaReference30);

            pivotArea30.Append(pivotAreaReferences30);

            chartFormat30.Append(pivotArea30);

            ChartFormat chartFormat31 = new ChartFormat(){ Chart = 5U, Format = 2U, Series = true };

            PivotArea pivotArea31 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences31 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference31 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem53 = new FieldItem(){ Val = 0U };

            pivotAreaReference31.Append(fieldItem53);

            pivotAreaReferences31.Append(pivotAreaReference31);

            pivotArea31.Append(pivotAreaReferences31);

            chartFormat31.Append(pivotArea31);

            ChartFormat chartFormat32 = new ChartFormat(){ Chart = 6U, Format = 0U, Series = true };

            PivotArea pivotArea32 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences32 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference32 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem54 = new FieldItem(){ Val = 0U };

            pivotAreaReference32.Append(fieldItem54);

            pivotAreaReferences32.Append(pivotAreaReference32);

            pivotArea32.Append(pivotAreaReferences32);

            chartFormat32.Append(pivotArea32);

            ChartFormat chartFormat33 = new ChartFormat(){ Chart = 7U, Format = 14U, Series = true };

            PivotArea pivotArea33 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences33 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference33 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem55 = new FieldItem(){ Val = 0U };

            pivotAreaReference33.Append(fieldItem55);

            pivotAreaReferences33.Append(pivotAreaReference33);

            pivotArea33.Append(pivotAreaReferences33);

            chartFormat33.Append(pivotArea33);

            ChartFormat chartFormat34 = new ChartFormat(){ Chart = 8U, Format = 1U, Series = true };

            PivotArea pivotArea34 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences34 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference34 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem56 = new FieldItem(){ Val = 0U };

            pivotAreaReference34.Append(fieldItem56);

            pivotAreaReferences34.Append(pivotAreaReference34);

            pivotArea34.Append(pivotAreaReferences34);

            chartFormat34.Append(pivotArea34);

            ChartFormat chartFormat35 = new ChartFormat(){ Chart = 9U, Format = 15U, Series = true };

            PivotArea pivotArea35 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences35 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference35 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem57 = new FieldItem(){ Val = 0U };

            pivotAreaReference35.Append(fieldItem57);

            pivotAreaReferences35.Append(pivotAreaReference35);

            pivotArea35.Append(pivotAreaReferences35);

            chartFormat35.Append(pivotArea35);

            ChartFormat chartFormat36 = new ChartFormat(){ Chart = 10U, Format = 2U, Series = true };

            PivotArea pivotArea36 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences36 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference36 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem58 = new FieldItem(){ Val = 0U };

            pivotAreaReference36.Append(fieldItem58);

            pivotAreaReferences36.Append(pivotAreaReference36);

            pivotArea36.Append(pivotAreaReferences36);

            chartFormat36.Append(pivotArea36);

            ChartFormat chartFormat37 = new ChartFormat(){ Chart = 11U, Format = 16U, Series = true };

            PivotArea pivotArea37 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences37 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference37 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem59 = new FieldItem(){ Val = 0U };

            pivotAreaReference37.Append(fieldItem59);

            pivotAreaReferences37.Append(pivotAreaReference37);

            pivotArea37.Append(pivotAreaReferences37);

            chartFormat37.Append(pivotArea37);

            ChartFormat chartFormat38 = new ChartFormat(){ Chart = 12U, Format = 3U, Series = true };

            PivotArea pivotArea38 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences38 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference38 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem60 = new FieldItem(){ Val = 0U };

            pivotAreaReference38.Append(fieldItem60);

            pivotAreaReferences38.Append(pivotAreaReference38);

            pivotArea38.Append(pivotAreaReferences38);

            chartFormat38.Append(pivotArea38);

            ChartFormat chartFormat39 = new ChartFormat(){ Chart = 13U, Format = 17U, Series = true };

            PivotArea pivotArea39 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences39 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference39 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem61 = new FieldItem(){ Val = 0U };

            pivotAreaReference39.Append(fieldItem61);

            pivotAreaReferences39.Append(pivotAreaReference39);

            pivotArea39.Append(pivotAreaReferences39);

            chartFormat39.Append(pivotArea39);

            ChartFormat chartFormat40 = new ChartFormat(){ Chart = 14U, Format = 4U, Series = true };

            PivotArea pivotArea40 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences40 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference40 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem62 = new FieldItem(){ Val = 0U };

            pivotAreaReference40.Append(fieldItem62);

            pivotAreaReferences40.Append(pivotAreaReference40);

            pivotArea40.Append(pivotAreaReferences40);

            chartFormat40.Append(pivotArea40);

            ChartFormat chartFormat41 = new ChartFormat(){ Chart = 15U, Format = 18U, Series = true };

            PivotArea pivotArea41 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences41 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference41 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem63 = new FieldItem(){ Val = 0U };

            pivotAreaReference41.Append(fieldItem63);

            pivotAreaReferences41.Append(pivotAreaReference41);

            pivotArea41.Append(pivotAreaReferences41);

            chartFormat41.Append(pivotArea41);

            ChartFormat chartFormat42 = new ChartFormat(){ Chart = 16U, Format = 5U, Series = true };

            PivotArea pivotArea42 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences42 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference42 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem64 = new FieldItem(){ Val = 0U };

            pivotAreaReference42.Append(fieldItem64);

            pivotAreaReferences42.Append(pivotAreaReference42);

            pivotArea42.Append(pivotAreaReferences42);

            chartFormat42.Append(pivotArea42);

            ChartFormat chartFormat43 = new ChartFormat(){ Chart = 17U, Format = 19U, Series = true };

            PivotArea pivotArea43 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences43 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference43 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem65 = new FieldItem(){ Val = 0U };

            pivotAreaReference43.Append(fieldItem65);

            pivotAreaReferences43.Append(pivotAreaReference43);

            pivotArea43.Append(pivotAreaReferences43);

            chartFormat43.Append(pivotArea43);

            ChartFormat chartFormat44 = new ChartFormat(){ Chart = 18U, Format = 6U, Series = true };

            PivotArea pivotArea44 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences44 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference44 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem66 = new FieldItem(){ Val = 0U };

            pivotAreaReference44.Append(fieldItem66);

            pivotAreaReferences44.Append(pivotAreaReference44);

            pivotArea44.Append(pivotAreaReferences44);

            chartFormat44.Append(pivotArea44);

            ChartFormat chartFormat45 = new ChartFormat(){ Chart = 19U, Format = 20U, Series = true };

            PivotArea pivotArea45 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences45 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference45 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem67 = new FieldItem(){ Val = 0U };

            pivotAreaReference45.Append(fieldItem67);

            pivotAreaReferences45.Append(pivotAreaReference45);

            pivotArea45.Append(pivotAreaReferences45);

            chartFormat45.Append(pivotArea45);

            ChartFormat chartFormat46 = new ChartFormat(){ Chart = 20U, Format = 7U, Series = true };

            PivotArea pivotArea46 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences46 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference46 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem68 = new FieldItem(){ Val = 0U };

            pivotAreaReference46.Append(fieldItem68);

            pivotAreaReferences46.Append(pivotAreaReference46);

            pivotArea46.Append(pivotAreaReferences46);

            chartFormat46.Append(pivotArea46);

            chartFormats5.Append(chartFormat30);
            chartFormats5.Append(chartFormat31);
            chartFormats5.Append(chartFormat32);
            chartFormats5.Append(chartFormat33);
            chartFormats5.Append(chartFormat34);
            chartFormats5.Append(chartFormat35);
            chartFormats5.Append(chartFormat36);
            chartFormats5.Append(chartFormat37);
            chartFormats5.Append(chartFormat38);
            chartFormats5.Append(chartFormat39);
            chartFormats5.Append(chartFormat40);
            chartFormats5.Append(chartFormat41);
            chartFormats5.Append(chartFormat42);
            chartFormats5.Append(chartFormat43);
            chartFormats5.Append(chartFormat44);
            chartFormats5.Append(chartFormat45);
            chartFormats5.Append(chartFormat46);
            PivotTableStyle pivotTableStyle5 = new PivotTableStyle(){ Name = "PivotStyleLight16", ShowRowHeaders = true, ShowColumnHeaders = true, ShowRowStripes = false, ShowColumnStripes = false, ShowLastColumn = true };

            PivotTableDefinitionExtensionList pivotTableDefinitionExtensionList5 = new PivotTableDefinitionExtensionList();

            PivotTableDefinitionExtension pivotTableDefinitionExtension5 = new PivotTableDefinitionExtension(){ Uri = "{962EF5D1-5CA2-4c93-8EF4-DBF5C05439D2}" };
            pivotTableDefinitionExtension5.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");

            X14.PivotTableDefinition pivotTableDefinition10 = new X14.PivotTableDefinition(){ HideValuesRow = true };
            pivotTableDefinition10.AddNamespaceDeclaration("xm", "http://schemas.microsoft.com/office/excel/2006/main");

            pivotTableDefinitionExtension5.Append(pivotTableDefinition10);

            pivotTableDefinitionExtensionList5.Append(pivotTableDefinitionExtension5);

            pivotTableDefinition9.Append(location5);
            pivotTableDefinition9.Append(pivotFields5);
            pivotTableDefinition9.Append(rowFields5);
            pivotTableDefinition9.Append(rowItems5);
            pivotTableDefinition9.Append(columnItems5);
            pivotTableDefinition9.Append(dataFields5);
            pivotTableDefinition9.Append(chartFormats5);
            pivotTableDefinition9.Append(pivotTableStyle5);
            pivotTableDefinition9.Append(pivotTableDefinitionExtensionList5);

            pivotTablePart5.PivotTableDefinition = pivotTableDefinition9;
        }

        // Generates content of workbookStylesPart1.
        private static void GenerateWorkbookStylesPart1Content(WorkbookStylesPart workbookStylesPart1)
        {
            Stylesheet stylesheet1 = new Stylesheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            stylesheet1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            stylesheet1.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");

            NumberingFormats numberingFormats1 = new NumberingFormats(){ Count = 1U };
            NumberingFormat numberingFormat11 = new NumberingFormat(){ NumberFormatId = 164U, FormatCode = "\"¥\"#,##0" };

            numberingFormats1.Append(numberingFormat11);

            Fonts fonts1 = new Fonts(){ Count = 2U };

            Font font1 = new Font();
            FontSize fontSize1 = new FontSize(){ Val = 11D };
            Color color1 = new Color(){ Theme = 1U };
            FontName fontName1 = new FontName(){ Val = "Calibri" };
            FontFamilyNumbering fontFamilyNumbering1 = new FontFamilyNumbering(){ Val = 2 };
            FontScheme fontScheme1 = new FontScheme(){ Val = FontSchemeValues.Minor };

            font1.Append(fontSize1);
            font1.Append(color1);
            font1.Append(fontName1);
            font1.Append(fontFamilyNumbering1);
            font1.Append(fontScheme1);

            Font font2 = new Font();
            FontSize fontSize2 = new FontSize(){ Val = 6D };
            FontName fontName2 = new FontName(){ Val = "Calibri" };
            FontFamilyNumbering fontFamilyNumbering2 = new FontFamilyNumbering(){ Val = 3 };
            FontCharSet fontCharSet1 = new FontCharSet(){ Val = 128 };
            FontScheme fontScheme2 = new FontScheme(){ Val = FontSchemeValues.Minor };

            font2.Append(fontSize2);
            font2.Append(fontName2);
            font2.Append(fontFamilyNumbering2);
            font2.Append(fontCharSet1);
            font2.Append(fontScheme2);

            fonts1.Append(font1);
            fonts1.Append(font2);

            Fills fills1 = new Fills(){ Count = 2U };

            Fill fill1 = new Fill();
            PatternFill patternFill1 = new PatternFill(){ PatternType = PatternValues.None };

            fill1.Append(patternFill1);

            Fill fill2 = new Fill();
            PatternFill patternFill2 = new PatternFill(){ PatternType = PatternValues.Gray125 };

            fill2.Append(patternFill2);

            fills1.Append(fill1);
            fills1.Append(fill2);

            Borders borders1 = new Borders(){ Count = 1U };

            Border border1 = new Border();
            LeftBorder leftBorder1 = new LeftBorder();
            RightBorder rightBorder1 = new RightBorder();
            TopBorder topBorder1 = new TopBorder();
            BottomBorder bottomBorder1 = new BottomBorder();
            DiagonalBorder diagonalBorder1 = new DiagonalBorder();

            border1.Append(leftBorder1);
            border1.Append(rightBorder1);
            border1.Append(topBorder1);
            border1.Append(bottomBorder1);
            border1.Append(diagonalBorder1);

            borders1.Append(border1);

            CellStyleFormats cellStyleFormats1 = new CellStyleFormats(){ Count = 1U };
            CellFormat cellFormat1 = new CellFormat(){ NumberFormatId = 0U, FontId = 0U, FillId = 0U, BorderId = 0U };

            cellStyleFormats1.Append(cellFormat1);

            CellFormats cellFormats1 = new CellFormats(){ Count = 8U };
            CellFormat cellFormat2 = new CellFormat(){ NumberFormatId = 0U, FontId = 0U, FillId = 0U, BorderId = 0U, FormatId = 0U };

            CellFormat cellFormat3 = new CellFormat(){ NumberFormatId = 0U, FontId = 0U, FillId = 0U, BorderId = 0U, FormatId = 0U, ApplyAlignment = true };
            Alignment alignment1 = new Alignment(){ Vertical = VerticalAlignmentValues.Center };

            cellFormat3.Append(alignment1);

            CellFormat cellFormat4 = new CellFormat(){ NumberFormatId = 0U, FontId = 0U, FillId = 0U, BorderId = 0U, FormatId = 0U, ApplyAlignment = true };
            Alignment alignment2 = new Alignment(){ Horizontal = HorizontalAlignmentValues.Center, Vertical = VerticalAlignmentValues.Center };

            cellFormat4.Append(alignment2);

            CellFormat cellFormat5 = new CellFormat(){ NumberFormatId = 14U, FontId = 0U, FillId = 0U, BorderId = 0U, FormatId = 0U, ApplyNumberFormat = true, ApplyAlignment = true };
            Alignment alignment3 = new Alignment(){ Vertical = VerticalAlignmentValues.Center };

            cellFormat5.Append(alignment3);

            CellFormat cellFormat6 = new CellFormat(){ NumberFormatId = 164U, FontId = 0U, FillId = 0U, BorderId = 0U, FormatId = 0U, ApplyNumberFormat = true, ApplyAlignment = true };
            Alignment alignment4 = new Alignment(){ Vertical = VerticalAlignmentValues.Center };

            cellFormat6.Append(alignment4);
            CellFormat cellFormat7 = new CellFormat(){ NumberFormatId = 0U, FontId = 0U, FillId = 0U, BorderId = 0U, FormatId = 0U, PivotButton = true };

            CellFormat cellFormat8 = new CellFormat(){ NumberFormatId = 0U, FontId = 0U, FillId = 0U, BorderId = 0U, FormatId = 0U, ApplyAlignment = true };
            Alignment alignment5 = new Alignment(){ Horizontal = HorizontalAlignmentValues.Left };

            cellFormat8.Append(alignment5);
            CellFormat cellFormat9 = new CellFormat(){ NumberFormatId = 0U, FontId = 0U, FillId = 0U, BorderId = 0U, FormatId = 0U, ApplyNumberFormat = true };

            cellFormats1.Append(cellFormat2);
            cellFormats1.Append(cellFormat3);
            cellFormats1.Append(cellFormat4);
            cellFormats1.Append(cellFormat5);
            cellFormats1.Append(cellFormat6);
            cellFormats1.Append(cellFormat7);
            cellFormats1.Append(cellFormat8);
            cellFormats1.Append(cellFormat9);

            CellStyles cellStyles1 = new CellStyles(){ Count = 1U };
            CellStyle cellStyle1 = new CellStyle(){ Name = "Normal", FormatId = 0U, BuiltinId = 0U };

            cellStyles1.Append(cellStyle1);

            DifferentialFormats differentialFormats1 = new DifferentialFormats(){ Count = 14U };

            DifferentialFormat differentialFormat1 = new DifferentialFormat();
            Alignment alignment6 = new Alignment(){ Horizontal = HorizontalAlignmentValues.Center, Vertical = VerticalAlignmentValues.Center, TextRotation = 0U, WrapText = false, Indent = 0U, JustifyLastLine = false, ShrinkToFit = false, ReadingOrder = 0U };

            differentialFormat1.Append(alignment6);

            DifferentialFormat differentialFormat2 = new DifferentialFormat();
            NumberingFormat numberingFormat12 = new NumberingFormat(){ NumberFormatId = 164U, FormatCode = "\"¥\"#,##0" };

            differentialFormat2.Append(numberingFormat12);

            DifferentialFormat differentialFormat3 = new DifferentialFormat();
            Alignment alignment7 = new Alignment(){ Horizontal = HorizontalAlignmentValues.Center, Vertical = VerticalAlignmentValues.Center, TextRotation = 0U, WrapText = false, Indent = 0U, JustifyLastLine = false, ShrinkToFit = false, ReadingOrder = 0U };

            differentialFormat3.Append(alignment7);

            DifferentialFormat differentialFormat4 = new DifferentialFormat();
            NumberingFormat numberingFormat13 = new NumberingFormat(){ NumberFormatId = 0U, FormatCode = "General" };

            differentialFormat4.Append(numberingFormat13);

            DifferentialFormat differentialFormat5 = new DifferentialFormat();
            NumberingFormat numberingFormat14 = new NumberingFormat(){ NumberFormatId = 165U, FormatCode = "yyyy/mm/dd" };

            differentialFormat5.Append(numberingFormat14);

            DifferentialFormat differentialFormat6 = new DifferentialFormat();
            NumberingFormat numberingFormat15 = new NumberingFormat(){ NumberFormatId = 0U, FormatCode = "General" };

            differentialFormat6.Append(numberingFormat15);

            DifferentialFormat differentialFormat7 = new DifferentialFormat();
            NumberingFormat numberingFormat16 = new NumberingFormat(){ NumberFormatId = 0U, FormatCode = "General" };

            differentialFormat7.Append(numberingFormat16);

            DifferentialFormat differentialFormat8 = new DifferentialFormat();
            NumberingFormat numberingFormat17 = new NumberingFormat(){ NumberFormatId = 0U, FormatCode = "General" };

            differentialFormat8.Append(numberingFormat17);

            DifferentialFormat differentialFormat9 = new DifferentialFormat();
            NumberingFormat numberingFormat18 = new NumberingFormat(){ NumberFormatId = 165U, FormatCode = "yyyy/mm/dd" };

            differentialFormat9.Append(numberingFormat18);

            DifferentialFormat differentialFormat10 = new DifferentialFormat();
            Alignment alignment8 = new Alignment(){ Horizontal = HorizontalAlignmentValues.Center, Vertical = VerticalAlignmentValues.Center, TextRotation = 0U, WrapText = false, Indent = 0U, JustifyLastLine = false, ShrinkToFit = false, ReadingOrder = 0U };

            differentialFormat10.Append(alignment8);

            DifferentialFormat differentialFormat11 = new DifferentialFormat();
            NumberingFormat numberingFormat19 = new NumberingFormat(){ NumberFormatId = 164U, FormatCode = "\"¥\"#,##0" };

            differentialFormat11.Append(numberingFormat19);

            DifferentialFormat differentialFormat12 = new DifferentialFormat();
            Alignment alignment9 = new Alignment(){ Horizontal = HorizontalAlignmentValues.Center, Vertical = VerticalAlignmentValues.Center, TextRotation = 0U, WrapText = false, Indent = 0U, JustifyLastLine = false, ShrinkToFit = false, ReadingOrder = 0U };

            differentialFormat12.Append(alignment9);

            DifferentialFormat differentialFormat13 = new DifferentialFormat();
            NumberingFormat numberingFormat20 = new NumberingFormat(){ NumberFormatId = 165U, FormatCode = "yyyy/mm/dd" };

            differentialFormat13.Append(numberingFormat20);

            DifferentialFormat differentialFormat14 = new DifferentialFormat();
            NumberingFormat numberingFormat21 = new NumberingFormat(){ NumberFormatId = 165U, FormatCode = "yyyy/mm/dd" };

            differentialFormat14.Append(numberingFormat21);

            differentialFormats1.Append(differentialFormat1);
            differentialFormats1.Append(differentialFormat2);
            differentialFormats1.Append(differentialFormat3);
            differentialFormats1.Append(differentialFormat4);
            differentialFormats1.Append(differentialFormat5);
            differentialFormats1.Append(differentialFormat6);
            differentialFormats1.Append(differentialFormat7);
            differentialFormats1.Append(differentialFormat8);
            differentialFormats1.Append(differentialFormat9);
            differentialFormats1.Append(differentialFormat10);
            differentialFormats1.Append(differentialFormat11);
            differentialFormats1.Append(differentialFormat12);
            differentialFormats1.Append(differentialFormat13);
            differentialFormats1.Append(differentialFormat14);
            TableStyles tableStyles1 = new TableStyles(){ Count = 0U, DefaultTableStyle = "TableStyleMedium2", DefaultPivotStyle = "PivotStyleLight16" };

            StylesheetExtensionList stylesheetExtensionList1 = new StylesheetExtensionList();

            StylesheetExtension stylesheetExtension1 = new StylesheetExtension(){ Uri = "{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}" };
            stylesheetExtension1.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");
            X14.SlicerStyles slicerStyles1 = new X14.SlicerStyles(){ DefaultSlicerStyle = "SlicerStyleLight1" };

            stylesheetExtension1.Append(slicerStyles1);

            StylesheetExtension stylesheetExtension2 = new StylesheetExtension(){ Uri = "{9260A510-F301-46a8-8635-F512D64BE5F5}" };
            stylesheetExtension2.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");
            X15.TimelineStyles timelineStyles1 = new X15.TimelineStyles(){ DefaultTimelineStyle = "TimeSlicerStyleLight1" };

            stylesheetExtension2.Append(timelineStyles1);

            stylesheetExtensionList1.Append(stylesheetExtension1);
            stylesheetExtensionList1.Append(stylesheetExtension2);

            stylesheet1.Append(numberingFormats1);
            stylesheet1.Append(fonts1);
            stylesheet1.Append(fills1);
            stylesheet1.Append(borders1);
            stylesheet1.Append(cellStyleFormats1);
            stylesheet1.Append(cellFormats1);
            stylesheet1.Append(cellStyles1);
            stylesheet1.Append(differentialFormats1);
            stylesheet1.Append(tableStyles1);
            stylesheet1.Append(stylesheetExtensionList1);

            workbookStylesPart1.Stylesheet = stylesheet1;
        }

        // Generates content of worksheetPart8.
        private static void GenerateWorksheetPart8Content(WorksheetPart worksheetPart8)
        {
            Worksheet worksheet8 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet8.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet8.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet8.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension8 = new SheetDimension(){ Reference = "A1:B5" };

            SheetViews sheetViews8 = new SheetViews();
            SheetView sheetView8 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews8.Append(sheetView8);
            SheetFormatProperties sheetFormatProperties8 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns8 = new Columns();
            Column column48 = new Column(){ Min = 1U, Max = 1U, Width = 14.140625D, BestFit = true, CustomWidth = true };
            Column column49 = new Column(){ Min = 2U, Max = 2U, Width = 17.42578125D, CustomWidth = true };
            Column column50 = new Column(){ Min = 3U, Max = 3U, Width = 12.42578125D, CustomWidth = true };
            Column column51 = new Column(){ Min = 4U, Max = 11U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column52 = new Column(){ Min = 12U, Max = 12U, Width = 13D, CustomWidth = true };
            Column column53 = new Column(){ Min = 13U, Max = 20U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column54 = new Column(){ Min = 21U, Max = 23U, Width = 20.42578125D, BestFit = true, CustomWidth = true };

            columns8.Append(column48);
            columns8.Append(column49);
            columns8.Append(column50);
            columns8.Append(column51);
            columns8.Append(column52);
            columns8.Append(column53);
            columns8.Append(column54);

            SheetData sheetData8 = new SheetData();

            Row row48 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell183 = new Cell(){ CellReference = "A1", StyleIndex = 5U, DataType = CellValues.SharedString };
            CellValue cellValue183 = new CellValue();
            cellValue183.Text = "29";

            cell183.Append(cellValue183);

            Cell cell184 = new Cell(){ CellReference = "B1", DataType = CellValues.SharedString };
            CellValue cellValue184 = new CellValue();
            cellValue184.Text = "28";

            cell184.Append(cellValue184);

            row48.Append(cell183);
            row48.Append(cell184);

            Row row49 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell185 = new Cell(){ CellReference = "A2", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue185 = new CellValue();
            cellValue185.Text = "6";

            cell185.Append(cellValue185);

            Cell cell186 = new Cell(){ CellReference = "B2", StyleIndex = 7U };
            CellValue cellValue186 = new CellValue();
            cellValue186.Text = "19";

            cell186.Append(cellValue186);

            row49.Append(cell185);
            row49.Append(cell186);

            Row row50 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell187 = new Cell(){ CellReference = "A3", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue187 = new CellValue();
            cellValue187.Text = "8";

            cell187.Append(cellValue187);

            Cell cell188 = new Cell(){ CellReference = "B3", StyleIndex = 7U };
            CellValue cellValue188 = new CellValue();
            cellValue188.Text = "13";

            cell188.Append(cellValue188);

            row50.Append(cell187);
            row50.Append(cell188);

            Row row51 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell189 = new Cell(){ CellReference = "A4", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue189 = new CellValue();
            cellValue189.Text = "11";

            cell189.Append(cellValue189);

            Cell cell190 = new Cell(){ CellReference = "B4", StyleIndex = 7U };
            CellValue cellValue190 = new CellValue();
            cellValue190.Text = "33";

            cell190.Append(cellValue190);

            row51.Append(cell189);
            row51.Append(cell190);

            Row row52 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell191 = new Cell(){ CellReference = "A5", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue191 = new CellValue();
            cellValue191.Text = "30";

            cell191.Append(cellValue191);

            Cell cell192 = new Cell(){ CellReference = "B5", StyleIndex = 7U };
            CellValue cellValue192 = new CellValue();
            cellValue192.Text = "65";

            cell192.Append(cellValue192);

            row52.Append(cell191);
            row52.Append(cell192);

            sheetData8.Append(row48);
            sheetData8.Append(row49);
            sheetData8.Append(row50);
            sheetData8.Append(row51);
            sheetData8.Append(row52);
            PhoneticProperties phoneticProperties14 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins18 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            S.Drawing drawing6 = new S.Drawing(){ Id = "rId2" };

            WorksheetExtensionList worksheetExtensionList6 = new WorksheetExtensionList();

            WorksheetExtension worksheetExtension6 = new WorksheetExtension(){ Uri = "{7E03D99C-DC04-49d9-9315-930204A7B6E9}" };
            worksheetExtension6.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineReferences timelineReferences6 = new X15.TimelineReferences();
            X15.TimelineReference timelineReference6 = new X15.TimelineReference(){ Id = "rId3" };

            timelineReferences6.Append(timelineReference6);

            worksheetExtension6.Append(timelineReferences6);

            worksheetExtensionList6.Append(worksheetExtension6);

            worksheet8.Append(sheetDimension8);
            worksheet8.Append(sheetViews8);
            worksheet8.Append(sheetFormatProperties8);
            worksheet8.Append(columns8);
            worksheet8.Append(sheetData8);
            worksheet8.Append(phoneticProperties14);
            worksheet8.Append(pageMargins18);
            worksheet8.Append(drawing6);
            worksheet8.Append(worksheetExtensionList6);

            worksheetPart8.Worksheet = worksheet8;
        }

        // Generates content of timeLinePart6.
        private static void GenerateTimeLinePart6Content(TimeLinePart timeLinePart6)
        {
            X15.Timelines timelines6 = new X15.Timelines(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x" }  };
            timelines6.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            timelines6.AddNamespaceDeclaration("x", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");
            X15.Timeline timeline11 = new X15.Timeline(){ Name = "DeliveryDate 4", Cache = "NativeTimeline_DeliveryDate1", Caption = "Caption1", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline12 = new X15.Timeline(){ Name = "DeliveryDate 5", Cache = "NativeTimeline_DeliveryDate1", Caption = "Caption2", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelines6.Append(timeline11);
            timelines6.Append(timeline12);

            timeLinePart6.Timelines = timelines6;
        }

        // Generates content of drawingsPart6.
        private static void GenerateDrawingsPart6Content(DrawingsPart drawingsPart6)
        {
            Xdr.WorksheetDrawing worksheetDrawing6 = new Xdr.WorksheetDrawing();
            worksheetDrawing6.AddNamespaceDeclaration("xdr", "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing");
            worksheetDrawing6.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            Xdr.TwoCellAnchor twoCellAnchor21 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker21 = new Xdr.FromMarker();
            Xdr.ColumnId columnId41 = new Xdr.ColumnId();
            columnId41.Text = "2";
            Xdr.ColumnOffset columnOffset41 = new Xdr.ColumnOffset();
            columnOffset41.Text = "185737";
            Xdr.RowId rowId41 = new Xdr.RowId();
            rowId41.Text = "0";
            Xdr.RowOffset rowOffset41 = new Xdr.RowOffset();
            rowOffset41.Text = "0";

            fromMarker21.Append(columnId41);
            fromMarker21.Append(columnOffset41);
            fromMarker21.Append(rowId41);
            fromMarker21.Append(rowOffset41);

            Xdr.ToMarker toMarker21 = new Xdr.ToMarker();
            Xdr.ColumnId columnId42 = new Xdr.ColumnId();
            columnId42.Text = "9";
            Xdr.ColumnOffset columnOffset42 = new Xdr.ColumnOffset();
            columnOffset42.Text = "90487";
            Xdr.RowId rowId42 = new Xdr.RowId();
            rowId42.Text = "14";
            Xdr.RowOffset rowOffset42 = new Xdr.RowOffset();
            rowOffset42.Text = "76200";

            toMarker21.Append(columnId42);
            toMarker21.Append(columnOffset42);
            toMarker21.Append(rowId42);
            toMarker21.Append(rowOffset42);

            Xdr.GraphicFrame graphicFrame21 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties21 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties31 = new Xdr.NonVisualDrawingProperties(){ Id = 2U, Name = "Chart 1" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties21 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks9 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties21.Append(graphicFrameLocks9);

            nonVisualGraphicFrameProperties21.Append(nonVisualDrawingProperties31);
            nonVisualGraphicFrameProperties21.Append(nonVisualGraphicFrameDrawingProperties21);

            Xdr.Transform transform21 = new Xdr.Transform();
            A.Offset offset31 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents31 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform21.Append(offset31);
            transform21.Append(extents31);

            A.Graphic graphic21 = new A.Graphic();

            A.GraphicData graphicData21 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference11 = new C.ChartReference(){ Id = "rId1" };
            chartReference11.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference11.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData21.Append(chartReference11);

            graphic21.Append(graphicData21);

            graphicFrame21.Append(nonVisualGraphicFrameProperties21);
            graphicFrame21.Append(transform21);
            graphicFrame21.Append(graphic21);
            Xdr.ClientData clientData21 = new Xdr.ClientData();

            twoCellAnchor21.Append(fromMarker21);
            twoCellAnchor21.Append(toMarker21);
            twoCellAnchor21.Append(graphicFrame21);
            twoCellAnchor21.Append(clientData21);

            Xdr.TwoCellAnchor twoCellAnchor22 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker22 = new Xdr.FromMarker();
            Xdr.ColumnId columnId43 = new Xdr.ColumnId();
            columnId43.Text = "2";
            Xdr.ColumnOffset columnOffset43 = new Xdr.ColumnOffset();
            columnOffset43.Text = "200025";
            Xdr.RowId rowId43 = new Xdr.RowId();
            rowId43.Text = "14";
            Xdr.RowOffset rowOffset43 = new Xdr.RowOffset();
            rowOffset43.Text = "147637";

            fromMarker22.Append(columnId43);
            fromMarker22.Append(columnOffset43);
            fromMarker22.Append(rowId43);
            fromMarker22.Append(rowOffset43);

            Xdr.ToMarker toMarker22 = new Xdr.ToMarker();
            Xdr.ColumnId columnId44 = new Xdr.ColumnId();
            columnId44.Text = "7";
            Xdr.ColumnOffset columnOffset44 = new Xdr.ColumnOffset();
            columnOffset44.Text = "476250";
            Xdr.RowId rowId44 = new Xdr.RowId();
            rowId44.Text = "29";
            Xdr.RowOffset rowOffset44 = new Xdr.RowOffset();
            rowOffset44.Text = "33337";

            toMarker22.Append(columnId44);
            toMarker22.Append(columnOffset44);
            toMarker22.Append(rowId44);
            toMarker22.Append(rowOffset44);

            Xdr.GraphicFrame graphicFrame22 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties22 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties32 = new Xdr.NonVisualDrawingProperties(){ Id = 3U, Name = "グラフ 2" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties22 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks10 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties22.Append(graphicFrameLocks10);

            nonVisualGraphicFrameProperties22.Append(nonVisualDrawingProperties32);
            nonVisualGraphicFrameProperties22.Append(nonVisualGraphicFrameDrawingProperties22);

            Xdr.Transform transform22 = new Xdr.Transform();
            A.Offset offset32 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents32 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform22.Append(offset32);
            transform22.Append(extents32);

            A.Graphic graphic22 = new A.Graphic();

            A.GraphicData graphicData22 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference12 = new C.ChartReference(){ Id = "rId2" };
            chartReference12.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference12.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData22.Append(chartReference12);

            graphic22.Append(graphicData22);

            graphicFrame22.Append(nonVisualGraphicFrameProperties22);
            graphicFrame22.Append(transform22);
            graphicFrame22.Append(graphic22);
            Xdr.ClientData clientData22 = new Xdr.ClientData();

            twoCellAnchor22.Append(fromMarker22);
            twoCellAnchor22.Append(toMarker22);
            twoCellAnchor22.Append(graphicFrame22);
            twoCellAnchor22.Append(clientData22);

            Xdr.TwoCellAnchor twoCellAnchor23 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker23 = new Xdr.FromMarker();
            Xdr.ColumnId columnId45 = new Xdr.ColumnId();
            columnId45.Text = "10";
            Xdr.ColumnOffset columnOffset45 = new Xdr.ColumnOffset();
            columnOffset45.Text = "38100";
            Xdr.RowId rowId45 = new Xdr.RowId();
            rowId45.Text = "1";
            Xdr.RowOffset rowOffset45 = new Xdr.RowOffset();
            rowOffset45.Text = "0";

            fromMarker23.Append(columnId45);
            fromMarker23.Append(columnOffset45);
            fromMarker23.Append(rowId45);
            fromMarker23.Append(rowOffset45);

            Xdr.ToMarker toMarker23 = new Xdr.ToMarker();
            Xdr.ColumnId columnId46 = new Xdr.ColumnId();
            columnId46.Text = "13";
            Xdr.ColumnOffset columnOffset46 = new Xdr.ColumnOffset();
            columnOffset46.Text = "771525";
            Xdr.RowId rowId46 = new Xdr.RowId();
            rowId46.Text = "7";
            Xdr.RowOffset rowOffset46 = new Xdr.RowOffset();
            rowOffset46.Text = "47625";

            toMarker23.Append(columnId46);
            toMarker23.Append(columnOffset46);
            toMarker23.Append(rowId46);
            toMarker23.Append(rowOffset46);

            AlternateContent alternateContent22 = new AlternateContent();
            alternateContent22.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent22.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice22 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame23 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties23 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties33 = new Xdr.NonVisualDrawingProperties(){ Id = 4U, Name = "DeliveryDate 4" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties23 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties23.Append(nonVisualDrawingProperties33);
            nonVisualGraphicFrameProperties23.Append(nonVisualGraphicFrameDrawingProperties23);

            Xdr.Transform transform23 = new Xdr.Transform();
            A.Offset offset33 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents33 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform23.Append(offset33);
            transform23.Append(extents33);

            A.Graphic graphic23 = new A.Graphic();

            A.GraphicData graphicData23 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer11 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 4" };
            timeSlicer11.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData23.Append(timeSlicer11);

            graphic23.Append(graphicData23);

            graphicFrame23.Append(nonVisualGraphicFrameProperties23);
            graphicFrame23.Append(transform23);
            graphicFrame23.Append(graphic23);

            alternateContentChoice22.Append(graphicFrame23);

            AlternateContentFallback alternateContentFallback21 = new AlternateContentFallback();
            alternateContentFallback21.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback21.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape11 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties11 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties34 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties11 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks11 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties11.Append(shapeLocks11);

            nonVisualShapeProperties11.Append(nonVisualDrawingProperties34);
            nonVisualShapeProperties11.Append(nonVisualShapeDrawingProperties11);

            Xdr.ShapeProperties shapeProperties43 = new Xdr.ShapeProperties();

            A.Transform2D transform2D11 = new A.Transform2D();
            A.Offset offset34 = new A.Offset(){ X = 8639175L, Y = 190500L };
            A.Extents extents34 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D11.Append(offset34);
            transform2D11.Append(extents34);

            A.PresetGeometry presetGeometry11 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList11 = new A.AdjustValueList();

            presetGeometry11.Append(adjustValueList11);

            A.SolidFill solidFill77 = new A.SolidFill();
            A.PresetColor presetColor21 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill77.Append(presetColor21);

            A.Outline outline63 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill78 = new A.SolidFill();
            A.PresetColor presetColor22 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill78.Append(presetColor22);

            outline63.Append(solidFill78);

            shapeProperties43.Append(transform2D11);
            shapeProperties43.Append(presetGeometry11);
            shapeProperties43.Append(solidFill77);
            shapeProperties43.Append(outline63);

            Xdr.TextBody textBody11 = new Xdr.TextBody();
            A.BodyProperties bodyProperties27 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle27 = new A.ListStyle();

            A.Paragraph paragraph27 = new A.Paragraph();

            A.Run run11 = new A.Run();
            A.RunProperties runProperties11 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text49 = new A.Text();
            text49.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run11.Append(runProperties11);
            run11.Append(text49);

            paragraph27.Append(run11);

            textBody11.Append(bodyProperties27);
            textBody11.Append(listStyle27);
            textBody11.Append(paragraph27);

            shape11.Append(nonVisualShapeProperties11);
            shape11.Append(shapeProperties43);
            shape11.Append(textBody11);

            alternateContentFallback21.Append(shape11);

            alternateContent22.Append(alternateContentChoice22);
            alternateContent22.Append(alternateContentFallback21);
            Xdr.ClientData clientData23 = new Xdr.ClientData();

            twoCellAnchor23.Append(fromMarker23);
            twoCellAnchor23.Append(toMarker23);
            twoCellAnchor23.Append(alternateContent22);
            twoCellAnchor23.Append(clientData23);

            Xdr.TwoCellAnchor twoCellAnchor24 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker24 = new Xdr.FromMarker();
            Xdr.ColumnId columnId47 = new Xdr.ColumnId();
            columnId47.Text = "10";
            Xdr.ColumnOffset columnOffset47 = new Xdr.ColumnOffset();
            columnOffset47.Text = "47625";
            Xdr.RowId rowId47 = new Xdr.RowId();
            rowId47.Text = "8";
            Xdr.RowOffset rowOffset47 = new Xdr.RowOffset();
            rowOffset47.Text = "85725";

            fromMarker24.Append(columnId47);
            fromMarker24.Append(columnOffset47);
            fromMarker24.Append(rowId47);
            fromMarker24.Append(rowOffset47);

            Xdr.ToMarker toMarker24 = new Xdr.ToMarker();
            Xdr.ColumnId columnId48 = new Xdr.ColumnId();
            columnId48.Text = "13";
            Xdr.ColumnOffset columnOffset48 = new Xdr.ColumnOffset();
            columnOffset48.Text = "781050";
            Xdr.RowId rowId48 = new Xdr.RowId();
            rowId48.Text = "14";
            Xdr.RowOffset rowOffset48 = new Xdr.RowOffset();
            rowOffset48.Text = "133350";

            toMarker24.Append(columnId48);
            toMarker24.Append(columnOffset48);
            toMarker24.Append(rowId48);
            toMarker24.Append(rowOffset48);

            AlternateContent alternateContent23 = new AlternateContent();
            alternateContent23.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent23.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice23 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame24 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties24 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties35 = new Xdr.NonVisualDrawingProperties(){ Id = 5U, Name = "DeliveryDate 5" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties24 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties24.Append(nonVisualDrawingProperties35);
            nonVisualGraphicFrameProperties24.Append(nonVisualGraphicFrameDrawingProperties24);

            Xdr.Transform transform24 = new Xdr.Transform();
            A.Offset offset35 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents35 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform24.Append(offset35);
            transform24.Append(extents35);

            A.Graphic graphic24 = new A.Graphic();

            A.GraphicData graphicData24 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer12 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 5" };
            timeSlicer12.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData24.Append(timeSlicer12);

            graphic24.Append(graphicData24);

            graphicFrame24.Append(nonVisualGraphicFrameProperties24);
            graphicFrame24.Append(transform24);
            graphicFrame24.Append(graphic24);

            alternateContentChoice23.Append(graphicFrame24);

            AlternateContentFallback alternateContentFallback22 = new AlternateContentFallback();
            alternateContentFallback22.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback22.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape12 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties12 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties36 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties12 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks12 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties12.Append(shapeLocks12);

            nonVisualShapeProperties12.Append(nonVisualDrawingProperties36);
            nonVisualShapeProperties12.Append(nonVisualShapeDrawingProperties12);

            Xdr.ShapeProperties shapeProperties44 = new Xdr.ShapeProperties();

            A.Transform2D transform2D12 = new A.Transform2D();
            A.Offset offset36 = new A.Offset(){ X = 8648700L, Y = 1609725L };
            A.Extents extents36 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D12.Append(offset36);
            transform2D12.Append(extents36);

            A.PresetGeometry presetGeometry12 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList12 = new A.AdjustValueList();

            presetGeometry12.Append(adjustValueList12);

            A.SolidFill solidFill79 = new A.SolidFill();
            A.PresetColor presetColor23 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill79.Append(presetColor23);

            A.Outline outline64 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill80 = new A.SolidFill();
            A.PresetColor presetColor24 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill80.Append(presetColor24);

            outline64.Append(solidFill80);

            shapeProperties44.Append(transform2D12);
            shapeProperties44.Append(presetGeometry12);
            shapeProperties44.Append(solidFill79);
            shapeProperties44.Append(outline64);

            Xdr.TextBody textBody12 = new Xdr.TextBody();
            A.BodyProperties bodyProperties28 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle28 = new A.ListStyle();

            A.Paragraph paragraph28 = new A.Paragraph();

            A.Run run12 = new A.Run();
            A.RunProperties runProperties12 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text50 = new A.Text();
            text50.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run12.Append(runProperties12);
            run12.Append(text50);

            paragraph28.Append(run12);

            textBody12.Append(bodyProperties28);
            textBody12.Append(listStyle28);
            textBody12.Append(paragraph28);

            shape12.Append(nonVisualShapeProperties12);
            shape12.Append(shapeProperties44);
            shape12.Append(textBody12);

            alternateContentFallback22.Append(shape12);

            alternateContent23.Append(alternateContentChoice23);
            alternateContent23.Append(alternateContentFallback22);
            Xdr.ClientData clientData24 = new Xdr.ClientData();

            twoCellAnchor24.Append(fromMarker24);
            twoCellAnchor24.Append(toMarker24);
            twoCellAnchor24.Append(alternateContent23);
            twoCellAnchor24.Append(clientData24);

            worksheetDrawing6.Append(twoCellAnchor21);
            worksheetDrawing6.Append(twoCellAnchor22);
            worksheetDrawing6.Append(twoCellAnchor23);
            worksheetDrawing6.Append(twoCellAnchor24);

            drawingsPart6.WorksheetDrawing = worksheetDrawing6;
        }

        // Generates content of chartPart11.
        private static void GenerateChartPart11Content(ChartPart chartPart11)
        {
            C.ChartSpace chartSpace11 = new C.ChartSpace();
            chartSpace11.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace11.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace11.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date190411 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage11 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners11 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent24 = new AlternateContent();
            alternateContent24.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice24 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice24.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style21 = new C14.Style(){ Val = 102 };

            alternateContentChoice24.Append(style21);

            AlternateContentFallback alternateContentFallback23 = new AlternateContentFallback();
            C.Style style22 = new C.Style(){ Val = 2 };

            alternateContentFallback23.Append(style22);

            alternateContent24.Append(alternateContentChoice24);
            alternateContent24.Append(alternateContentFallback23);

            C.PivotSource pivotSource11 = new C.PivotSource();
            C.PivotTableName pivotTableName11 = new C.PivotTableName();
            pivotTableName11.Text = "[GeneratedDocument.xlsx]Caption!PivotTable1";
            C.FormatId formatId11 = new C.FormatId(){ Val = 8U };

            pivotSource11.Append(pivotTableName11);
            pivotSource11.Append(formatId11);

            C.Chart chart11 = new C.Chart();

            C.Title title11 = new C.Title();
            C.Overlay overlay21 = new C.Overlay(){ Val = false };

            title11.Append(overlay21);
            C.AutoTitleDeleted autoTitleDeleted11 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats11 = new C.PivotFormats();

            C.PivotFormat pivotFormat95 = new C.PivotFormat();
            C.Index index105 = new C.Index(){ Val = 0U };

            C.Marker marker95 = new C.Marker();
            C.Symbol symbol95 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker95.Append(symbol95);

            pivotFormat95.Append(index105);
            pivotFormat95.Append(marker95);

            C.PivotFormat pivotFormat96 = new C.PivotFormat();
            C.Index index106 = new C.Index(){ Val = 1U };

            C.Marker marker96 = new C.Marker();
            C.Symbol symbol96 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker96.Append(symbol96);

            pivotFormat96.Append(index106);
            pivotFormat96.Append(marker96);

            pivotFormats11.Append(pivotFormat95);
            pivotFormats11.Append(pivotFormat96);

            C.PlotArea plotArea11 = new C.PlotArea();
            C.Layout layout11 = new C.Layout();

            C.PieChart pieChart6 = new C.PieChart();
            C.VaryColors varyColors11 = new C.VaryColors(){ Val = true };

            C.PieChartSeries pieChartSeries6 = new C.PieChartSeries();
            C.Index index107 = new C.Index(){ Val = 0U };
            C.Order order11 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText11 = new C.SeriesText();

            C.StringReference stringReference21 = new C.StringReference();
            C.Formula formula31 = new C.Formula();
            formula31.Text = "Caption!$B$1";

            C.StringCache stringCache21 = new C.StringCache();
            C.PointCount pointCount31 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint41 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue71 = new C.NumericValue();
            numericValue71.Text = "Total";

            stringPoint41.Append(numericValue71);

            stringCache21.Append(pointCount31);
            stringCache21.Append(stringPoint41);

            stringReference21.Append(formula31);
            stringReference21.Append(stringCache21);

            seriesText11.Append(stringReference21);

            C.CategoryAxisData categoryAxisData11 = new C.CategoryAxisData();

            C.StringReference stringReference22 = new C.StringReference();
            C.Formula formula32 = new C.Formula();
            formula32.Text = "Caption!$A$2:$A$5";

            C.StringCache stringCache22 = new C.StringCache();
            C.PointCount pointCount32 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint42 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue72 = new C.NumericValue();
            numericValue72.Text = "product_A";

            stringPoint42.Append(numericValue72);

            C.StringPoint stringPoint43 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue73 = new C.NumericValue();
            numericValue73.Text = "product_D";

            stringPoint43.Append(numericValue73);

            C.StringPoint stringPoint44 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue74 = new C.NumericValue();
            numericValue74.Text = "product_E";

            stringPoint44.Append(numericValue74);

            stringCache22.Append(pointCount32);
            stringCache22.Append(stringPoint42);
            stringCache22.Append(stringPoint43);
            stringCache22.Append(stringPoint44);

            stringReference22.Append(formula32);
            stringReference22.Append(stringCache22);

            categoryAxisData11.Append(stringReference22);

            C.Values values11 = new C.Values();

            C.NumberReference numberReference11 = new C.NumberReference();
            C.Formula formula33 = new C.Formula();
            formula33.Text = "Caption!$B$2:$B$5";

            C.NumberingCache numberingCache11 = new C.NumberingCache();
            C.FormatCode formatCode11 = new C.FormatCode();
            formatCode11.Text = "General";
            C.PointCount pointCount33 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint31 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue75 = new C.NumericValue();
            numericValue75.Text = "19";

            numericPoint31.Append(numericValue75);

            C.NumericPoint numericPoint32 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue76 = new C.NumericValue();
            numericValue76.Text = "13";

            numericPoint32.Append(numericValue76);

            C.NumericPoint numericPoint33 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue77 = new C.NumericValue();
            numericValue77.Text = "33";

            numericPoint33.Append(numericValue77);

            numberingCache11.Append(formatCode11);
            numberingCache11.Append(pointCount33);
            numberingCache11.Append(numericPoint31);
            numberingCache11.Append(numericPoint32);
            numberingCache11.Append(numericPoint33);

            numberReference11.Append(formula33);
            numberReference11.Append(numberingCache11);

            values11.Append(numberReference11);

            pieChartSeries6.Append(index107);
            pieChartSeries6.Append(order11);
            pieChartSeries6.Append(seriesText11);
            pieChartSeries6.Append(categoryAxisData11);
            pieChartSeries6.Append(values11);

            C.DataLabels dataLabels11 = new C.DataLabels();
            C.ShowLegendKey showLegendKey11 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue11 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName11 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName11 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent11 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize11 = new C.ShowBubbleSize(){ Val = false };
            C.ShowLeaderLines showLeaderLines6 = new C.ShowLeaderLines(){ Val = true };

            dataLabels11.Append(showLegendKey11);
            dataLabels11.Append(showValue11);
            dataLabels11.Append(showCategoryName11);
            dataLabels11.Append(showSeriesName11);
            dataLabels11.Append(showPercent11);
            dataLabels11.Append(showBubbleSize11);
            dataLabels11.Append(showLeaderLines6);
            C.FirstSliceAngle firstSliceAngle6 = new C.FirstSliceAngle(){ Val = (UInt16Value)0U };

            pieChart6.Append(varyColors11);
            pieChart6.Append(pieChartSeries6);
            pieChart6.Append(dataLabels11);
            pieChart6.Append(firstSliceAngle6);

            plotArea11.Append(layout11);
            plotArea11.Append(pieChart6);

            C.Legend legend11 = new C.Legend();
            C.LegendPosition legendPosition11 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay22 = new C.Overlay(){ Val = false };

            legend11.Append(legendPosition11);
            legend11.Append(overlay22);
            C.PlotVisibleOnly plotVisibleOnly11 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs11 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum11 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart11.Append(title11);
            chart11.Append(autoTitleDeleted11);
            chart11.Append(pivotFormats11);
            chart11.Append(plotArea11);
            chart11.Append(legend11);
            chart11.Append(plotVisibleOnly11);
            chart11.Append(displayBlanksAs11);
            chart11.Append(showDataLabelsOverMaximum11);

            C.PrintSettings printSettings11 = new C.PrintSettings();
            C.HeaderFooter headerFooter11 = new C.HeaderFooter();
            C.PageMargins pageMargins19 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup11 = new C.PageSetup();

            printSettings11.Append(headerFooter11);
            printSettings11.Append(pageMargins19);
            printSettings11.Append(pageSetup11);

            C.ChartSpaceExtensionList chartSpaceExtensionList11 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList11.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList11.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension11 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension11.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions11 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter11 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories11 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData11 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries11 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible11 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions11.Append(dropZoneFilter11);
            pivotOptions11.Append(dropZoneCategories11);
            pivotOptions11.Append(dropZoneData11);
            pivotOptions11.Append(dropZoneSeries11);
            pivotOptions11.Append(dropZonesVisible11);

            chartSpaceExtension11.Append(pivotOptions11);

            chartSpaceExtensionList11.Append(chartSpaceExtension11);

            chartSpace11.Append(date190411);
            chartSpace11.Append(editingLanguage11);
            chartSpace11.Append(roundedCorners11);
            chartSpace11.Append(alternateContent24);
            chartSpace11.Append(pivotSource11);
            chartSpace11.Append(chart11);
            chartSpace11.Append(printSettings11);
            chartSpace11.Append(chartSpaceExtensionList11);

            chartPart11.ChartSpace = chartSpace11;
        }

        // Generates content of chartPart12.
        private static void GenerateChartPart12Content(ChartPart chartPart12)
        {
            C.ChartSpace chartSpace12 = new C.ChartSpace();
            chartSpace12.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace12.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace12.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date190412 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage12 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners12 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent25 = new AlternateContent();
            alternateContent25.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice25 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice25.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style23 = new C14.Style(){ Val = 101 };

            alternateContentChoice25.Append(style23);

            AlternateContentFallback alternateContentFallback24 = new AlternateContentFallback();
            C.Style style24 = new C.Style(){ Val = 1 };

            alternateContentFallback24.Append(style24);

            alternateContent25.Append(alternateContentChoice25);
            alternateContent25.Append(alternateContentFallback24);

            C.PivotSource pivotSource12 = new C.PivotSource();
            C.PivotTableName pivotTableName12 = new C.PivotTableName();
            pivotTableName12.Text = "[GeneratedDocument.xlsx]Caption!PivotTable1";
            C.FormatId formatId12 = new C.FormatId(){ Val = 7U };

            pivotSource12.Append(pivotTableName12);
            pivotSource12.Append(formatId12);

            C.Chart chart12 = new C.Chart();

            C.Title title12 = new C.Title();
            C.Overlay overlay23 = new C.Overlay(){ Val = false };

            title12.Append(overlay23);
            C.AutoTitleDeleted autoTitleDeleted12 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats12 = new C.PivotFormats();

            C.PivotFormat pivotFormat97 = new C.PivotFormat();
            C.Index index108 = new C.Index(){ Val = 0U };

            C.ShapeProperties shapeProperties45 = new C.ShapeProperties();

            A.SolidFill solidFill81 = new A.SolidFill();

            A.SchemeColor schemeColor57 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint29 = new A.Tint(){ Val = 100000 };

            schemeColor57.Append(tint29);

            solidFill81.Append(schemeColor57);

            A.Outline outline65 = new A.Outline();
            A.NoFill noFill57 = new A.NoFill();

            outline65.Append(noFill57);
            A.EffectList effectList53 = new A.EffectList();

            shapeProperties45.Append(solidFill81);
            shapeProperties45.Append(outline65);
            shapeProperties45.Append(effectList53);

            C.Marker marker97 = new C.Marker();
            C.Symbol symbol97 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker97.Append(symbol97);

            pivotFormat97.Append(index108);
            pivotFormat97.Append(shapeProperties45);
            pivotFormat97.Append(marker97);

            C.PivotFormat pivotFormat98 = new C.PivotFormat();
            C.Index index109 = new C.Index(){ Val = 1U };

            C.ShapeProperties shapeProperties46 = new C.ShapeProperties();

            A.SolidFill solidFill82 = new A.SolidFill();

            A.SchemeColor schemeColor58 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent2 };
            A.Tint tint30 = new A.Tint(){ Val = 100000 };

            schemeColor58.Append(tint30);

            solidFill82.Append(schemeColor58);

            A.Outline outline66 = new A.Outline();
            A.NoFill noFill58 = new A.NoFill();

            outline66.Append(noFill58);
            A.EffectList effectList54 = new A.EffectList();

            shapeProperties46.Append(solidFill82);
            shapeProperties46.Append(outline66);
            shapeProperties46.Append(effectList54);

            C.Marker marker98 = new C.Marker();
            C.Symbol symbol98 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker98.Append(symbol98);

            pivotFormat98.Append(index109);
            pivotFormat98.Append(shapeProperties46);
            pivotFormat98.Append(marker98);

            C.PivotFormat pivotFormat99 = new C.PivotFormat();
            C.Index index110 = new C.Index(){ Val = 2U };

            C.Marker marker99 = new C.Marker();
            C.Symbol symbol99 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker99.Append(symbol99);

            pivotFormat99.Append(index110);
            pivotFormat99.Append(marker99);

            C.PivotFormat pivotFormat100 = new C.PivotFormat();
            C.Index index111 = new C.Index(){ Val = 3U };

            C.Marker marker100 = new C.Marker();
            C.Symbol symbol100 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker100.Append(symbol100);

            pivotFormat100.Append(index111);
            pivotFormat100.Append(marker100);

            C.PivotFormat pivotFormat101 = new C.PivotFormat();
            C.Index index112 = new C.Index(){ Val = 4U };

            C.Marker marker101 = new C.Marker();
            C.Symbol symbol101 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker101.Append(symbol101);

            pivotFormat101.Append(index112);
            pivotFormat101.Append(marker101);

            C.PivotFormat pivotFormat102 = new C.PivotFormat();
            C.Index index113 = new C.Index(){ Val = 5U };

            C.Marker marker102 = new C.Marker();
            C.Symbol symbol102 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker102.Append(symbol102);

            pivotFormat102.Append(index113);
            pivotFormat102.Append(marker102);

            C.PivotFormat pivotFormat103 = new C.PivotFormat();
            C.Index index114 = new C.Index(){ Val = 6U };

            C.Marker marker103 = new C.Marker();
            C.Symbol symbol103 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker103.Append(symbol103);

            pivotFormat103.Append(index114);
            pivotFormat103.Append(marker103);

            C.PivotFormat pivotFormat104 = new C.PivotFormat();
            C.Index index115 = new C.Index(){ Val = 7U };

            C.Marker marker104 = new C.Marker();
            C.Symbol symbol104 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker104.Append(symbol104);

            pivotFormat104.Append(index115);
            pivotFormat104.Append(marker104);

            C.PivotFormat pivotFormat105 = new C.PivotFormat();
            C.Index index116 = new C.Index(){ Val = 8U };

            C.Marker marker105 = new C.Marker();
            C.Symbol symbol105 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker105.Append(symbol105);

            pivotFormat105.Append(index116);
            pivotFormat105.Append(marker105);

            C.PivotFormat pivotFormat106 = new C.PivotFormat();
            C.Index index117 = new C.Index(){ Val = 9U };

            C.Marker marker106 = new C.Marker();
            C.Symbol symbol106 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker106.Append(symbol106);

            pivotFormat106.Append(index117);
            pivotFormat106.Append(marker106);

            C.PivotFormat pivotFormat107 = new C.PivotFormat();
            C.Index index118 = new C.Index(){ Val = 10U };

            C.Marker marker107 = new C.Marker();
            C.Symbol symbol107 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker107.Append(symbol107);

            pivotFormat107.Append(index118);
            pivotFormat107.Append(marker107);

            C.PivotFormat pivotFormat108 = new C.PivotFormat();
            C.Index index119 = new C.Index(){ Val = 11U };

            C.Marker marker108 = new C.Marker();
            C.Symbol symbol108 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker108.Append(symbol108);

            pivotFormat108.Append(index119);
            pivotFormat108.Append(marker108);

            C.PivotFormat pivotFormat109 = new C.PivotFormat();
            C.Index index120 = new C.Index(){ Val = 12U };

            C.Marker marker109 = new C.Marker();
            C.Symbol symbol109 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker109.Append(symbol109);

            pivotFormat109.Append(index120);
            pivotFormat109.Append(marker109);

            C.PivotFormat pivotFormat110 = new C.PivotFormat();
            C.Index index121 = new C.Index(){ Val = 13U };

            C.Marker marker110 = new C.Marker();
            C.Symbol symbol110 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker110.Append(symbol110);

            pivotFormat110.Append(index121);
            pivotFormat110.Append(marker110);

            C.PivotFormat pivotFormat111 = new C.PivotFormat();
            C.Index index122 = new C.Index(){ Val = 14U };

            C.ShapeProperties shapeProperties47 = new C.ShapeProperties();

            A.SolidFill solidFill83 = new A.SolidFill();

            A.SchemeColor schemeColor59 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint31 = new A.Tint(){ Val = 100000 };

            schemeColor59.Append(tint31);

            solidFill83.Append(schemeColor59);

            A.Outline outline67 = new A.Outline();
            A.NoFill noFill59 = new A.NoFill();

            outline67.Append(noFill59);
            A.EffectList effectList55 = new A.EffectList();

            shapeProperties47.Append(solidFill83);
            shapeProperties47.Append(outline67);
            shapeProperties47.Append(effectList55);

            C.Marker marker111 = new C.Marker();
            C.Symbol symbol111 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker111.Append(symbol111);

            pivotFormat111.Append(index122);
            pivotFormat111.Append(shapeProperties47);
            pivotFormat111.Append(marker111);

            pivotFormats12.Append(pivotFormat97);
            pivotFormats12.Append(pivotFormat98);
            pivotFormats12.Append(pivotFormat99);
            pivotFormats12.Append(pivotFormat100);
            pivotFormats12.Append(pivotFormat101);
            pivotFormats12.Append(pivotFormat102);
            pivotFormats12.Append(pivotFormat103);
            pivotFormats12.Append(pivotFormat104);
            pivotFormats12.Append(pivotFormat105);
            pivotFormats12.Append(pivotFormat106);
            pivotFormats12.Append(pivotFormat107);
            pivotFormats12.Append(pivotFormat108);
            pivotFormats12.Append(pivotFormat109);
            pivotFormats12.Append(pivotFormat110);
            pivotFormats12.Append(pivotFormat111);

            C.PlotArea plotArea12 = new C.PlotArea();
            C.Layout layout12 = new C.Layout();

            C.BarChart barChart6 = new C.BarChart();
            C.BarDirection barDirection6 = new C.BarDirection(){ Val = C.BarDirectionValues.Column };
            C.BarGrouping barGrouping6 = new C.BarGrouping(){ Val = C.BarGroupingValues.Clustered };
            C.VaryColors varyColors12 = new C.VaryColors(){ Val = false };

            C.BarChartSeries barChartSeries6 = new C.BarChartSeries();
            C.Index index123 = new C.Index(){ Val = 0U };
            C.Order order12 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText12 = new C.SeriesText();

            C.StringReference stringReference23 = new C.StringReference();
            C.Formula formula34 = new C.Formula();
            formula34.Text = "Caption!$B$1";

            C.StringCache stringCache23 = new C.StringCache();
            C.PointCount pointCount34 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint45 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue78 = new C.NumericValue();
            numericValue78.Text = "Total";

            stringPoint45.Append(numericValue78);

            stringCache23.Append(pointCount34);
            stringCache23.Append(stringPoint45);

            stringReference23.Append(formula34);
            stringReference23.Append(stringCache23);

            seriesText12.Append(stringReference23);

            C.ChartShapeProperties chartShapeProperties21 = new C.ChartShapeProperties();

            A.SolidFill solidFill84 = new A.SolidFill();

            A.SchemeColor schemeColor60 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint32 = new A.Tint(){ Val = 100000 };

            schemeColor60.Append(tint32);

            solidFill84.Append(schemeColor60);

            A.Outline outline68 = new A.Outline();
            A.NoFill noFill60 = new A.NoFill();

            outline68.Append(noFill60);
            A.EffectList effectList56 = new A.EffectList();

            chartShapeProperties21.Append(solidFill84);
            chartShapeProperties21.Append(outline68);
            chartShapeProperties21.Append(effectList56);
            C.InvertIfNegative invertIfNegative6 = new C.InvertIfNegative(){ Val = false };

            C.CategoryAxisData categoryAxisData12 = new C.CategoryAxisData();

            C.StringReference stringReference24 = new C.StringReference();
            C.Formula formula35 = new C.Formula();
            formula35.Text = "Caption!$A$2:$A$5";

            C.StringCache stringCache24 = new C.StringCache();
            C.PointCount pointCount35 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint46 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue79 = new C.NumericValue();
            numericValue79.Text = "product_A";

            stringPoint46.Append(numericValue79);

            C.StringPoint stringPoint47 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue80 = new C.NumericValue();
            numericValue80.Text = "product_D";

            stringPoint47.Append(numericValue80);

            C.StringPoint stringPoint48 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue81 = new C.NumericValue();
            numericValue81.Text = "product_E";

            stringPoint48.Append(numericValue81);

            stringCache24.Append(pointCount35);
            stringCache24.Append(stringPoint46);
            stringCache24.Append(stringPoint47);
            stringCache24.Append(stringPoint48);

            stringReference24.Append(formula35);
            stringReference24.Append(stringCache24);

            categoryAxisData12.Append(stringReference24);

            C.Values values12 = new C.Values();

            C.NumberReference numberReference12 = new C.NumberReference();
            C.Formula formula36 = new C.Formula();
            formula36.Text = "Caption!$B$2:$B$5";

            C.NumberingCache numberingCache12 = new C.NumberingCache();
            C.FormatCode formatCode12 = new C.FormatCode();
            formatCode12.Text = "General";
            C.PointCount pointCount36 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint34 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue82 = new C.NumericValue();
            numericValue82.Text = "19";

            numericPoint34.Append(numericValue82);

            C.NumericPoint numericPoint35 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue83 = new C.NumericValue();
            numericValue83.Text = "13";

            numericPoint35.Append(numericValue83);

            C.NumericPoint numericPoint36 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue84 = new C.NumericValue();
            numericValue84.Text = "33";

            numericPoint36.Append(numericValue84);

            numberingCache12.Append(formatCode12);
            numberingCache12.Append(pointCount36);
            numberingCache12.Append(numericPoint34);
            numberingCache12.Append(numericPoint35);
            numberingCache12.Append(numericPoint36);

            numberReference12.Append(formula36);
            numberReference12.Append(numberingCache12);

            values12.Append(numberReference12);

            barChartSeries6.Append(index123);
            barChartSeries6.Append(order12);
            barChartSeries6.Append(seriesText12);
            barChartSeries6.Append(chartShapeProperties21);
            barChartSeries6.Append(invertIfNegative6);
            barChartSeries6.Append(categoryAxisData12);
            barChartSeries6.Append(values12);

            C.DataLabels dataLabels12 = new C.DataLabels();
            C.ShowLegendKey showLegendKey12 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue12 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName12 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName12 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent12 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize12 = new C.ShowBubbleSize(){ Val = false };

            dataLabels12.Append(showLegendKey12);
            dataLabels12.Append(showValue12);
            dataLabels12.Append(showCategoryName12);
            dataLabels12.Append(showSeriesName12);
            dataLabels12.Append(showPercent12);
            dataLabels12.Append(showBubbleSize12);
            C.GapWidth gapWidth6 = new C.GapWidth(){ Val = (UInt16Value)219U };
            C.Overlap overlap5 = new C.Overlap(){ Val = -27 };
            C.AxisId axisId21 = new C.AxisId(){ Val = 164321080U };
            C.AxisId axisId22 = new C.AxisId(){ Val = 209664384U };

            barChart6.Append(barDirection6);
            barChart6.Append(barGrouping6);
            barChart6.Append(varyColors12);
            barChart6.Append(barChartSeries6);
            barChart6.Append(dataLabels12);
            barChart6.Append(gapWidth6);
            barChart6.Append(overlap5);
            barChart6.Append(axisId21);
            barChart6.Append(axisId22);

            C.CategoryAxis categoryAxis6 = new C.CategoryAxis();
            C.AxisId axisId23 = new C.AxisId(){ Val = 164321080U };

            C.Scaling scaling11 = new C.Scaling();
            C.Orientation orientation11 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling11.Append(orientation11);
            C.Delete delete11 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition11 = new C.AxisPosition(){ Val = C.AxisPositionValues.Bottom };
            C.NumberingFormat numberingFormat22 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = false };
            C.MajorTickMark majorTickMark11 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark11 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition11 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties22 = new C.ChartShapeProperties();
            A.NoFill noFill61 = new A.NoFill();

            A.Outline outline69 = new A.Outline();
            A.NoFill noFill62 = new A.NoFill();

            outline69.Append(noFill62);
            A.EffectList effectList57 = new A.EffectList();

            chartShapeProperties22.Append(noFill61);
            chartShapeProperties22.Append(outline69);
            chartShapeProperties22.Append(effectList57);

            C.TextProperties textProperties17 = new C.TextProperties();
            A.BodyProperties bodyProperties29 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle29 = new A.ListStyle();

            A.Paragraph paragraph29 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties17 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties17 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill85 = new A.SolidFill();

            A.SchemeColor schemeColor61 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation21 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset21 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor61.Append(luminanceModulation21);
            schemeColor61.Append(luminanceOffset21);

            solidFill85.Append(schemeColor61);
            A.LatinFont latinFont13 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont13 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont13 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties17.Append(solidFill85);
            defaultRunProperties17.Append(latinFont13);
            defaultRunProperties17.Append(eastAsianFont13);
            defaultRunProperties17.Append(complexScriptFont13);

            paragraphProperties17.Append(defaultRunProperties17);
            A.EndParagraphRunProperties endParagraphRunProperties17 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph29.Append(paragraphProperties17);
            paragraph29.Append(endParagraphRunProperties17);

            textProperties17.Append(bodyProperties29);
            textProperties17.Append(listStyle29);
            textProperties17.Append(paragraph29);
            C.CrossingAxis crossingAxis11 = new C.CrossingAxis(){ Val = 209664384U };
            C.Crosses crosses11 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.AutoLabeled autoLabeled6 = new C.AutoLabeled(){ Val = true };
            C.LabelAlignment labelAlignment6 = new C.LabelAlignment(){ Val = C.LabelAlignmentValues.Center };
            C.LabelOffset labelOffset6 = new C.LabelOffset(){ Val = (UInt16Value)100U };
            C.NoMultiLevelLabels noMultiLevelLabels6 = new C.NoMultiLevelLabels(){ Val = false };

            categoryAxis6.Append(axisId23);
            categoryAxis6.Append(scaling11);
            categoryAxis6.Append(delete11);
            categoryAxis6.Append(axisPosition11);
            categoryAxis6.Append(numberingFormat22);
            categoryAxis6.Append(majorTickMark11);
            categoryAxis6.Append(minorTickMark11);
            categoryAxis6.Append(tickLabelPosition11);
            categoryAxis6.Append(chartShapeProperties22);
            categoryAxis6.Append(textProperties17);
            categoryAxis6.Append(crossingAxis11);
            categoryAxis6.Append(crosses11);
            categoryAxis6.Append(autoLabeled6);
            categoryAxis6.Append(labelAlignment6);
            categoryAxis6.Append(labelOffset6);
            categoryAxis6.Append(noMultiLevelLabels6);

            C.ValueAxis valueAxis6 = new C.ValueAxis();
            C.AxisId axisId24 = new C.AxisId(){ Val = 209664384U };

            C.Scaling scaling12 = new C.Scaling();
            C.Orientation orientation12 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling12.Append(orientation12);
            C.Delete delete12 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition12 = new C.AxisPosition(){ Val = C.AxisPositionValues.Left };

            C.MajorGridlines majorGridlines6 = new C.MajorGridlines();

            C.ChartShapeProperties chartShapeProperties23 = new C.ChartShapeProperties();

            A.Outline outline70 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill86 = new A.SolidFill();

            A.SchemeColor schemeColor62 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation22 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset22 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor62.Append(luminanceModulation22);
            schemeColor62.Append(luminanceOffset22);

            solidFill86.Append(schemeColor62);
            A.Round round9 = new A.Round();

            outline70.Append(solidFill86);
            outline70.Append(round9);
            A.EffectList effectList58 = new A.EffectList();

            chartShapeProperties23.Append(outline70);
            chartShapeProperties23.Append(effectList58);

            majorGridlines6.Append(chartShapeProperties23);
            C.NumberingFormat numberingFormat23 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = true };
            C.MajorTickMark majorTickMark12 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark12 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition12 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties24 = new C.ChartShapeProperties();
            A.NoFill noFill63 = new A.NoFill();

            A.Outline outline71 = new A.Outline();
            A.NoFill noFill64 = new A.NoFill();

            outline71.Append(noFill64);
            A.EffectList effectList59 = new A.EffectList();

            chartShapeProperties24.Append(noFill63);
            chartShapeProperties24.Append(outline71);
            chartShapeProperties24.Append(effectList59);

            C.TextProperties textProperties18 = new C.TextProperties();
            A.BodyProperties bodyProperties30 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle30 = new A.ListStyle();

            A.Paragraph paragraph30 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties18 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties18 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill87 = new A.SolidFill();

            A.SchemeColor schemeColor63 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation23 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset23 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor63.Append(luminanceModulation23);
            schemeColor63.Append(luminanceOffset23);

            solidFill87.Append(schemeColor63);
            A.LatinFont latinFont14 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont14 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont14 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties18.Append(solidFill87);
            defaultRunProperties18.Append(latinFont14);
            defaultRunProperties18.Append(eastAsianFont14);
            defaultRunProperties18.Append(complexScriptFont14);

            paragraphProperties18.Append(defaultRunProperties18);
            A.EndParagraphRunProperties endParagraphRunProperties18 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph30.Append(paragraphProperties18);
            paragraph30.Append(endParagraphRunProperties18);

            textProperties18.Append(bodyProperties30);
            textProperties18.Append(listStyle30);
            textProperties18.Append(paragraph30);
            C.CrossingAxis crossingAxis12 = new C.CrossingAxis(){ Val = 164321080U };
            C.Crosses crosses12 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.CrossBetween crossBetween6 = new C.CrossBetween(){ Val = C.CrossBetweenValues.Between };

            valueAxis6.Append(axisId24);
            valueAxis6.Append(scaling12);
            valueAxis6.Append(delete12);
            valueAxis6.Append(axisPosition12);
            valueAxis6.Append(majorGridlines6);
            valueAxis6.Append(numberingFormat23);
            valueAxis6.Append(majorTickMark12);
            valueAxis6.Append(minorTickMark12);
            valueAxis6.Append(tickLabelPosition12);
            valueAxis6.Append(chartShapeProperties24);
            valueAxis6.Append(textProperties18);
            valueAxis6.Append(crossingAxis12);
            valueAxis6.Append(crosses12);
            valueAxis6.Append(crossBetween6);

            C.ShapeProperties shapeProperties48 = new C.ShapeProperties();

            A.SolidFill solidFill88 = new A.SolidFill();
            A.SchemeColor schemeColor64 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill88.Append(schemeColor64);

            A.Outline outline72 = new A.Outline();
            A.NoFill noFill65 = new A.NoFill();

            outline72.Append(noFill65);
            A.EffectList effectList60 = new A.EffectList();

            shapeProperties48.Append(solidFill88);
            shapeProperties48.Append(outline72);
            shapeProperties48.Append(effectList60);

            plotArea12.Append(layout12);
            plotArea12.Append(barChart6);
            plotArea12.Append(categoryAxis6);
            plotArea12.Append(valueAxis6);
            plotArea12.Append(shapeProperties48);

            C.Legend legend12 = new C.Legend();
            C.LegendPosition legendPosition12 = new C.LegendPosition(){ Val = C.LegendPositionValues.Bottom };
            C.Overlay overlay24 = new C.Overlay(){ Val = false };

            C.ChartShapeProperties chartShapeProperties25 = new C.ChartShapeProperties();
            A.NoFill noFill66 = new A.NoFill();

            A.Outline outline73 = new A.Outline();
            A.NoFill noFill67 = new A.NoFill();

            outline73.Append(noFill67);
            A.EffectList effectList61 = new A.EffectList();

            chartShapeProperties25.Append(noFill66);
            chartShapeProperties25.Append(outline73);
            chartShapeProperties25.Append(effectList61);

            C.TextProperties textProperties19 = new C.TextProperties();
            A.BodyProperties bodyProperties31 = new A.BodyProperties(){ Rotation = 0, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle31 = new A.ListStyle();

            A.Paragraph paragraph31 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties19 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties19 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill89 = new A.SolidFill();

            A.SchemeColor schemeColor65 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation24 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset24 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor65.Append(luminanceModulation24);
            schemeColor65.Append(luminanceOffset24);

            solidFill89.Append(schemeColor65);
            A.LatinFont latinFont15 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont15 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont15 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties19.Append(solidFill89);
            defaultRunProperties19.Append(latinFont15);
            defaultRunProperties19.Append(eastAsianFont15);
            defaultRunProperties19.Append(complexScriptFont15);

            paragraphProperties19.Append(defaultRunProperties19);
            A.EndParagraphRunProperties endParagraphRunProperties19 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph31.Append(paragraphProperties19);
            paragraph31.Append(endParagraphRunProperties19);

            textProperties19.Append(bodyProperties31);
            textProperties19.Append(listStyle31);
            textProperties19.Append(paragraph31);

            legend12.Append(legendPosition12);
            legend12.Append(overlay24);
            legend12.Append(chartShapeProperties25);
            legend12.Append(textProperties19);
            C.PlotVisibleOnly plotVisibleOnly12 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs12 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum12 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart12.Append(title12);
            chart12.Append(autoTitleDeleted12);
            chart12.Append(pivotFormats12);
            chart12.Append(plotArea12);
            chart12.Append(legend12);
            chart12.Append(plotVisibleOnly12);
            chart12.Append(displayBlanksAs12);
            chart12.Append(showDataLabelsOverMaximum12);

            C.ShapeProperties shapeProperties49 = new C.ShapeProperties();

            A.SolidFill solidFill90 = new A.SolidFill();
            A.SchemeColor schemeColor66 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill90.Append(schemeColor66);

            A.Outline outline74 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill91 = new A.SolidFill();

            A.SchemeColor schemeColor67 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation25 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset25 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor67.Append(luminanceModulation25);
            schemeColor67.Append(luminanceOffset25);

            solidFill91.Append(schemeColor67);
            A.Round round10 = new A.Round();

            outline74.Append(solidFill91);
            outline74.Append(round10);
            A.EffectList effectList62 = new A.EffectList();

            shapeProperties49.Append(solidFill90);
            shapeProperties49.Append(outline74);
            shapeProperties49.Append(effectList62);

            C.TextProperties textProperties20 = new C.TextProperties();
            A.BodyProperties bodyProperties32 = new A.BodyProperties();
            A.ListStyle listStyle32 = new A.ListStyle();

            A.Paragraph paragraph32 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties20 = new A.ParagraphProperties();
            A.DefaultRunProperties defaultRunProperties20 = new A.DefaultRunProperties();

            paragraphProperties20.Append(defaultRunProperties20);
            A.EndParagraphRunProperties endParagraphRunProperties20 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph32.Append(paragraphProperties20);
            paragraph32.Append(endParagraphRunProperties20);

            textProperties20.Append(bodyProperties32);
            textProperties20.Append(listStyle32);
            textProperties20.Append(paragraph32);

            C.PrintSettings printSettings12 = new C.PrintSettings();
            C.HeaderFooter headerFooter12 = new C.HeaderFooter();
            C.PageMargins pageMargins20 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup12 = new C.PageSetup();

            printSettings12.Append(headerFooter12);
            printSettings12.Append(pageMargins20);
            printSettings12.Append(pageSetup12);

            C.ChartSpaceExtensionList chartSpaceExtensionList12 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList12.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList12.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension12 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension12.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions12 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter12 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories12 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData12 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries12 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible12 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions12.Append(dropZoneFilter12);
            pivotOptions12.Append(dropZoneCategories12);
            pivotOptions12.Append(dropZoneData12);
            pivotOptions12.Append(dropZoneSeries12);
            pivotOptions12.Append(dropZonesVisible12);

            chartSpaceExtension12.Append(pivotOptions12);

            chartSpaceExtensionList12.Append(chartSpaceExtension12);

            chartSpace12.Append(date190412);
            chartSpace12.Append(editingLanguage12);
            chartSpace12.Append(roundedCorners12);
            chartSpace12.Append(alternateContent25);
            chartSpace12.Append(pivotSource12);
            chartSpace12.Append(chart12);
            chartSpace12.Append(shapeProperties49);
            chartSpace12.Append(textProperties20);
            chartSpace12.Append(printSettings12);
            chartSpace12.Append(chartSpaceExtensionList12);

            chartPart12.ChartSpace = chartSpace12;
        }

        // Generates content of pivotTablePart6.
        private static void GeneratePivotTablePart6Content(PivotTablePart pivotTablePart6)
        {
            PivotTableDefinition pivotTableDefinition11 = new PivotTableDefinition(){ Name = "PivotTable1", CacheId = 1U, ApplyNumberFormats = false, ApplyBorderFormats = false, ApplyFontFormats = false, ApplyPatternFormats = false, ApplyAlignmentFormats = false, ApplyWidthHeightFormats = true, DataCaption = "Values", UpdatedVersion = 5, MinRefreshableVersion = 5, UseAutoFormatting = true, ItemPrintTitles = true, CreatedVersion = 4, Indent = 0U, Outline = true, OutlineData = true, MultipleFieldFilters = false, ChartFormat = 9U };
            Location location6 = new Location(){ Reference = "A1:B5", FirstHeaderRow = 1U, FirstDataRow = 1U, FirstDataColumn = 1U };

            PivotFields pivotFields6 = new PivotFields(){ Count = 7U };

            PivotField pivotField35 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items19 = new Items(){ Count = 15U };
            Item item162 = new Item(){ Index = 0U };
            Item item163 = new Item(){ Index = 1U };
            Item item164 = new Item(){ Index = 2U };
            Item item165 = new Item(){ Index = 3U };
            Item item166 = new Item(){ Index = 4U };
            Item item167 = new Item(){ Index = 5U };
            Item item168 = new Item(){ Index = 6U };
            Item item169 = new Item(){ Index = 7U };
            Item item170 = new Item(){ Index = 8U };
            Item item171 = new Item(){ Index = 9U };
            Item item172 = new Item(){ Index = 10U };
            Item item173 = new Item(){ Index = 11U };
            Item item174 = new Item(){ Index = 12U };
            Item item175 = new Item(){ Index = 13U };
            Item item176 = new Item(){ ItemType = ItemValues.Default };

            items19.Append(item162);
            items19.Append(item163);
            items19.Append(item164);
            items19.Append(item165);
            items19.Append(item166);
            items19.Append(item167);
            items19.Append(item168);
            items19.Append(item169);
            items19.Append(item170);
            items19.Append(item171);
            items19.Append(item172);
            items19.Append(item173);
            items19.Append(item174);
            items19.Append(item175);
            items19.Append(item176);

            pivotField35.Append(items19);

            PivotField pivotField36 = new PivotField(){ Axis = PivotTableAxisValues.AxisRow, ShowAll = false };

            Items items20 = new Items(){ Count = 11U };
            Item item177 = new Item(){ Index = 0U };
            Item item178 = new Item(){ Missing = true, Index = 4U };
            Item item179 = new Item(){ Missing = true, Index = 3U };
            Item item180 = new Item(){ Index = 1U };
            Item item181 = new Item(){ Index = 2U };
            Item item182 = new Item(){ Missing = true, Index = 9U };
            Item item183 = new Item(){ Missing = true, Index = 8U };
            Item item184 = new Item(){ Missing = true, Index = 7U };
            Item item185 = new Item(){ Missing = true, Index = 6U };
            Item item186 = new Item(){ Missing = true, Index = 5U };
            Item item187 = new Item(){ ItemType = ItemValues.Default };

            items20.Append(item177);
            items20.Append(item178);
            items20.Append(item179);
            items20.Append(item180);
            items20.Append(item181);
            items20.Append(item182);
            items20.Append(item183);
            items20.Append(item184);
            items20.Append(item185);
            items20.Append(item186);
            items20.Append(item187);

            pivotField36.Append(items20);
            PivotField pivotField37 = new PivotField(){ DataField = true, ShowAll = false };
            PivotField pivotField38 = new PivotField(){ ShowAll = false };

            PivotField pivotField39 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items21 = new Items(){ Count = 5U };
            Item item188 = new Item(){ Index = 0U };
            Item item189 = new Item(){ Index = 1U };
            Item item190 = new Item(){ Index = 3U };
            Item item191 = new Item(){ Index = 2U };
            Item item192 = new Item(){ ItemType = ItemValues.Default };

            items21.Append(item188);
            items21.Append(item189);
            items21.Append(item190);
            items21.Append(item191);
            items21.Append(item192);

            pivotField39.Append(items21);
            PivotField pivotField40 = new PivotField(){ ShowAll = false };

            PivotField pivotField41 = new PivotField(){ ShowAll = false, DefaultSubtotal = false };

            Items items22 = new Items(){ Count = 5U };
            Item item193 = new Item(){ Index = 0U };
            Item item194 = new Item(){ Index = 1U };
            Item item195 = new Item(){ Index = 2U };
            Item item196 = new Item(){ Index = 3U };
            Item item197 = new Item(){ Index = 4U };

            items22.Append(item193);
            items22.Append(item194);
            items22.Append(item195);
            items22.Append(item196);
            items22.Append(item197);

            pivotField41.Append(items22);

            pivotFields6.Append(pivotField35);
            pivotFields6.Append(pivotField36);
            pivotFields6.Append(pivotField37);
            pivotFields6.Append(pivotField38);
            pivotFields6.Append(pivotField39);
            pivotFields6.Append(pivotField40);
            pivotFields6.Append(pivotField41);

            RowFields rowFields6 = new RowFields(){ Count = 1U };
            Field field6 = new Field(){ Index = 1 };

            rowFields6.Append(field6);

            RowItems rowItems6 = new RowItems(){ Count = 4U };

            RowItem rowItem26 = new RowItem();
            MemberPropertyIndex memberPropertyIndex21 = new MemberPropertyIndex();

            rowItem26.Append(memberPropertyIndex21);

            RowItem rowItem27 = new RowItem();
            MemberPropertyIndex memberPropertyIndex22 = new MemberPropertyIndex(){ Val = 3 };

            rowItem27.Append(memberPropertyIndex22);

            RowItem rowItem28 = new RowItem();
            MemberPropertyIndex memberPropertyIndex23 = new MemberPropertyIndex(){ Val = 4 };

            rowItem28.Append(memberPropertyIndex23);

            RowItem rowItem29 = new RowItem(){ ItemType = ItemValues.Grand };
            MemberPropertyIndex memberPropertyIndex24 = new MemberPropertyIndex();

            rowItem29.Append(memberPropertyIndex24);

            rowItems6.Append(rowItem26);
            rowItems6.Append(rowItem27);
            rowItems6.Append(rowItem28);
            rowItems6.Append(rowItem29);

            ColumnItems columnItems6 = new ColumnItems(){ Count = 1U };
            RowItem rowItem30 = new RowItem();

            columnItems6.Append(rowItem30);

            DataFields dataFields6 = new DataFields(){ Count = 1U };
            DataField dataField6 = new DataField(){ Name = "Sum of Quantity", Field = 2U, BaseField = 0, BaseItem = 0U };

            dataFields6.Append(dataField6);

            ChartFormats chartFormats6 = new ChartFormats(){ Count = 5U };

            ChartFormat chartFormat47 = new ChartFormat(){ Chart = 4U, Format = 0U, Series = true };

            PivotArea pivotArea47 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences47 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference47 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem69 = new FieldItem(){ Val = 0U };

            pivotAreaReference47.Append(fieldItem69);

            pivotAreaReferences47.Append(pivotAreaReference47);

            pivotArea47.Append(pivotAreaReferences47);

            chartFormat47.Append(pivotArea47);

            ChartFormat chartFormat48 = new ChartFormat(){ Chart = 5U, Format = 2U, Series = true };

            PivotArea pivotArea48 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences48 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference48 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem70 = new FieldItem(){ Val = 0U };

            pivotAreaReference48.Append(fieldItem70);

            pivotAreaReferences48.Append(pivotAreaReference48);

            pivotArea48.Append(pivotAreaReferences48);

            chartFormat48.Append(pivotArea48);

            ChartFormat chartFormat49 = new ChartFormat(){ Chart = 6U, Format = 0U, Series = true };

            PivotArea pivotArea49 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences49 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference49 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem71 = new FieldItem(){ Val = 0U };

            pivotAreaReference49.Append(fieldItem71);

            pivotAreaReferences49.Append(pivotAreaReference49);

            pivotArea49.Append(pivotAreaReferences49);

            chartFormat49.Append(pivotArea49);

            ChartFormat chartFormat50 = new ChartFormat(){ Chart = 7U, Format = 14U, Series = true };

            PivotArea pivotArea50 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences50 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference50 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem72 = new FieldItem(){ Val = 0U };

            pivotAreaReference50.Append(fieldItem72);

            pivotAreaReferences50.Append(pivotAreaReference50);

            pivotArea50.Append(pivotAreaReferences50);

            chartFormat50.Append(pivotArea50);

            ChartFormat chartFormat51 = new ChartFormat(){ Chart = 8U, Format = 1U, Series = true };

            PivotArea pivotArea51 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences51 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference51 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem73 = new FieldItem(){ Val = 0U };

            pivotAreaReference51.Append(fieldItem73);

            pivotAreaReferences51.Append(pivotAreaReference51);

            pivotArea51.Append(pivotAreaReferences51);

            chartFormat51.Append(pivotArea51);

            chartFormats6.Append(chartFormat47);
            chartFormats6.Append(chartFormat48);
            chartFormats6.Append(chartFormat49);
            chartFormats6.Append(chartFormat50);
            chartFormats6.Append(chartFormat51);
            PivotTableStyle pivotTableStyle6 = new PivotTableStyle(){ Name = "PivotStyleLight16", ShowRowHeaders = true, ShowColumnHeaders = true, ShowRowStripes = false, ShowColumnStripes = false, ShowLastColumn = true };

            PivotTableDefinitionExtensionList pivotTableDefinitionExtensionList6 = new PivotTableDefinitionExtensionList();

            PivotTableDefinitionExtension pivotTableDefinitionExtension6 = new PivotTableDefinitionExtension(){ Uri = "{962EF5D1-5CA2-4c93-8EF4-DBF5C05439D2}" };
            pivotTableDefinitionExtension6.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");

            X14.PivotTableDefinition pivotTableDefinition12 = new X14.PivotTableDefinition(){ HideValuesRow = true };
            pivotTableDefinition12.AddNamespaceDeclaration("xm", "http://schemas.microsoft.com/office/excel/2006/main");

            pivotTableDefinitionExtension6.Append(pivotTableDefinition12);

            pivotTableDefinitionExtensionList6.Append(pivotTableDefinitionExtension6);

            pivotTableDefinition11.Append(location6);
            pivotTableDefinition11.Append(pivotFields6);
            pivotTableDefinition11.Append(rowFields6);
            pivotTableDefinition11.Append(rowItems6);
            pivotTableDefinition11.Append(columnItems6);
            pivotTableDefinition11.Append(dataFields6);
            pivotTableDefinition11.Append(chartFormats6);
            pivotTableDefinition11.Append(pivotTableStyle6);
            pivotTableDefinition11.Append(pivotTableDefinitionExtensionList6);

            pivotTablePart6.PivotTableDefinition = pivotTableDefinition11;
        }

        // Generates content of timeLineCachePart6.
        private static void GenerateTimeLineCachePart6Content(TimeLineCachePart timeLineCachePart6)
        {
            X15.TimelineCacheDefinition timelineCacheDefinition6 = new X15.TimelineCacheDefinition(){ Name = "NativeTimeline_DeliveryDate", SourceName = "DeliveryDate" };
            timelineCacheDefinition6.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCachePivotTables timelineCachePivotTables6 = new X15.TimelineCachePivotTables();
            X15.TimelineCachePivotTable timelineCachePivotTable6 = new X15.TimelineCachePivotTable(){ TabId = 2U, Name = "PivotTable1" };

            timelineCachePivotTables6.Append(timelineCachePivotTable6);

            X15.TimelineState timelineState6 = new X15.TimelineState(){ MinimalRefreshVersion = 6U, LastRefreshVersion = 6U, PivotCacheId = 2U, FilterType = PivotFilterValues.Unknown };
            X15.BoundsTimelineRange boundsTimelineRange6 = new X15.BoundsTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2004-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelineState6.Append(boundsTimelineRange6);

            timelineCacheDefinition6.Append(timelineCachePivotTables6);
            timelineCacheDefinition6.Append(timelineState6);

            timeLineCachePart6.TimelineCacheDefinition = timelineCacheDefinition6;
        }

        // Generates content of themePart1.
        private static void GenerateThemePart1Content(ThemePart themePart1)
        {
            A.Theme theme1 = new A.Theme(){ Name = "Office Theme" };
            theme1.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            A.ThemeElements themeElements1 = new A.ThemeElements();

            A.ColorScheme colorScheme1 = new A.ColorScheme(){ Name = "Office" };

            A.Dark1Color dark1Color1 = new A.Dark1Color();
            A.SystemColor systemColor1 = new A.SystemColor(){ Val = A.SystemColorValues.WindowText, LastColor = "000000" };

            dark1Color1.Append(systemColor1);

            A.Light1Color light1Color1 = new A.Light1Color();
            A.SystemColor systemColor2 = new A.SystemColor(){ Val = A.SystemColorValues.Window, LastColor = "FFFFFF" };

            light1Color1.Append(systemColor2);

            A.Dark2Color dark2Color1 = new A.Dark2Color();
            A.RgbColorModelHex rgbColorModelHex1 = new A.RgbColorModelHex(){ Val = "6E747A" };

            dark2Color1.Append(rgbColorModelHex1);

            A.Light2Color light2Color1 = new A.Light2Color();
            A.RgbColorModelHex rgbColorModelHex2 = new A.RgbColorModelHex(){ Val = "E7E6E6" };

            light2Color1.Append(rgbColorModelHex2);

            A.Accent1Color accent1Color1 = new A.Accent1Color();
            A.RgbColorModelHex rgbColorModelHex3 = new A.RgbColorModelHex(){ Val = "5B9BD5" };

            accent1Color1.Append(rgbColorModelHex3);

            A.Accent2Color accent2Color1 = new A.Accent2Color();
            A.RgbColorModelHex rgbColorModelHex4 = new A.RgbColorModelHex(){ Val = "ED7D31" };

            accent2Color1.Append(rgbColorModelHex4);

            A.Accent3Color accent3Color1 = new A.Accent3Color();
            A.RgbColorModelHex rgbColorModelHex5 = new A.RgbColorModelHex(){ Val = "A5A5A5" };

            accent3Color1.Append(rgbColorModelHex5);

            A.Accent4Color accent4Color1 = new A.Accent4Color();
            A.RgbColorModelHex rgbColorModelHex6 = new A.RgbColorModelHex(){ Val = "FFC000" };

            accent4Color1.Append(rgbColorModelHex6);

            A.Accent5Color accent5Color1 = new A.Accent5Color();
            A.RgbColorModelHex rgbColorModelHex7 = new A.RgbColorModelHex(){ Val = "4472C4" };

            accent5Color1.Append(rgbColorModelHex7);

            A.Accent6Color accent6Color1 = new A.Accent6Color();
            A.RgbColorModelHex rgbColorModelHex8 = new A.RgbColorModelHex(){ Val = "70AD47" };

            accent6Color1.Append(rgbColorModelHex8);

            A.Hyperlink hyperlink1 = new A.Hyperlink();
            A.RgbColorModelHex rgbColorModelHex9 = new A.RgbColorModelHex(){ Val = "085296" };

            hyperlink1.Append(rgbColorModelHex9);

            A.FollowedHyperlinkColor followedHyperlinkColor1 = new A.FollowedHyperlinkColor();
            A.RgbColorModelHex rgbColorModelHex10 = new A.RgbColorModelHex(){ Val = "993366" };

            followedHyperlinkColor1.Append(rgbColorModelHex10);

            colorScheme1.Append(dark1Color1);
            colorScheme1.Append(light1Color1);
            colorScheme1.Append(dark2Color1);
            colorScheme1.Append(light2Color1);
            colorScheme1.Append(accent1Color1);
            colorScheme1.Append(accent2Color1);
            colorScheme1.Append(accent3Color1);
            colorScheme1.Append(accent4Color1);
            colorScheme1.Append(accent5Color1);
            colorScheme1.Append(accent6Color1);
            colorScheme1.Append(hyperlink1);
            colorScheme1.Append(followedHyperlinkColor1);

            A.FontScheme fontScheme3 = new A.FontScheme(){ Name = "Office" };

            A.MajorFont majorFont1 = new A.MajorFont();
            A.LatinFont latinFont16 = new A.LatinFont(){ Typeface = "Cambria" };
            A.EastAsianFont eastAsianFont16 = new A.EastAsianFont(){ Typeface = string.Empty };
            A.ComplexScriptFont complexScriptFont16 = new A.ComplexScriptFont(){ Typeface = string.Empty };
            A.SupplementalFont supplementalFont1 = new A.SupplementalFont(){ Script = "Jpan", Typeface = "ＭＳ Ｐゴシック" };
            A.SupplementalFont supplementalFont2 = new A.SupplementalFont(){ Script = "Hang", Typeface = "맑은 고딕" };
            A.SupplementalFont supplementalFont3 = new A.SupplementalFont(){ Script = "Hans", Typeface = "宋体" };
            A.SupplementalFont supplementalFont4 = new A.SupplementalFont(){ Script = "Hant", Typeface = "新細明體" };
            A.SupplementalFont supplementalFont5 = new A.SupplementalFont(){ Script = "Arab", Typeface = "Times New Roman" };
            A.SupplementalFont supplementalFont6 = new A.SupplementalFont(){ Script = "Hebr", Typeface = "Times New Roman" };
            A.SupplementalFont supplementalFont7 = new A.SupplementalFont(){ Script = "Thai", Typeface = "Tahoma" };
            A.SupplementalFont supplementalFont8 = new A.SupplementalFont(){ Script = "Ethi", Typeface = "Nyala" };
            A.SupplementalFont supplementalFont9 = new A.SupplementalFont(){ Script = "Beng", Typeface = "Vrinda" };
            A.SupplementalFont supplementalFont10 = new A.SupplementalFont(){ Script = "Gujr", Typeface = "Shruti" };
            A.SupplementalFont supplementalFont11 = new A.SupplementalFont(){ Script = "Khmr", Typeface = "MoolBoran" };
            A.SupplementalFont supplementalFont12 = new A.SupplementalFont(){ Script = "Knda", Typeface = "Tunga" };
            A.SupplementalFont supplementalFont13 = new A.SupplementalFont(){ Script = "Guru", Typeface = "Raavi" };
            A.SupplementalFont supplementalFont14 = new A.SupplementalFont(){ Script = "Cans", Typeface = "Euphemia" };
            A.SupplementalFont supplementalFont15 = new A.SupplementalFont(){ Script = "Cher", Typeface = "Plantagenet Cherokee" };
            A.SupplementalFont supplementalFont16 = new A.SupplementalFont(){ Script = "Yiii", Typeface = "Microsoft Yi Baiti" };
            A.SupplementalFont supplementalFont17 = new A.SupplementalFont(){ Script = "Tibt", Typeface = "Microsoft Himalaya" };
            A.SupplementalFont supplementalFont18 = new A.SupplementalFont(){ Script = "Thaa", Typeface = "MV Boli" };
            A.SupplementalFont supplementalFont19 = new A.SupplementalFont(){ Script = "Deva", Typeface = "Mangal" };
            A.SupplementalFont supplementalFont20 = new A.SupplementalFont(){ Script = "Telu", Typeface = "Gautami" };
            A.SupplementalFont supplementalFont21 = new A.SupplementalFont(){ Script = "Taml", Typeface = "Latha" };
            A.SupplementalFont supplementalFont22 = new A.SupplementalFont(){ Script = "Syrc", Typeface = "Estrangelo Edessa" };
            A.SupplementalFont supplementalFont23 = new A.SupplementalFont(){ Script = "Orya", Typeface = "Kalinga" };
            A.SupplementalFont supplementalFont24 = new A.SupplementalFont(){ Script = "Mlym", Typeface = "Kartika" };
            A.SupplementalFont supplementalFont25 = new A.SupplementalFont(){ Script = "Laoo", Typeface = "DokChampa" };
            A.SupplementalFont supplementalFont26 = new A.SupplementalFont(){ Script = "Sinh", Typeface = "Iskoola Pota" };
            A.SupplementalFont supplementalFont27 = new A.SupplementalFont(){ Script = "Mong", Typeface = "Mongolian Baiti" };
            A.SupplementalFont supplementalFont28 = new A.SupplementalFont(){ Script = "Viet", Typeface = "Times New Roman" };
            A.SupplementalFont supplementalFont29 = new A.SupplementalFont(){ Script = "Uigh", Typeface = "Microsoft Uighur" };
            A.SupplementalFont supplementalFont30 = new A.SupplementalFont(){ Script = "Geor", Typeface = "Sylfaen" };

            majorFont1.Append(latinFont16);
            majorFont1.Append(eastAsianFont16);
            majorFont1.Append(complexScriptFont16);
            majorFont1.Append(supplementalFont1);
            majorFont1.Append(supplementalFont2);
            majorFont1.Append(supplementalFont3);
            majorFont1.Append(supplementalFont4);
            majorFont1.Append(supplementalFont5);
            majorFont1.Append(supplementalFont6);
            majorFont1.Append(supplementalFont7);
            majorFont1.Append(supplementalFont8);
            majorFont1.Append(supplementalFont9);
            majorFont1.Append(supplementalFont10);
            majorFont1.Append(supplementalFont11);
            majorFont1.Append(supplementalFont12);
            majorFont1.Append(supplementalFont13);
            majorFont1.Append(supplementalFont14);
            majorFont1.Append(supplementalFont15);
            majorFont1.Append(supplementalFont16);
            majorFont1.Append(supplementalFont17);
            majorFont1.Append(supplementalFont18);
            majorFont1.Append(supplementalFont19);
            majorFont1.Append(supplementalFont20);
            majorFont1.Append(supplementalFont21);
            majorFont1.Append(supplementalFont22);
            majorFont1.Append(supplementalFont23);
            majorFont1.Append(supplementalFont24);
            majorFont1.Append(supplementalFont25);
            majorFont1.Append(supplementalFont26);
            majorFont1.Append(supplementalFont27);
            majorFont1.Append(supplementalFont28);
            majorFont1.Append(supplementalFont29);
            majorFont1.Append(supplementalFont30);

            A.MinorFont minorFont1 = new A.MinorFont();
            A.LatinFont latinFont17 = new A.LatinFont(){ Typeface = "Calibri" };
            A.EastAsianFont eastAsianFont17 = new A.EastAsianFont(){ Typeface = string.Empty };
            A.ComplexScriptFont complexScriptFont17 = new A.ComplexScriptFont(){ Typeface = string.Empty };
            A.SupplementalFont supplementalFont31 = new A.SupplementalFont(){ Script = "Jpan", Typeface = "ＭＳ Ｐゴシック" };
            A.SupplementalFont supplementalFont32 = new A.SupplementalFont(){ Script = "Hang", Typeface = "맑은 고딕" };
            A.SupplementalFont supplementalFont33 = new A.SupplementalFont(){ Script = "Hans", Typeface = "宋体" };
            A.SupplementalFont supplementalFont34 = new A.SupplementalFont(){ Script = "Hant", Typeface = "新細明體" };
            A.SupplementalFont supplementalFont35 = new A.SupplementalFont(){ Script = "Arab", Typeface = "Arial" };
            A.SupplementalFont supplementalFont36 = new A.SupplementalFont(){ Script = "Hebr", Typeface = "Arial" };
            A.SupplementalFont supplementalFont37 = new A.SupplementalFont(){ Script = "Thai", Typeface = "Tahoma" };
            A.SupplementalFont supplementalFont38 = new A.SupplementalFont(){ Script = "Ethi", Typeface = "Nyala" };
            A.SupplementalFont supplementalFont39 = new A.SupplementalFont(){ Script = "Beng", Typeface = "Vrinda" };
            A.SupplementalFont supplementalFont40 = new A.SupplementalFont(){ Script = "Gujr", Typeface = "Shruti" };
            A.SupplementalFont supplementalFont41 = new A.SupplementalFont(){ Script = "Khmr", Typeface = "DaunPenh" };
            A.SupplementalFont supplementalFont42 = new A.SupplementalFont(){ Script = "Knda", Typeface = "Tunga" };
            A.SupplementalFont supplementalFont43 = new A.SupplementalFont(){ Script = "Guru", Typeface = "Raavi" };
            A.SupplementalFont supplementalFont44 = new A.SupplementalFont(){ Script = "Cans", Typeface = "Euphemia" };
            A.SupplementalFont supplementalFont45 = new A.SupplementalFont(){ Script = "Cher", Typeface = "Plantagenet Cherokee" };
            A.SupplementalFont supplementalFont46 = new A.SupplementalFont(){ Script = "Yiii", Typeface = "Microsoft Yi Baiti" };
            A.SupplementalFont supplementalFont47 = new A.SupplementalFont(){ Script = "Tibt", Typeface = "Microsoft Himalaya" };
            A.SupplementalFont supplementalFont48 = new A.SupplementalFont(){ Script = "Thaa", Typeface = "MV Boli" };
            A.SupplementalFont supplementalFont49 = new A.SupplementalFont(){ Script = "Deva", Typeface = "Mangal" };
            A.SupplementalFont supplementalFont50 = new A.SupplementalFont(){ Script = "Telu", Typeface = "Gautami" };
            A.SupplementalFont supplementalFont51 = new A.SupplementalFont(){ Script = "Taml", Typeface = "Latha" };
            A.SupplementalFont supplementalFont52 = new A.SupplementalFont(){ Script = "Syrc", Typeface = "Estrangelo Edessa" };
            A.SupplementalFont supplementalFont53 = new A.SupplementalFont(){ Script = "Orya", Typeface = "Kalinga" };
            A.SupplementalFont supplementalFont54 = new A.SupplementalFont(){ Script = "Mlym", Typeface = "Kartika" };
            A.SupplementalFont supplementalFont55 = new A.SupplementalFont(){ Script = "Laoo", Typeface = "DokChampa" };
            A.SupplementalFont supplementalFont56 = new A.SupplementalFont(){ Script = "Sinh", Typeface = "Iskoola Pota" };
            A.SupplementalFont supplementalFont57 = new A.SupplementalFont(){ Script = "Mong", Typeface = "Mongolian Baiti" };
            A.SupplementalFont supplementalFont58 = new A.SupplementalFont(){ Script = "Viet", Typeface = "Arial" };
            A.SupplementalFont supplementalFont59 = new A.SupplementalFont(){ Script = "Uigh", Typeface = "Microsoft Uighur" };
            A.SupplementalFont supplementalFont60 = new A.SupplementalFont(){ Script = "Geor", Typeface = "Sylfaen" };

            minorFont1.Append(latinFont17);
            minorFont1.Append(eastAsianFont17);
            minorFont1.Append(complexScriptFont17);
            minorFont1.Append(supplementalFont31);
            minorFont1.Append(supplementalFont32);
            minorFont1.Append(supplementalFont33);
            minorFont1.Append(supplementalFont34);
            minorFont1.Append(supplementalFont35);
            minorFont1.Append(supplementalFont36);
            minorFont1.Append(supplementalFont37);
            minorFont1.Append(supplementalFont38);
            minorFont1.Append(supplementalFont39);
            minorFont1.Append(supplementalFont40);
            minorFont1.Append(supplementalFont41);
            minorFont1.Append(supplementalFont42);
            minorFont1.Append(supplementalFont43);
            minorFont1.Append(supplementalFont44);
            minorFont1.Append(supplementalFont45);
            minorFont1.Append(supplementalFont46);
            minorFont1.Append(supplementalFont47);
            minorFont1.Append(supplementalFont48);
            minorFont1.Append(supplementalFont49);
            minorFont1.Append(supplementalFont50);
            minorFont1.Append(supplementalFont51);
            minorFont1.Append(supplementalFont52);
            minorFont1.Append(supplementalFont53);
            minorFont1.Append(supplementalFont54);
            minorFont1.Append(supplementalFont55);
            minorFont1.Append(supplementalFont56);
            minorFont1.Append(supplementalFont57);
            minorFont1.Append(supplementalFont58);
            minorFont1.Append(supplementalFont59);
            minorFont1.Append(supplementalFont60);

            fontScheme3.Append(majorFont1);
            fontScheme3.Append(minorFont1);

            A.FormatScheme formatScheme1 = new A.FormatScheme(){ Name = "Office" };

            A.FillStyleList fillStyleList1 = new A.FillStyleList();

            A.SolidFill solidFill92 = new A.SolidFill();
            A.SchemeColor schemeColor68 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };

            solidFill92.Append(schemeColor68);

            A.GradientFill gradientFill1 = new A.GradientFill(){ RotateWithShape = true };

            A.GradientStopList gradientStopList1 = new A.GradientStopList();

            A.GradientStop gradientStop1 = new A.GradientStop(){ Position = 0 };

            A.SchemeColor schemeColor69 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.LuminanceModulation luminanceModulation26 = new A.LuminanceModulation(){ Val = 157000 };
            A.SaturationModulation saturationModulation1 = new A.SaturationModulation(){ Val = 101000 };

            schemeColor69.Append(luminanceModulation26);
            schemeColor69.Append(saturationModulation1);

            gradientStop1.Append(schemeColor69);

            A.GradientStop gradientStop2 = new A.GradientStop(){ Position = 50000 };

            A.SchemeColor schemeColor70 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.LuminanceModulation luminanceModulation27 = new A.LuminanceModulation(){ Val = 137000 };
            A.SaturationModulation saturationModulation2 = new A.SaturationModulation(){ Val = 103000 };

            schemeColor70.Append(luminanceModulation27);
            schemeColor70.Append(saturationModulation2);

            gradientStop2.Append(schemeColor70);

            A.GradientStop gradientStop3 = new A.GradientStop(){ Position = 100000 };

            A.SchemeColor schemeColor71 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.LuminanceModulation luminanceModulation28 = new A.LuminanceModulation(){ Val = 115000 };
            A.SaturationModulation saturationModulation3 = new A.SaturationModulation(){ Val = 109000 };

            schemeColor71.Append(luminanceModulation28);
            schemeColor71.Append(saturationModulation3);

            gradientStop3.Append(schemeColor71);

            gradientStopList1.Append(gradientStop1);
            gradientStopList1.Append(gradientStop2);
            gradientStopList1.Append(gradientStop3);
            A.LinearGradientFill linearGradientFill1 = new A.LinearGradientFill(){ Angle = 5400000, Scaled = false };

            gradientFill1.Append(gradientStopList1);
            gradientFill1.Append(linearGradientFill1);

            A.GradientFill gradientFill2 = new A.GradientFill(){ RotateWithShape = true };

            A.GradientStopList gradientStopList2 = new A.GradientStopList();

            A.GradientStop gradientStop4 = new A.GradientStop(){ Position = 0 };

            A.SchemeColor schemeColor72 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.SaturationModulation saturationModulation4 = new A.SaturationModulation(){ Val = 103000 };
            A.LuminanceModulation luminanceModulation29 = new A.LuminanceModulation(){ Val = 118000 };

            schemeColor72.Append(saturationModulation4);
            schemeColor72.Append(luminanceModulation29);

            gradientStop4.Append(schemeColor72);

            A.GradientStop gradientStop5 = new A.GradientStop(){ Position = 50000 };

            A.SchemeColor schemeColor73 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.SaturationModulation saturationModulation5 = new A.SaturationModulation(){ Val = 89000 };
            A.LuminanceModulation luminanceModulation30 = new A.LuminanceModulation(){ Val = 91000 };

            schemeColor73.Append(saturationModulation5);
            schemeColor73.Append(luminanceModulation30);

            gradientStop5.Append(schemeColor73);

            A.GradientStop gradientStop6 = new A.GradientStop(){ Position = 100000 };

            A.SchemeColor schemeColor74 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.LuminanceModulation luminanceModulation31 = new A.LuminanceModulation(){ Val = 69000 };

            schemeColor74.Append(luminanceModulation31);

            gradientStop6.Append(schemeColor74);

            gradientStopList2.Append(gradientStop4);
            gradientStopList2.Append(gradientStop5);
            gradientStopList2.Append(gradientStop6);
            A.LinearGradientFill linearGradientFill2 = new A.LinearGradientFill(){ Angle = 5400000, Scaled = false };

            gradientFill2.Append(gradientStopList2);
            gradientFill2.Append(linearGradientFill2);

            fillStyleList1.Append(solidFill92);
            fillStyleList1.Append(gradientFill1);
            fillStyleList1.Append(gradientFill2);

            A.LineStyleList lineStyleList1 = new A.LineStyleList();

            A.Outline outline75 = new A.Outline(){ Width = 6350, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill93 = new A.SolidFill();
            A.SchemeColor schemeColor75 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };

            solidFill93.Append(schemeColor75);
            A.PresetDash presetDash1 = new A.PresetDash(){ Val = A.PresetLineDashValues.Solid };

            outline75.Append(solidFill93);
            outline75.Append(presetDash1);

            A.Outline outline76 = new A.Outline(){ Width = 12700, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill94 = new A.SolidFill();
            A.SchemeColor schemeColor76 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };

            solidFill94.Append(schemeColor76);
            A.PresetDash presetDash2 = new A.PresetDash(){ Val = A.PresetLineDashValues.Solid };

            outline76.Append(solidFill94);
            outline76.Append(presetDash2);

            A.Outline outline77 = new A.Outline(){ Width = 19050, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill95 = new A.SolidFill();
            A.SchemeColor schemeColor77 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };

            solidFill95.Append(schemeColor77);
            A.PresetDash presetDash3 = new A.PresetDash(){ Val = A.PresetLineDashValues.Solid };

            outline77.Append(solidFill95);
            outline77.Append(presetDash3);

            lineStyleList1.Append(outline75);
            lineStyleList1.Append(outline76);
            lineStyleList1.Append(outline77);

            A.EffectStyleList effectStyleList1 = new A.EffectStyleList();

            A.EffectStyle effectStyle1 = new A.EffectStyle();
            A.EffectList effectList63 = new A.EffectList();

            effectStyle1.Append(effectList63);

            A.EffectStyle effectStyle2 = new A.EffectStyle();
            A.EffectList effectList64 = new A.EffectList();

            effectStyle2.Append(effectList64);

            A.EffectStyle effectStyle3 = new A.EffectStyle();

            A.EffectList effectList65 = new A.EffectList();

            A.OuterShadow outerShadow1 = new A.OuterShadow(){ BlurRadius = 57150L, Distance = 19050L, Direction = 5400000, Alignment = A.RectangleAlignmentValues.Center, RotateWithShape = false };

            A.RgbColorModelHex rgbColorModelHex11 = new A.RgbColorModelHex(){ Val = "000000" };
            A.Alpha alpha1 = new A.Alpha(){ Val = 63000 };

            rgbColorModelHex11.Append(alpha1);

            outerShadow1.Append(rgbColorModelHex11);

            effectList65.Append(outerShadow1);

            effectStyle3.Append(effectList65);

            effectStyleList1.Append(effectStyle1);
            effectStyleList1.Append(effectStyle2);
            effectStyleList1.Append(effectStyle3);

            A.BackgroundFillStyleList backgroundFillStyleList1 = new A.BackgroundFillStyleList();

            A.SolidFill solidFill96 = new A.SolidFill();
            A.SchemeColor schemeColor78 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };

            solidFill96.Append(schemeColor78);

            A.GradientFill gradientFill3 = new A.GradientFill(){ RotateWithShape = true };

            A.GradientStopList gradientStopList3 = new A.GradientStopList();

            A.GradientStop gradientStop7 = new A.GradientStop(){ Position = 0 };

            A.SchemeColor schemeColor79 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.Tint tint33 = new A.Tint(){ Val = 100000 };
            A.SaturationModulation saturationModulation6 = new A.SaturationModulation(){ Val = 100000 };
            A.Shade shade1 = new A.Shade(){ Val = 0 };

            schemeColor79.Append(tint33);
            schemeColor79.Append(saturationModulation6);
            schemeColor79.Append(shade1);

            gradientStop7.Append(schemeColor79);

            A.GradientStop gradientStop8 = new A.GradientStop(){ Position = 0 };
            A.RgbColorModelPercentage rgbColorModelPercentage1 = new A.RgbColorModelPercentage(){ RedPortion = 0, GreenPortion = 0, BluePortion = 0 };

            gradientStop8.Append(rgbColorModelPercentage1);

            A.GradientStop gradientStop9 = new A.GradientStop(){ Position = 100000 };

            A.SchemeColor schemeColor80 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.Shade shade2 = new A.Shade(){ Val = 100000 };
            A.SaturationModulation saturationModulation7 = new A.SaturationModulation(){ Val = 100000 };

            schemeColor80.Append(shade2);
            schemeColor80.Append(saturationModulation7);

            gradientStop9.Append(schemeColor80);

            gradientStopList3.Append(gradientStop7);
            gradientStopList3.Append(gradientStop8);
            gradientStopList3.Append(gradientStop9);
            A.LinearGradientFill linearGradientFill3 = new A.LinearGradientFill(){ Angle = 5400000, Scaled = false };

            gradientFill3.Append(gradientStopList3);
            gradientFill3.Append(linearGradientFill3);

            A.GradientFill gradientFill4 = new A.GradientFill(){ RotateWithShape = true };

            A.GradientStopList gradientStopList4 = new A.GradientStopList();

            A.GradientStop gradientStop10 = new A.GradientStop(){ Position = 0 };

            A.SchemeColor schemeColor81 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.Tint tint34 = new A.Tint(){ Val = 80000 };
            A.SaturationModulation saturationModulation8 = new A.SaturationModulation(){ Val = 300000 };

            schemeColor81.Append(tint34);
            schemeColor81.Append(saturationModulation8);

            gradientStop10.Append(schemeColor81);

            A.GradientStop gradientStop11 = new A.GradientStop(){ Position = 100000 };

            A.SchemeColor schemeColor82 = new A.SchemeColor(){ Val = A.SchemeColorValues.PhColor };
            A.Shade shade3 = new A.Shade(){ Val = 30000 };
            A.SaturationModulation saturationModulation9 = new A.SaturationModulation(){ Val = 200000 };

            schemeColor82.Append(shade3);
            schemeColor82.Append(saturationModulation9);

            gradientStop11.Append(schemeColor82);

            gradientStopList4.Append(gradientStop10);
            gradientStopList4.Append(gradientStop11);

            A.PathGradientFill pathGradientFill1 = new A.PathGradientFill(){ Path = A.PathShadeValues.Circle };
            A.FillToRectangle fillToRectangle1 = new A.FillToRectangle(){ Left = 50000, Top = 50000, Right = 50000, Bottom = 50000 };

            pathGradientFill1.Append(fillToRectangle1);

            gradientFill4.Append(gradientStopList4);
            gradientFill4.Append(pathGradientFill1);

            backgroundFillStyleList1.Append(solidFill96);
            backgroundFillStyleList1.Append(gradientFill3);
            backgroundFillStyleList1.Append(gradientFill4);

            formatScheme1.Append(fillStyleList1);
            formatScheme1.Append(lineStyleList1);
            formatScheme1.Append(effectStyleList1);
            formatScheme1.Append(backgroundFillStyleList1);

            themeElements1.Append(colorScheme1);
            themeElements1.Append(fontScheme3);
            themeElements1.Append(formatScheme1);
            A.ObjectDefaults objectDefaults1 = new A.ObjectDefaults();
            A.ExtraColorSchemeList extraColorSchemeList1 = new A.ExtraColorSchemeList();

            theme1.Append(themeElements1);
            theme1.Append(objectDefaults1);
            theme1.Append(extraColorSchemeList1);

            themePart1.Theme = theme1;
        }

        // Generates content of worksheetPart9.
        private static void GenerateWorksheetPart9Content(WorksheetPart worksheetPart9)
        {
            Worksheet worksheet9 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet9.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet9.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet9.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension9 = new SheetDimension(){ Reference = "A1:B5" };

            SheetViews sheetViews9 = new SheetViews();
            SheetView sheetView9 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews9.Append(sheetView9);
            SheetFormatProperties sheetFormatProperties9 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns9 = new Columns();
            Column column55 = new Column(){ Min = 1U, Max = 1U, Width = 14.140625D, BestFit = true, CustomWidth = true };
            Column column56 = new Column(){ Min = 2U, Max = 2U, Width = 17.42578125D, CustomWidth = true };
            Column column57 = new Column(){ Min = 3U, Max = 3U, Width = 12.42578125D, CustomWidth = true };
            Column column58 = new Column(){ Min = 4U, Max = 11U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column59 = new Column(){ Min = 12U, Max = 12U, Width = 13D, CustomWidth = true };
            Column column60 = new Column(){ Min = 13U, Max = 20U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column61 = new Column(){ Min = 21U, Max = 23U, Width = 20.42578125D, BestFit = true, CustomWidth = true };

            columns9.Append(column55);
            columns9.Append(column56);
            columns9.Append(column57);
            columns9.Append(column58);
            columns9.Append(column59);
            columns9.Append(column60);
            columns9.Append(column61);

            SheetData sheetData9 = new SheetData();

            Row row53 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell193 = new Cell(){ CellReference = "A1", StyleIndex = 5U, DataType = CellValues.SharedString };
            CellValue cellValue193 = new CellValue();
            cellValue193.Text = "29";

            cell193.Append(cellValue193);

            Cell cell194 = new Cell(){ CellReference = "B1", DataType = CellValues.SharedString };
            CellValue cellValue194 = new CellValue();
            cellValue194.Text = "28";

            cell194.Append(cellValue194);

            row53.Append(cell193);
            row53.Append(cell194);

            Row row54 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell195 = new Cell(){ CellReference = "A2", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue195 = new CellValue();
            cellValue195.Text = "6";

            cell195.Append(cellValue195);

            Cell cell196 = new Cell(){ CellReference = "B2", StyleIndex = 7U };
            CellValue cellValue196 = new CellValue();
            cellValue196.Text = "19";

            cell196.Append(cellValue196);

            row54.Append(cell195);
            row54.Append(cell196);

            Row row55 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell197 = new Cell(){ CellReference = "A3", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue197 = new CellValue();
            cellValue197.Text = "8";

            cell197.Append(cellValue197);

            Cell cell198 = new Cell(){ CellReference = "B3", StyleIndex = 7U };
            CellValue cellValue198 = new CellValue();
            cellValue198.Text = "13";

            cell198.Append(cellValue198);

            row55.Append(cell197);
            row55.Append(cell198);

            Row row56 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell199 = new Cell(){ CellReference = "A4", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue199 = new CellValue();
            cellValue199.Text = "11";

            cell199.Append(cellValue199);

            Cell cell200 = new Cell(){ CellReference = "B4", StyleIndex = 7U };
            CellValue cellValue200 = new CellValue();
            cellValue200.Text = "33";

            cell200.Append(cellValue200);

            row56.Append(cell199);
            row56.Append(cell200);

            Row row57 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell201 = new Cell(){ CellReference = "A5", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue201 = new CellValue();
            cellValue201.Text = "30";

            cell201.Append(cellValue201);

            Cell cell202 = new Cell(){ CellReference = "B5", StyleIndex = 7U };
            CellValue cellValue202 = new CellValue();
            cellValue202.Text = "65";

            cell202.Append(cellValue202);

            row57.Append(cell201);
            row57.Append(cell202);

            sheetData9.Append(row53);
            sheetData9.Append(row54);
            sheetData9.Append(row55);
            sheetData9.Append(row56);
            sheetData9.Append(row57);
            PhoneticProperties phoneticProperties15 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins21 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            S.Drawing drawing7 = new S.Drawing(){ Id = "rId2" };

            WorksheetExtensionList worksheetExtensionList7 = new WorksheetExtensionList();

            WorksheetExtension worksheetExtension7 = new WorksheetExtension(){ Uri = "{7E03D99C-DC04-49d9-9315-930204A7B6E9}" };
            worksheetExtension7.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineReferences timelineReferences7 = new X15.TimelineReferences();
            X15.TimelineReference timelineReference7 = new X15.TimelineReference(){ Id = "rId3" };

            timelineReferences7.Append(timelineReference7);

            worksheetExtension7.Append(timelineReferences7);

            worksheetExtensionList7.Append(worksheetExtension7);

            worksheet9.Append(sheetDimension9);
            worksheet9.Append(sheetViews9);
            worksheet9.Append(sheetFormatProperties9);
            worksheet9.Append(columns9);
            worksheet9.Append(sheetData9);
            worksheet9.Append(phoneticProperties15);
            worksheet9.Append(pageMargins21);
            worksheet9.Append(drawing7);
            worksheet9.Append(worksheetExtensionList7);

            worksheetPart9.Worksheet = worksheet9;
        }

        // Generates content of timeLinePart7.
        private static void GenerateTimeLinePart7Content(TimeLinePart timeLinePart7)
        {
            X15.Timelines timelines7 = new X15.Timelines(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x" }  };
            timelines7.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            timelines7.AddNamespaceDeclaration("x", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");
            X15.Timeline timeline13 = new X15.Timeline(){ Name = "DeliveryDate 14", Cache = "NativeTimeline_DeliveryDate6", Caption = "ScrollPosition1", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline14 = new X15.Timeline(){ Name = "DeliveryDate 15", Cache = "NativeTimeline_DeliveryDate6", Caption = "ScrollPosition2", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelines7.Append(timeline13);
            timelines7.Append(timeline14);

            timeLinePart7.Timelines = timelines7;
        }

        // Generates content of drawingsPart7.
        private static void GenerateDrawingsPart7Content(DrawingsPart drawingsPart7)
        {
            Xdr.WorksheetDrawing worksheetDrawing7 = new Xdr.WorksheetDrawing();
            worksheetDrawing7.AddNamespaceDeclaration("xdr", "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing");
            worksheetDrawing7.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            Xdr.TwoCellAnchor twoCellAnchor25 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker25 = new Xdr.FromMarker();
            Xdr.ColumnId columnId49 = new Xdr.ColumnId();
            columnId49.Text = "2";
            Xdr.ColumnOffset columnOffset49 = new Xdr.ColumnOffset();
            columnOffset49.Text = "185737";
            Xdr.RowId rowId49 = new Xdr.RowId();
            rowId49.Text = "0";
            Xdr.RowOffset rowOffset49 = new Xdr.RowOffset();
            rowOffset49.Text = "0";

            fromMarker25.Append(columnId49);
            fromMarker25.Append(columnOffset49);
            fromMarker25.Append(rowId49);
            fromMarker25.Append(rowOffset49);

            Xdr.ToMarker toMarker25 = new Xdr.ToMarker();
            Xdr.ColumnId columnId50 = new Xdr.ColumnId();
            columnId50.Text = "9";
            Xdr.ColumnOffset columnOffset50 = new Xdr.ColumnOffset();
            columnOffset50.Text = "90487";
            Xdr.RowId rowId50 = new Xdr.RowId();
            rowId50.Text = "14";
            Xdr.RowOffset rowOffset50 = new Xdr.RowOffset();
            rowOffset50.Text = "76200";

            toMarker25.Append(columnId50);
            toMarker25.Append(columnOffset50);
            toMarker25.Append(rowId50);
            toMarker25.Append(rowOffset50);

            Xdr.GraphicFrame graphicFrame25 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties25 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties37 = new Xdr.NonVisualDrawingProperties(){ Id = 2U, Name = "Chart 1" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties25 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks11 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties25.Append(graphicFrameLocks11);

            nonVisualGraphicFrameProperties25.Append(nonVisualDrawingProperties37);
            nonVisualGraphicFrameProperties25.Append(nonVisualGraphicFrameDrawingProperties25);

            Xdr.Transform transform25 = new Xdr.Transform();
            A.Offset offset37 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents37 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform25.Append(offset37);
            transform25.Append(extents37);

            A.Graphic graphic25 = new A.Graphic();

            A.GraphicData graphicData25 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference13 = new C.ChartReference(){ Id = "rId1" };
            chartReference13.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference13.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData25.Append(chartReference13);

            graphic25.Append(graphicData25);

            graphicFrame25.Append(nonVisualGraphicFrameProperties25);
            graphicFrame25.Append(transform25);
            graphicFrame25.Append(graphic25);
            Xdr.ClientData clientData25 = new Xdr.ClientData();

            twoCellAnchor25.Append(fromMarker25);
            twoCellAnchor25.Append(toMarker25);
            twoCellAnchor25.Append(graphicFrame25);
            twoCellAnchor25.Append(clientData25);

            Xdr.TwoCellAnchor twoCellAnchor26 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker26 = new Xdr.FromMarker();
            Xdr.ColumnId columnId51 = new Xdr.ColumnId();
            columnId51.Text = "2";
            Xdr.ColumnOffset columnOffset51 = new Xdr.ColumnOffset();
            columnOffset51.Text = "200025";
            Xdr.RowId rowId51 = new Xdr.RowId();
            rowId51.Text = "14";
            Xdr.RowOffset rowOffset51 = new Xdr.RowOffset();
            rowOffset51.Text = "147637";

            fromMarker26.Append(columnId51);
            fromMarker26.Append(columnOffset51);
            fromMarker26.Append(rowId51);
            fromMarker26.Append(rowOffset51);

            Xdr.ToMarker toMarker26 = new Xdr.ToMarker();
            Xdr.ColumnId columnId52 = new Xdr.ColumnId();
            columnId52.Text = "7";
            Xdr.ColumnOffset columnOffset52 = new Xdr.ColumnOffset();
            columnOffset52.Text = "476250";
            Xdr.RowId rowId52 = new Xdr.RowId();
            rowId52.Text = "29";
            Xdr.RowOffset rowOffset52 = new Xdr.RowOffset();
            rowOffset52.Text = "33337";

            toMarker26.Append(columnId52);
            toMarker26.Append(columnOffset52);
            toMarker26.Append(rowId52);
            toMarker26.Append(rowOffset52);

            Xdr.GraphicFrame graphicFrame26 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties26 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties38 = new Xdr.NonVisualDrawingProperties(){ Id = 3U, Name = "グラフ 2" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties26 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks12 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties26.Append(graphicFrameLocks12);

            nonVisualGraphicFrameProperties26.Append(nonVisualDrawingProperties38);
            nonVisualGraphicFrameProperties26.Append(nonVisualGraphicFrameDrawingProperties26);

            Xdr.Transform transform26 = new Xdr.Transform();
            A.Offset offset38 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents38 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform26.Append(offset38);
            transform26.Append(extents38);

            A.Graphic graphic26 = new A.Graphic();

            A.GraphicData graphicData26 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference14 = new C.ChartReference(){ Id = "rId2" };
            chartReference14.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference14.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData26.Append(chartReference14);

            graphic26.Append(graphicData26);

            graphicFrame26.Append(nonVisualGraphicFrameProperties26);
            graphicFrame26.Append(transform26);
            graphicFrame26.Append(graphic26);
            Xdr.ClientData clientData26 = new Xdr.ClientData();

            twoCellAnchor26.Append(fromMarker26);
            twoCellAnchor26.Append(toMarker26);
            twoCellAnchor26.Append(graphicFrame26);
            twoCellAnchor26.Append(clientData26);

            Xdr.TwoCellAnchor twoCellAnchor27 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker27 = new Xdr.FromMarker();
            Xdr.ColumnId columnId53 = new Xdr.ColumnId();
            columnId53.Text = "10";
            Xdr.ColumnOffset columnOffset53 = new Xdr.ColumnOffset();
            columnOffset53.Text = "9525";
            Xdr.RowId rowId53 = new Xdr.RowId();
            rowId53.Text = "1";
            Xdr.RowOffset rowOffset53 = new Xdr.RowOffset();
            rowOffset53.Text = "0";

            fromMarker27.Append(columnId53);
            fromMarker27.Append(columnOffset53);
            fromMarker27.Append(rowId53);
            fromMarker27.Append(rowOffset53);

            Xdr.ToMarker toMarker27 = new Xdr.ToMarker();
            Xdr.ColumnId columnId54 = new Xdr.ColumnId();
            columnId54.Text = "13";
            Xdr.ColumnOffset columnOffset54 = new Xdr.ColumnOffset();
            columnOffset54.Text = "742950";
            Xdr.RowId rowId54 = new Xdr.RowId();
            rowId54.Text = "7";
            Xdr.RowOffset rowOffset54 = new Xdr.RowOffset();
            rowOffset54.Text = "47625";

            toMarker27.Append(columnId54);
            toMarker27.Append(columnOffset54);
            toMarker27.Append(rowId54);
            toMarker27.Append(rowOffset54);

            AlternateContent alternateContent26 = new AlternateContent();
            alternateContent26.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent26.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice26 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame27 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties27 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties39 = new Xdr.NonVisualDrawingProperties(){ Id = 4U, Name = "DeliveryDate 14" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties27 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties27.Append(nonVisualDrawingProperties39);
            nonVisualGraphicFrameProperties27.Append(nonVisualGraphicFrameDrawingProperties27);

            Xdr.Transform transform27 = new Xdr.Transform();
            A.Offset offset39 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents39 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform27.Append(offset39);
            transform27.Append(extents39);

            A.Graphic graphic27 = new A.Graphic();

            A.GraphicData graphicData27 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer13 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 14" };
            timeSlicer13.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData27.Append(timeSlicer13);

            graphic27.Append(graphicData27);

            graphicFrame27.Append(nonVisualGraphicFrameProperties27);
            graphicFrame27.Append(transform27);
            graphicFrame27.Append(graphic27);

            alternateContentChoice26.Append(graphicFrame27);

            AlternateContentFallback alternateContentFallback25 = new AlternateContentFallback();
            alternateContentFallback25.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback25.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape13 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties13 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties40 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties13 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks13 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties13.Append(shapeLocks13);

            nonVisualShapeProperties13.Append(nonVisualDrawingProperties40);
            nonVisualShapeProperties13.Append(nonVisualShapeDrawingProperties13);

            Xdr.ShapeProperties shapeProperties50 = new Xdr.ShapeProperties();

            A.Transform2D transform2D13 = new A.Transform2D();
            A.Offset offset40 = new A.Offset(){ X = 8610600L, Y = 190500L };
            A.Extents extents40 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D13.Append(offset40);
            transform2D13.Append(extents40);

            A.PresetGeometry presetGeometry13 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList13 = new A.AdjustValueList();

            presetGeometry13.Append(adjustValueList13);

            A.SolidFill solidFill97 = new A.SolidFill();
            A.PresetColor presetColor25 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill97.Append(presetColor25);

            A.Outline outline78 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill98 = new A.SolidFill();
            A.PresetColor presetColor26 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill98.Append(presetColor26);

            outline78.Append(solidFill98);

            shapeProperties50.Append(transform2D13);
            shapeProperties50.Append(presetGeometry13);
            shapeProperties50.Append(solidFill97);
            shapeProperties50.Append(outline78);

            Xdr.TextBody textBody13 = new Xdr.TextBody();
            A.BodyProperties bodyProperties33 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle33 = new A.ListStyle();

            A.Paragraph paragraph33 = new A.Paragraph();

            A.Run run13 = new A.Run();
            A.RunProperties runProperties13 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text51 = new A.Text();
            text51.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run13.Append(runProperties13);
            run13.Append(text51);

            paragraph33.Append(run13);

            textBody13.Append(bodyProperties33);
            textBody13.Append(listStyle33);
            textBody13.Append(paragraph33);

            shape13.Append(nonVisualShapeProperties13);
            shape13.Append(shapeProperties50);
            shape13.Append(textBody13);

            alternateContentFallback25.Append(shape13);

            alternateContent26.Append(alternateContentChoice26);
            alternateContent26.Append(alternateContentFallback25);
            Xdr.ClientData clientData27 = new Xdr.ClientData();

            twoCellAnchor27.Append(fromMarker27);
            twoCellAnchor27.Append(toMarker27);
            twoCellAnchor27.Append(alternateContent26);
            twoCellAnchor27.Append(clientData27);

            Xdr.TwoCellAnchor twoCellAnchor28 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker28 = new Xdr.FromMarker();
            Xdr.ColumnId columnId55 = new Xdr.ColumnId();
            columnId55.Text = "10";
            Xdr.ColumnOffset columnOffset55 = new Xdr.ColumnOffset();
            columnOffset55.Text = "19050";
            Xdr.RowId rowId55 = new Xdr.RowId();
            rowId55.Text = "9";
            Xdr.RowOffset rowOffset55 = new Xdr.RowOffset();
            rowOffset55.Text = "9525";

            fromMarker28.Append(columnId55);
            fromMarker28.Append(columnOffset55);
            fromMarker28.Append(rowId55);
            fromMarker28.Append(rowOffset55);

            Xdr.ToMarker toMarker28 = new Xdr.ToMarker();
            Xdr.ColumnId columnId56 = new Xdr.ColumnId();
            columnId56.Text = "13";
            Xdr.ColumnOffset columnOffset56 = new Xdr.ColumnOffset();
            columnOffset56.Text = "752475";
            Xdr.RowId rowId56 = new Xdr.RowId();
            rowId56.Text = "15";
            Xdr.RowOffset rowOffset56 = new Xdr.RowOffset();
            rowOffset56.Text = "57150";

            toMarker28.Append(columnId56);
            toMarker28.Append(columnOffset56);
            toMarker28.Append(rowId56);
            toMarker28.Append(rowOffset56);

            AlternateContent alternateContent27 = new AlternateContent();
            alternateContent27.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent27.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice27 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame28 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties28 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties41 = new Xdr.NonVisualDrawingProperties(){ Id = 5U, Name = "DeliveryDate 15" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties28 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties28.Append(nonVisualDrawingProperties41);
            nonVisualGraphicFrameProperties28.Append(nonVisualGraphicFrameDrawingProperties28);

            Xdr.Transform transform28 = new Xdr.Transform();
            A.Offset offset41 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents41 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform28.Append(offset41);
            transform28.Append(extents41);

            A.Graphic graphic28 = new A.Graphic();

            A.GraphicData graphicData28 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer14 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 15" };
            timeSlicer14.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData28.Append(timeSlicer14);

            graphic28.Append(graphicData28);

            graphicFrame28.Append(nonVisualGraphicFrameProperties28);
            graphicFrame28.Append(transform28);
            graphicFrame28.Append(graphic28);

            alternateContentChoice27.Append(graphicFrame28);

            AlternateContentFallback alternateContentFallback26 = new AlternateContentFallback();
            alternateContentFallback26.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback26.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape14 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties14 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties42 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties14 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks14 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties14.Append(shapeLocks14);

            nonVisualShapeProperties14.Append(nonVisualDrawingProperties42);
            nonVisualShapeProperties14.Append(nonVisualShapeDrawingProperties14);

            Xdr.ShapeProperties shapeProperties51 = new Xdr.ShapeProperties();

            A.Transform2D transform2D14 = new A.Transform2D();
            A.Offset offset42 = new A.Offset(){ X = 8620125L, Y = 1724025L };
            A.Extents extents42 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D14.Append(offset42);
            transform2D14.Append(extents42);

            A.PresetGeometry presetGeometry14 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList14 = new A.AdjustValueList();

            presetGeometry14.Append(adjustValueList14);

            A.SolidFill solidFill99 = new A.SolidFill();
            A.PresetColor presetColor27 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill99.Append(presetColor27);

            A.Outline outline79 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill100 = new A.SolidFill();
            A.PresetColor presetColor28 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill100.Append(presetColor28);

            outline79.Append(solidFill100);

            shapeProperties51.Append(transform2D14);
            shapeProperties51.Append(presetGeometry14);
            shapeProperties51.Append(solidFill99);
            shapeProperties51.Append(outline79);

            Xdr.TextBody textBody14 = new Xdr.TextBody();
            A.BodyProperties bodyProperties34 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle34 = new A.ListStyle();

            A.Paragraph paragraph34 = new A.Paragraph();

            A.Run run14 = new A.Run();
            A.RunProperties runProperties14 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text52 = new A.Text();
            text52.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run14.Append(runProperties14);
            run14.Append(text52);

            paragraph34.Append(run14);

            textBody14.Append(bodyProperties34);
            textBody14.Append(listStyle34);
            textBody14.Append(paragraph34);

            shape14.Append(nonVisualShapeProperties14);
            shape14.Append(shapeProperties51);
            shape14.Append(textBody14);

            alternateContentFallback26.Append(shape14);

            alternateContent27.Append(alternateContentChoice27);
            alternateContent27.Append(alternateContentFallback26);
            Xdr.ClientData clientData28 = new Xdr.ClientData();

            twoCellAnchor28.Append(fromMarker28);
            twoCellAnchor28.Append(toMarker28);
            twoCellAnchor28.Append(alternateContent27);
            twoCellAnchor28.Append(clientData28);

            worksheetDrawing7.Append(twoCellAnchor25);
            worksheetDrawing7.Append(twoCellAnchor26);
            worksheetDrawing7.Append(twoCellAnchor27);
            worksheetDrawing7.Append(twoCellAnchor28);

            drawingsPart7.WorksheetDrawing = worksheetDrawing7;
        }

        // Generates content of chartPart13.
        private static void GenerateChartPart13Content(ChartPart chartPart13)
        {
            C.ChartSpace chartSpace13 = new C.ChartSpace();
            chartSpace13.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace13.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace13.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date190413 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage13 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners13 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent28 = new AlternateContent();
            alternateContent28.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice28 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice28.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style25 = new C14.Style(){ Val = 102 };

            alternateContentChoice28.Append(style25);

            AlternateContentFallback alternateContentFallback27 = new AlternateContentFallback();
            C.Style style26 = new C.Style(){ Val = 2 };

            alternateContentFallback27.Append(style26);

            alternateContent28.Append(alternateContentChoice28);
            alternateContent28.Append(alternateContentFallback27);

            C.PivotSource pivotSource13 = new C.PivotSource();
            C.PivotTableName pivotTableName13 = new C.PivotTableName();
            pivotTableName13.Text = "[GeneratedDocument.xlsx]ScrollPosition!PivotTable1";
            C.FormatId formatId13 = new C.FormatId(){ Val = 18U };

            pivotSource13.Append(pivotTableName13);
            pivotSource13.Append(formatId13);

            C.Chart chart13 = new C.Chart();

            C.Title title13 = new C.Title();
            C.Overlay overlay25 = new C.Overlay(){ Val = false };

            title13.Append(overlay25);
            C.AutoTitleDeleted autoTitleDeleted13 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats13 = new C.PivotFormats();

            C.PivotFormat pivotFormat112 = new C.PivotFormat();
            C.Index index124 = new C.Index(){ Val = 0U };

            C.Marker marker112 = new C.Marker();
            C.Symbol symbol112 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker112.Append(symbol112);

            pivotFormat112.Append(index124);
            pivotFormat112.Append(marker112);

            C.PivotFormat pivotFormat113 = new C.PivotFormat();
            C.Index index125 = new C.Index(){ Val = 1U };

            C.Marker marker113 = new C.Marker();
            C.Symbol symbol113 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker113.Append(symbol113);

            pivotFormat113.Append(index125);
            pivotFormat113.Append(marker113);

            C.PivotFormat pivotFormat114 = new C.PivotFormat();
            C.Index index126 = new C.Index(){ Val = 2U };

            C.Marker marker114 = new C.Marker();
            C.Symbol symbol114 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker114.Append(symbol114);

            pivotFormat114.Append(index126);
            pivotFormat114.Append(marker114);

            C.PivotFormat pivotFormat115 = new C.PivotFormat();
            C.Index index127 = new C.Index(){ Val = 3U };

            C.Marker marker115 = new C.Marker();
            C.Symbol symbol115 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker115.Append(symbol115);

            pivotFormat115.Append(index127);
            pivotFormat115.Append(marker115);

            C.PivotFormat pivotFormat116 = new C.PivotFormat();
            C.Index index128 = new C.Index(){ Val = 4U };

            C.Marker marker116 = new C.Marker();
            C.Symbol symbol116 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker116.Append(symbol116);

            pivotFormat116.Append(index128);
            pivotFormat116.Append(marker116);

            C.PivotFormat pivotFormat117 = new C.PivotFormat();
            C.Index index129 = new C.Index(){ Val = 5U };

            C.Marker marker117 = new C.Marker();
            C.Symbol symbol117 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker117.Append(symbol117);

            pivotFormat117.Append(index129);
            pivotFormat117.Append(marker117);

            C.PivotFormat pivotFormat118 = new C.PivotFormat();
            C.Index index130 = new C.Index(){ Val = 6U };

            C.Marker marker118 = new C.Marker();
            C.Symbol symbol118 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker118.Append(symbol118);

            pivotFormat118.Append(index130);
            pivotFormat118.Append(marker118);

            pivotFormats13.Append(pivotFormat112);
            pivotFormats13.Append(pivotFormat113);
            pivotFormats13.Append(pivotFormat114);
            pivotFormats13.Append(pivotFormat115);
            pivotFormats13.Append(pivotFormat116);
            pivotFormats13.Append(pivotFormat117);
            pivotFormats13.Append(pivotFormat118);

            C.PlotArea plotArea13 = new C.PlotArea();
            C.Layout layout13 = new C.Layout();

            C.PieChart pieChart7 = new C.PieChart();
            C.VaryColors varyColors13 = new C.VaryColors(){ Val = true };

            C.PieChartSeries pieChartSeries7 = new C.PieChartSeries();
            C.Index index131 = new C.Index(){ Val = 0U };
            C.Order order13 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText13 = new C.SeriesText();

            C.StringReference stringReference25 = new C.StringReference();
            C.Formula formula37 = new C.Formula();
            formula37.Text = "ScrollPosition!$B$1";

            C.StringCache stringCache25 = new C.StringCache();
            C.PointCount pointCount37 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint49 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue85 = new C.NumericValue();
            numericValue85.Text = "Total";

            stringPoint49.Append(numericValue85);

            stringCache25.Append(pointCount37);
            stringCache25.Append(stringPoint49);

            stringReference25.Append(formula37);
            stringReference25.Append(stringCache25);

            seriesText13.Append(stringReference25);

            C.CategoryAxisData categoryAxisData13 = new C.CategoryAxisData();

            C.StringReference stringReference26 = new C.StringReference();
            C.Formula formula38 = new C.Formula();
            formula38.Text = "ScrollPosition!$A$2:$A$5";

            C.StringCache stringCache26 = new C.StringCache();
            C.PointCount pointCount38 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint50 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue86 = new C.NumericValue();
            numericValue86.Text = "product_A";

            stringPoint50.Append(numericValue86);

            C.StringPoint stringPoint51 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue87 = new C.NumericValue();
            numericValue87.Text = "product_D";

            stringPoint51.Append(numericValue87);

            C.StringPoint stringPoint52 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue88 = new C.NumericValue();
            numericValue88.Text = "product_E";

            stringPoint52.Append(numericValue88);

            stringCache26.Append(pointCount38);
            stringCache26.Append(stringPoint50);
            stringCache26.Append(stringPoint51);
            stringCache26.Append(stringPoint52);

            stringReference26.Append(formula38);
            stringReference26.Append(stringCache26);

            categoryAxisData13.Append(stringReference26);

            C.Values values13 = new C.Values();

            C.NumberReference numberReference13 = new C.NumberReference();
            C.Formula formula39 = new C.Formula();
            formula39.Text = "ScrollPosition!$B$2:$B$5";

            C.NumberingCache numberingCache13 = new C.NumberingCache();
            C.FormatCode formatCode13 = new C.FormatCode();
            formatCode13.Text = "General";
            C.PointCount pointCount39 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint37 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue89 = new C.NumericValue();
            numericValue89.Text = "19";

            numericPoint37.Append(numericValue89);

            C.NumericPoint numericPoint38 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue90 = new C.NumericValue();
            numericValue90.Text = "13";

            numericPoint38.Append(numericValue90);

            C.NumericPoint numericPoint39 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue91 = new C.NumericValue();
            numericValue91.Text = "33";

            numericPoint39.Append(numericValue91);

            numberingCache13.Append(formatCode13);
            numberingCache13.Append(pointCount39);
            numberingCache13.Append(numericPoint37);
            numberingCache13.Append(numericPoint38);
            numberingCache13.Append(numericPoint39);

            numberReference13.Append(formula39);
            numberReference13.Append(numberingCache13);

            values13.Append(numberReference13);

            pieChartSeries7.Append(index131);
            pieChartSeries7.Append(order13);
            pieChartSeries7.Append(seriesText13);
            pieChartSeries7.Append(categoryAxisData13);
            pieChartSeries7.Append(values13);

            C.DataLabels dataLabels13 = new C.DataLabels();
            C.ShowLegendKey showLegendKey13 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue13 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName13 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName13 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent13 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize13 = new C.ShowBubbleSize(){ Val = false };
            C.ShowLeaderLines showLeaderLines7 = new C.ShowLeaderLines(){ Val = true };

            dataLabels13.Append(showLegendKey13);
            dataLabels13.Append(showValue13);
            dataLabels13.Append(showCategoryName13);
            dataLabels13.Append(showSeriesName13);
            dataLabels13.Append(showPercent13);
            dataLabels13.Append(showBubbleSize13);
            dataLabels13.Append(showLeaderLines7);
            C.FirstSliceAngle firstSliceAngle7 = new C.FirstSliceAngle(){ Val = (UInt16Value)0U };

            pieChart7.Append(varyColors13);
            pieChart7.Append(pieChartSeries7);
            pieChart7.Append(dataLabels13);
            pieChart7.Append(firstSliceAngle7);

            plotArea13.Append(layout13);
            plotArea13.Append(pieChart7);

            C.Legend legend13 = new C.Legend();
            C.LegendPosition legendPosition13 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay26 = new C.Overlay(){ Val = false };

            legend13.Append(legendPosition13);
            legend13.Append(overlay26);
            C.PlotVisibleOnly plotVisibleOnly13 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs13 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum13 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart13.Append(title13);
            chart13.Append(autoTitleDeleted13);
            chart13.Append(pivotFormats13);
            chart13.Append(plotArea13);
            chart13.Append(legend13);
            chart13.Append(plotVisibleOnly13);
            chart13.Append(displayBlanksAs13);
            chart13.Append(showDataLabelsOverMaximum13);

            C.PrintSettings printSettings13 = new C.PrintSettings();
            C.HeaderFooter headerFooter13 = new C.HeaderFooter();
            C.PageMargins pageMargins22 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup13 = new C.PageSetup();

            printSettings13.Append(headerFooter13);
            printSettings13.Append(pageMargins22);
            printSettings13.Append(pageSetup13);

            C.ChartSpaceExtensionList chartSpaceExtensionList13 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList13.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList13.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension13 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension13.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions13 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter13 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories13 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData13 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries13 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible13 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions13.Append(dropZoneFilter13);
            pivotOptions13.Append(dropZoneCategories13);
            pivotOptions13.Append(dropZoneData13);
            pivotOptions13.Append(dropZoneSeries13);
            pivotOptions13.Append(dropZonesVisible13);

            chartSpaceExtension13.Append(pivotOptions13);

            chartSpaceExtensionList13.Append(chartSpaceExtension13);

            chartSpace13.Append(date190413);
            chartSpace13.Append(editingLanguage13);
            chartSpace13.Append(roundedCorners13);
            chartSpace13.Append(alternateContent28);
            chartSpace13.Append(pivotSource13);
            chartSpace13.Append(chart13);
            chartSpace13.Append(printSettings13);
            chartSpace13.Append(chartSpaceExtensionList13);

            chartPart13.ChartSpace = chartSpace13;
        }

        // Generates content of chartPart14.
        private static void GenerateChartPart14Content(ChartPart chartPart14)
        {
            C.ChartSpace chartSpace14 = new C.ChartSpace();
            chartSpace14.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace14.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace14.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date190414 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage14 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners14 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent29 = new AlternateContent();
            alternateContent29.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice29 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice29.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style27 = new C14.Style(){ Val = 101 };

            alternateContentChoice29.Append(style27);

            AlternateContentFallback alternateContentFallback28 = new AlternateContentFallback();
            C.Style style28 = new C.Style(){ Val = 1 };

            alternateContentFallback28.Append(style28);

            alternateContent29.Append(alternateContentChoice29);
            alternateContent29.Append(alternateContentFallback28);

            C.PivotSource pivotSource14 = new C.PivotSource();
            C.PivotTableName pivotTableName14 = new C.PivotTableName();
            pivotTableName14.Text = "[GeneratedDocument.xlsx]ScrollPosition!PivotTable1";
            C.FormatId formatId14 = new C.FormatId(){ Val = 17U };

            pivotSource14.Append(pivotTableName14);
            pivotSource14.Append(formatId14);

            C.Chart chart14 = new C.Chart();

            C.Title title14 = new C.Title();
            C.Overlay overlay27 = new C.Overlay(){ Val = false };

            title14.Append(overlay27);
            C.AutoTitleDeleted autoTitleDeleted14 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats14 = new C.PivotFormats();

            C.PivotFormat pivotFormat119 = new C.PivotFormat();
            C.Index index132 = new C.Index(){ Val = 0U };

            C.ShapeProperties shapeProperties52 = new C.ShapeProperties();

            A.SolidFill solidFill101 = new A.SolidFill();

            A.SchemeColor schemeColor83 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint35 = new A.Tint(){ Val = 100000 };

            schemeColor83.Append(tint35);

            solidFill101.Append(schemeColor83);

            A.Outline outline80 = new A.Outline();
            A.NoFill noFill68 = new A.NoFill();

            outline80.Append(noFill68);
            A.EffectList effectList66 = new A.EffectList();

            shapeProperties52.Append(solidFill101);
            shapeProperties52.Append(outline80);
            shapeProperties52.Append(effectList66);

            C.Marker marker119 = new C.Marker();
            C.Symbol symbol119 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker119.Append(symbol119);

            pivotFormat119.Append(index132);
            pivotFormat119.Append(shapeProperties52);
            pivotFormat119.Append(marker119);

            C.PivotFormat pivotFormat120 = new C.PivotFormat();
            C.Index index133 = new C.Index(){ Val = 1U };

            C.ShapeProperties shapeProperties53 = new C.ShapeProperties();

            A.SolidFill solidFill102 = new A.SolidFill();

            A.SchemeColor schemeColor84 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent2 };
            A.Tint tint36 = new A.Tint(){ Val = 100000 };

            schemeColor84.Append(tint36);

            solidFill102.Append(schemeColor84);

            A.Outline outline81 = new A.Outline();
            A.NoFill noFill69 = new A.NoFill();

            outline81.Append(noFill69);
            A.EffectList effectList67 = new A.EffectList();

            shapeProperties53.Append(solidFill102);
            shapeProperties53.Append(outline81);
            shapeProperties53.Append(effectList67);

            C.Marker marker120 = new C.Marker();
            C.Symbol symbol120 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker120.Append(symbol120);

            pivotFormat120.Append(index133);
            pivotFormat120.Append(shapeProperties53);
            pivotFormat120.Append(marker120);

            C.PivotFormat pivotFormat121 = new C.PivotFormat();
            C.Index index134 = new C.Index(){ Val = 2U };

            C.Marker marker121 = new C.Marker();
            C.Symbol symbol121 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker121.Append(symbol121);

            pivotFormat121.Append(index134);
            pivotFormat121.Append(marker121);

            C.PivotFormat pivotFormat122 = new C.PivotFormat();
            C.Index index135 = new C.Index(){ Val = 3U };

            C.Marker marker122 = new C.Marker();
            C.Symbol symbol122 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker122.Append(symbol122);

            pivotFormat122.Append(index135);
            pivotFormat122.Append(marker122);

            C.PivotFormat pivotFormat123 = new C.PivotFormat();
            C.Index index136 = new C.Index(){ Val = 4U };

            C.Marker marker123 = new C.Marker();
            C.Symbol symbol123 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker123.Append(symbol123);

            pivotFormat123.Append(index136);
            pivotFormat123.Append(marker123);

            C.PivotFormat pivotFormat124 = new C.PivotFormat();
            C.Index index137 = new C.Index(){ Val = 5U };

            C.Marker marker124 = new C.Marker();
            C.Symbol symbol124 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker124.Append(symbol124);

            pivotFormat124.Append(index137);
            pivotFormat124.Append(marker124);

            C.PivotFormat pivotFormat125 = new C.PivotFormat();
            C.Index index138 = new C.Index(){ Val = 6U };

            C.Marker marker125 = new C.Marker();
            C.Symbol symbol125 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker125.Append(symbol125);

            pivotFormat125.Append(index138);
            pivotFormat125.Append(marker125);

            C.PivotFormat pivotFormat126 = new C.PivotFormat();
            C.Index index139 = new C.Index(){ Val = 7U };

            C.Marker marker126 = new C.Marker();
            C.Symbol symbol126 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker126.Append(symbol126);

            pivotFormat126.Append(index139);
            pivotFormat126.Append(marker126);

            C.PivotFormat pivotFormat127 = new C.PivotFormat();
            C.Index index140 = new C.Index(){ Val = 8U };

            C.Marker marker127 = new C.Marker();
            C.Symbol symbol127 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker127.Append(symbol127);

            pivotFormat127.Append(index140);
            pivotFormat127.Append(marker127);

            C.PivotFormat pivotFormat128 = new C.PivotFormat();
            C.Index index141 = new C.Index(){ Val = 9U };

            C.Marker marker128 = new C.Marker();
            C.Symbol symbol128 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker128.Append(symbol128);

            pivotFormat128.Append(index141);
            pivotFormat128.Append(marker128);

            C.PivotFormat pivotFormat129 = new C.PivotFormat();
            C.Index index142 = new C.Index(){ Val = 10U };

            C.Marker marker129 = new C.Marker();
            C.Symbol symbol129 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker129.Append(symbol129);

            pivotFormat129.Append(index142);
            pivotFormat129.Append(marker129);

            C.PivotFormat pivotFormat130 = new C.PivotFormat();
            C.Index index143 = new C.Index(){ Val = 11U };

            C.Marker marker130 = new C.Marker();
            C.Symbol symbol130 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker130.Append(symbol130);

            pivotFormat130.Append(index143);
            pivotFormat130.Append(marker130);

            C.PivotFormat pivotFormat131 = new C.PivotFormat();
            C.Index index144 = new C.Index(){ Val = 12U };

            C.Marker marker131 = new C.Marker();
            C.Symbol symbol131 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker131.Append(symbol131);

            pivotFormat131.Append(index144);
            pivotFormat131.Append(marker131);

            C.PivotFormat pivotFormat132 = new C.PivotFormat();
            C.Index index145 = new C.Index(){ Val = 13U };

            C.Marker marker132 = new C.Marker();
            C.Symbol symbol132 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker132.Append(symbol132);

            pivotFormat132.Append(index145);
            pivotFormat132.Append(marker132);

            C.PivotFormat pivotFormat133 = new C.PivotFormat();
            C.Index index146 = new C.Index(){ Val = 14U };

            C.ShapeProperties shapeProperties54 = new C.ShapeProperties();

            A.SolidFill solidFill103 = new A.SolidFill();

            A.SchemeColor schemeColor85 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint37 = new A.Tint(){ Val = 100000 };

            schemeColor85.Append(tint37);

            solidFill103.Append(schemeColor85);

            A.Outline outline82 = new A.Outline();
            A.NoFill noFill70 = new A.NoFill();

            outline82.Append(noFill70);
            A.EffectList effectList68 = new A.EffectList();

            shapeProperties54.Append(solidFill103);
            shapeProperties54.Append(outline82);
            shapeProperties54.Append(effectList68);

            C.Marker marker133 = new C.Marker();
            C.Symbol symbol133 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker133.Append(symbol133);

            pivotFormat133.Append(index146);
            pivotFormat133.Append(shapeProperties54);
            pivotFormat133.Append(marker133);

            C.PivotFormat pivotFormat134 = new C.PivotFormat();
            C.Index index147 = new C.Index(){ Val = 15U };

            C.ShapeProperties shapeProperties55 = new C.ShapeProperties();

            A.SolidFill solidFill104 = new A.SolidFill();

            A.SchemeColor schemeColor86 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint38 = new A.Tint(){ Val = 100000 };

            schemeColor86.Append(tint38);

            solidFill104.Append(schemeColor86);

            A.Outline outline83 = new A.Outline();
            A.NoFill noFill71 = new A.NoFill();

            outline83.Append(noFill71);
            A.EffectList effectList69 = new A.EffectList();

            shapeProperties55.Append(solidFill104);
            shapeProperties55.Append(outline83);
            shapeProperties55.Append(effectList69);

            C.Marker marker134 = new C.Marker();
            C.Symbol symbol134 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker134.Append(symbol134);

            pivotFormat134.Append(index147);
            pivotFormat134.Append(shapeProperties55);
            pivotFormat134.Append(marker134);

            C.PivotFormat pivotFormat135 = new C.PivotFormat();
            C.Index index148 = new C.Index(){ Val = 16U };

            C.ShapeProperties shapeProperties56 = new C.ShapeProperties();

            A.SolidFill solidFill105 = new A.SolidFill();

            A.SchemeColor schemeColor87 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint39 = new A.Tint(){ Val = 100000 };

            schemeColor87.Append(tint39);

            solidFill105.Append(schemeColor87);

            A.Outline outline84 = new A.Outline();
            A.NoFill noFill72 = new A.NoFill();

            outline84.Append(noFill72);
            A.EffectList effectList70 = new A.EffectList();

            shapeProperties56.Append(solidFill105);
            shapeProperties56.Append(outline84);
            shapeProperties56.Append(effectList70);

            C.Marker marker135 = new C.Marker();
            C.Symbol symbol135 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker135.Append(symbol135);

            pivotFormat135.Append(index148);
            pivotFormat135.Append(shapeProperties56);
            pivotFormat135.Append(marker135);

            C.PivotFormat pivotFormat136 = new C.PivotFormat();
            C.Index index149 = new C.Index(){ Val = 17U };

            C.ShapeProperties shapeProperties57 = new C.ShapeProperties();

            A.SolidFill solidFill106 = new A.SolidFill();

            A.SchemeColor schemeColor88 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint40 = new A.Tint(){ Val = 100000 };

            schemeColor88.Append(tint40);

            solidFill106.Append(schemeColor88);

            A.Outline outline85 = new A.Outline();
            A.NoFill noFill73 = new A.NoFill();

            outline85.Append(noFill73);
            A.EffectList effectList71 = new A.EffectList();

            shapeProperties57.Append(solidFill106);
            shapeProperties57.Append(outline85);
            shapeProperties57.Append(effectList71);

            C.Marker marker136 = new C.Marker();
            C.Symbol symbol136 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker136.Append(symbol136);

            pivotFormat136.Append(index149);
            pivotFormat136.Append(shapeProperties57);
            pivotFormat136.Append(marker136);

            C.PivotFormat pivotFormat137 = new C.PivotFormat();
            C.Index index150 = new C.Index(){ Val = 18U };

            C.ShapeProperties shapeProperties58 = new C.ShapeProperties();

            A.SolidFill solidFill107 = new A.SolidFill();

            A.SchemeColor schemeColor89 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint41 = new A.Tint(){ Val = 100000 };

            schemeColor89.Append(tint41);

            solidFill107.Append(schemeColor89);

            A.Outline outline86 = new A.Outline();
            A.NoFill noFill74 = new A.NoFill();

            outline86.Append(noFill74);
            A.EffectList effectList72 = new A.EffectList();

            shapeProperties58.Append(solidFill107);
            shapeProperties58.Append(outline86);
            shapeProperties58.Append(effectList72);

            C.Marker marker137 = new C.Marker();
            C.Symbol symbol137 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker137.Append(symbol137);

            pivotFormat137.Append(index150);
            pivotFormat137.Append(shapeProperties58);
            pivotFormat137.Append(marker137);

            C.PivotFormat pivotFormat138 = new C.PivotFormat();
            C.Index index151 = new C.Index(){ Val = 19U };

            C.ShapeProperties shapeProperties59 = new C.ShapeProperties();

            A.SolidFill solidFill108 = new A.SolidFill();

            A.SchemeColor schemeColor90 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint42 = new A.Tint(){ Val = 100000 };

            schemeColor90.Append(tint42);

            solidFill108.Append(schemeColor90);

            A.Outline outline87 = new A.Outline();
            A.NoFill noFill75 = new A.NoFill();

            outline87.Append(noFill75);
            A.EffectList effectList73 = new A.EffectList();

            shapeProperties59.Append(solidFill108);
            shapeProperties59.Append(outline87);
            shapeProperties59.Append(effectList73);

            C.Marker marker138 = new C.Marker();
            C.Symbol symbol138 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker138.Append(symbol138);

            pivotFormat138.Append(index151);
            pivotFormat138.Append(shapeProperties59);
            pivotFormat138.Append(marker138);

            pivotFormats14.Append(pivotFormat119);
            pivotFormats14.Append(pivotFormat120);
            pivotFormats14.Append(pivotFormat121);
            pivotFormats14.Append(pivotFormat122);
            pivotFormats14.Append(pivotFormat123);
            pivotFormats14.Append(pivotFormat124);
            pivotFormats14.Append(pivotFormat125);
            pivotFormats14.Append(pivotFormat126);
            pivotFormats14.Append(pivotFormat127);
            pivotFormats14.Append(pivotFormat128);
            pivotFormats14.Append(pivotFormat129);
            pivotFormats14.Append(pivotFormat130);
            pivotFormats14.Append(pivotFormat131);
            pivotFormats14.Append(pivotFormat132);
            pivotFormats14.Append(pivotFormat133);
            pivotFormats14.Append(pivotFormat134);
            pivotFormats14.Append(pivotFormat135);
            pivotFormats14.Append(pivotFormat136);
            pivotFormats14.Append(pivotFormat137);
            pivotFormats14.Append(pivotFormat138);

            C.PlotArea plotArea14 = new C.PlotArea();
            C.Layout layout14 = new C.Layout();

            C.BarChart barChart7 = new C.BarChart();
            C.BarDirection barDirection7 = new C.BarDirection(){ Val = C.BarDirectionValues.Column };
            C.BarGrouping barGrouping7 = new C.BarGrouping(){ Val = C.BarGroupingValues.Clustered };
            C.VaryColors varyColors14 = new C.VaryColors(){ Val = false };

            C.BarChartSeries barChartSeries7 = new C.BarChartSeries();
            C.Index index152 = new C.Index(){ Val = 0U };
            C.Order order14 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText14 = new C.SeriesText();

            C.StringReference stringReference27 = new C.StringReference();
            C.Formula formula40 = new C.Formula();
            formula40.Text = "ScrollPosition!$B$1";

            C.StringCache stringCache27 = new C.StringCache();
            C.PointCount pointCount40 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint53 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue92 = new C.NumericValue();
            numericValue92.Text = "Total";

            stringPoint53.Append(numericValue92);

            stringCache27.Append(pointCount40);
            stringCache27.Append(stringPoint53);

            stringReference27.Append(formula40);
            stringReference27.Append(stringCache27);

            seriesText14.Append(stringReference27);

            C.ChartShapeProperties chartShapeProperties26 = new C.ChartShapeProperties();

            A.SolidFill solidFill109 = new A.SolidFill();

            A.SchemeColor schemeColor91 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint43 = new A.Tint(){ Val = 100000 };

            schemeColor91.Append(tint43);

            solidFill109.Append(schemeColor91);

            A.Outline outline88 = new A.Outline();
            A.NoFill noFill76 = new A.NoFill();

            outline88.Append(noFill76);
            A.EffectList effectList74 = new A.EffectList();

            chartShapeProperties26.Append(solidFill109);
            chartShapeProperties26.Append(outline88);
            chartShapeProperties26.Append(effectList74);
            C.InvertIfNegative invertIfNegative7 = new C.InvertIfNegative(){ Val = false };

            C.CategoryAxisData categoryAxisData14 = new C.CategoryAxisData();

            C.StringReference stringReference28 = new C.StringReference();
            C.Formula formula41 = new C.Formula();
            formula41.Text = "ScrollPosition!$A$2:$A$5";

            C.StringCache stringCache28 = new C.StringCache();
            C.PointCount pointCount41 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint54 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue93 = new C.NumericValue();
            numericValue93.Text = "product_A";

            stringPoint54.Append(numericValue93);

            C.StringPoint stringPoint55 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue94 = new C.NumericValue();
            numericValue94.Text = "product_D";

            stringPoint55.Append(numericValue94);

            C.StringPoint stringPoint56 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue95 = new C.NumericValue();
            numericValue95.Text = "product_E";

            stringPoint56.Append(numericValue95);

            stringCache28.Append(pointCount41);
            stringCache28.Append(stringPoint54);
            stringCache28.Append(stringPoint55);
            stringCache28.Append(stringPoint56);

            stringReference28.Append(formula41);
            stringReference28.Append(stringCache28);

            categoryAxisData14.Append(stringReference28);

            C.Values values14 = new C.Values();

            C.NumberReference numberReference14 = new C.NumberReference();
            C.Formula formula42 = new C.Formula();
            formula42.Text = "ScrollPosition!$B$2:$B$5";

            C.NumberingCache numberingCache14 = new C.NumberingCache();
            C.FormatCode formatCode14 = new C.FormatCode();
            formatCode14.Text = "General";
            C.PointCount pointCount42 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint40 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue96 = new C.NumericValue();
            numericValue96.Text = "19";

            numericPoint40.Append(numericValue96);

            C.NumericPoint numericPoint41 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue97 = new C.NumericValue();
            numericValue97.Text = "13";

            numericPoint41.Append(numericValue97);

            C.NumericPoint numericPoint42 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue98 = new C.NumericValue();
            numericValue98.Text = "33";

            numericPoint42.Append(numericValue98);

            numberingCache14.Append(formatCode14);
            numberingCache14.Append(pointCount42);
            numberingCache14.Append(numericPoint40);
            numberingCache14.Append(numericPoint41);
            numberingCache14.Append(numericPoint42);

            numberReference14.Append(formula42);
            numberReference14.Append(numberingCache14);

            values14.Append(numberReference14);

            barChartSeries7.Append(index152);
            barChartSeries7.Append(order14);
            barChartSeries7.Append(seriesText14);
            barChartSeries7.Append(chartShapeProperties26);
            barChartSeries7.Append(invertIfNegative7);
            barChartSeries7.Append(categoryAxisData14);
            barChartSeries7.Append(values14);

            C.DataLabels dataLabels14 = new C.DataLabels();
            C.ShowLegendKey showLegendKey14 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue14 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName14 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName14 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent14 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize14 = new C.ShowBubbleSize(){ Val = false };

            dataLabels14.Append(showLegendKey14);
            dataLabels14.Append(showValue14);
            dataLabels14.Append(showCategoryName14);
            dataLabels14.Append(showSeriesName14);
            dataLabels14.Append(showPercent14);
            dataLabels14.Append(showBubbleSize14);
            C.GapWidth gapWidth7 = new C.GapWidth(){ Val = (UInt16Value)219U };
            C.Overlap overlap6 = new C.Overlap(){ Val = -27 };
            C.AxisId axisId25 = new C.AxisId(){ Val = 208840992U };
            C.AxisId axisId26 = new C.AxisId(){ Val = 208841384U };

            barChart7.Append(barDirection7);
            barChart7.Append(barGrouping7);
            barChart7.Append(varyColors14);
            barChart7.Append(barChartSeries7);
            barChart7.Append(dataLabels14);
            barChart7.Append(gapWidth7);
            barChart7.Append(overlap6);
            barChart7.Append(axisId25);
            barChart7.Append(axisId26);

            C.CategoryAxis categoryAxis7 = new C.CategoryAxis();
            C.AxisId axisId27 = new C.AxisId(){ Val = 208840992U };

            C.Scaling scaling13 = new C.Scaling();
            C.Orientation orientation13 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling13.Append(orientation13);
            C.Delete delete13 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition13 = new C.AxisPosition(){ Val = C.AxisPositionValues.Bottom };
            C.NumberingFormat numberingFormat24 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = false };
            C.MajorTickMark majorTickMark13 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark13 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition13 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties27 = new C.ChartShapeProperties();
            A.NoFill noFill77 = new A.NoFill();

            A.Outline outline89 = new A.Outline();
            A.NoFill noFill78 = new A.NoFill();

            outline89.Append(noFill78);
            A.EffectList effectList75 = new A.EffectList();

            chartShapeProperties27.Append(noFill77);
            chartShapeProperties27.Append(outline89);
            chartShapeProperties27.Append(effectList75);

            C.TextProperties textProperties21 = new C.TextProperties();
            A.BodyProperties bodyProperties35 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle35 = new A.ListStyle();

            A.Paragraph paragraph35 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties21 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties21 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill110 = new A.SolidFill();

            A.SchemeColor schemeColor92 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation32 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset26 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor92.Append(luminanceModulation32);
            schemeColor92.Append(luminanceOffset26);

            solidFill110.Append(schemeColor92);
            A.LatinFont latinFont18 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont18 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont18 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties21.Append(solidFill110);
            defaultRunProperties21.Append(latinFont18);
            defaultRunProperties21.Append(eastAsianFont18);
            defaultRunProperties21.Append(complexScriptFont18);

            paragraphProperties21.Append(defaultRunProperties21);
            A.EndParagraphRunProperties endParagraphRunProperties21 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph35.Append(paragraphProperties21);
            paragraph35.Append(endParagraphRunProperties21);

            textProperties21.Append(bodyProperties35);
            textProperties21.Append(listStyle35);
            textProperties21.Append(paragraph35);
            C.CrossingAxis crossingAxis13 = new C.CrossingAxis(){ Val = 208841384U };
            C.Crosses crosses13 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.AutoLabeled autoLabeled7 = new C.AutoLabeled(){ Val = true };
            C.LabelAlignment labelAlignment7 = new C.LabelAlignment(){ Val = C.LabelAlignmentValues.Center };
            C.LabelOffset labelOffset7 = new C.LabelOffset(){ Val = (UInt16Value)100U };
            C.NoMultiLevelLabels noMultiLevelLabels7 = new C.NoMultiLevelLabels(){ Val = false };

            categoryAxis7.Append(axisId27);
            categoryAxis7.Append(scaling13);
            categoryAxis7.Append(delete13);
            categoryAxis7.Append(axisPosition13);
            categoryAxis7.Append(numberingFormat24);
            categoryAxis7.Append(majorTickMark13);
            categoryAxis7.Append(minorTickMark13);
            categoryAxis7.Append(tickLabelPosition13);
            categoryAxis7.Append(chartShapeProperties27);
            categoryAxis7.Append(textProperties21);
            categoryAxis7.Append(crossingAxis13);
            categoryAxis7.Append(crosses13);
            categoryAxis7.Append(autoLabeled7);
            categoryAxis7.Append(labelAlignment7);
            categoryAxis7.Append(labelOffset7);
            categoryAxis7.Append(noMultiLevelLabels7);

            C.ValueAxis valueAxis7 = new C.ValueAxis();
            C.AxisId axisId28 = new C.AxisId(){ Val = 208841384U };

            C.Scaling scaling14 = new C.Scaling();
            C.Orientation orientation14 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling14.Append(orientation14);
            C.Delete delete14 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition14 = new C.AxisPosition(){ Val = C.AxisPositionValues.Left };

            C.MajorGridlines majorGridlines7 = new C.MajorGridlines();

            C.ChartShapeProperties chartShapeProperties28 = new C.ChartShapeProperties();

            A.Outline outline90 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill111 = new A.SolidFill();

            A.SchemeColor schemeColor93 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation33 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset27 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor93.Append(luminanceModulation33);
            schemeColor93.Append(luminanceOffset27);

            solidFill111.Append(schemeColor93);
            A.Round round11 = new A.Round();

            outline90.Append(solidFill111);
            outline90.Append(round11);
            A.EffectList effectList76 = new A.EffectList();

            chartShapeProperties28.Append(outline90);
            chartShapeProperties28.Append(effectList76);

            majorGridlines7.Append(chartShapeProperties28);
            C.NumberingFormat numberingFormat25 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = true };
            C.MajorTickMark majorTickMark14 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark14 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition14 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties29 = new C.ChartShapeProperties();
            A.NoFill noFill79 = new A.NoFill();

            A.Outline outline91 = new A.Outline();
            A.NoFill noFill80 = new A.NoFill();

            outline91.Append(noFill80);
            A.EffectList effectList77 = new A.EffectList();

            chartShapeProperties29.Append(noFill79);
            chartShapeProperties29.Append(outline91);
            chartShapeProperties29.Append(effectList77);

            C.TextProperties textProperties22 = new C.TextProperties();
            A.BodyProperties bodyProperties36 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle36 = new A.ListStyle();

            A.Paragraph paragraph36 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties22 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties22 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill112 = new A.SolidFill();

            A.SchemeColor schemeColor94 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation34 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset28 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor94.Append(luminanceModulation34);
            schemeColor94.Append(luminanceOffset28);

            solidFill112.Append(schemeColor94);
            A.LatinFont latinFont19 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont19 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont19 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties22.Append(solidFill112);
            defaultRunProperties22.Append(latinFont19);
            defaultRunProperties22.Append(eastAsianFont19);
            defaultRunProperties22.Append(complexScriptFont19);

            paragraphProperties22.Append(defaultRunProperties22);
            A.EndParagraphRunProperties endParagraphRunProperties22 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph36.Append(paragraphProperties22);
            paragraph36.Append(endParagraphRunProperties22);

            textProperties22.Append(bodyProperties36);
            textProperties22.Append(listStyle36);
            textProperties22.Append(paragraph36);
            C.CrossingAxis crossingAxis14 = new C.CrossingAxis(){ Val = 208840992U };
            C.Crosses crosses14 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.CrossBetween crossBetween7 = new C.CrossBetween(){ Val = C.CrossBetweenValues.Between };

            valueAxis7.Append(axisId28);
            valueAxis7.Append(scaling14);
            valueAxis7.Append(delete14);
            valueAxis7.Append(axisPosition14);
            valueAxis7.Append(majorGridlines7);
            valueAxis7.Append(numberingFormat25);
            valueAxis7.Append(majorTickMark14);
            valueAxis7.Append(minorTickMark14);
            valueAxis7.Append(tickLabelPosition14);
            valueAxis7.Append(chartShapeProperties29);
            valueAxis7.Append(textProperties22);
            valueAxis7.Append(crossingAxis14);
            valueAxis7.Append(crosses14);
            valueAxis7.Append(crossBetween7);

            C.ShapeProperties shapeProperties60 = new C.ShapeProperties();

            A.SolidFill solidFill113 = new A.SolidFill();
            A.SchemeColor schemeColor95 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill113.Append(schemeColor95);

            A.Outline outline92 = new A.Outline();
            A.NoFill noFill81 = new A.NoFill();

            outline92.Append(noFill81);
            A.EffectList effectList78 = new A.EffectList();

            shapeProperties60.Append(solidFill113);
            shapeProperties60.Append(outline92);
            shapeProperties60.Append(effectList78);

            plotArea14.Append(layout14);
            plotArea14.Append(barChart7);
            plotArea14.Append(categoryAxis7);
            plotArea14.Append(valueAxis7);
            plotArea14.Append(shapeProperties60);

            C.Legend legend14 = new C.Legend();
            C.LegendPosition legendPosition14 = new C.LegendPosition(){ Val = C.LegendPositionValues.Bottom };
            C.Overlay overlay28 = new C.Overlay(){ Val = false };

            C.ChartShapeProperties chartShapeProperties30 = new C.ChartShapeProperties();
            A.NoFill noFill82 = new A.NoFill();

            A.Outline outline93 = new A.Outline();
            A.NoFill noFill83 = new A.NoFill();

            outline93.Append(noFill83);
            A.EffectList effectList79 = new A.EffectList();

            chartShapeProperties30.Append(noFill82);
            chartShapeProperties30.Append(outline93);
            chartShapeProperties30.Append(effectList79);

            C.TextProperties textProperties23 = new C.TextProperties();
            A.BodyProperties bodyProperties37 = new A.BodyProperties(){ Rotation = 0, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle37 = new A.ListStyle();

            A.Paragraph paragraph37 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties23 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties23 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill114 = new A.SolidFill();

            A.SchemeColor schemeColor96 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation35 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset29 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor96.Append(luminanceModulation35);
            schemeColor96.Append(luminanceOffset29);

            solidFill114.Append(schemeColor96);
            A.LatinFont latinFont20 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont20 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont20 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties23.Append(solidFill114);
            defaultRunProperties23.Append(latinFont20);
            defaultRunProperties23.Append(eastAsianFont20);
            defaultRunProperties23.Append(complexScriptFont20);

            paragraphProperties23.Append(defaultRunProperties23);
            A.EndParagraphRunProperties endParagraphRunProperties23 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph37.Append(paragraphProperties23);
            paragraph37.Append(endParagraphRunProperties23);

            textProperties23.Append(bodyProperties37);
            textProperties23.Append(listStyle37);
            textProperties23.Append(paragraph37);

            legend14.Append(legendPosition14);
            legend14.Append(overlay28);
            legend14.Append(chartShapeProperties30);
            legend14.Append(textProperties23);
            C.PlotVisibleOnly plotVisibleOnly14 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs14 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum14 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart14.Append(title14);
            chart14.Append(autoTitleDeleted14);
            chart14.Append(pivotFormats14);
            chart14.Append(plotArea14);
            chart14.Append(legend14);
            chart14.Append(plotVisibleOnly14);
            chart14.Append(displayBlanksAs14);
            chart14.Append(showDataLabelsOverMaximum14);

            C.ShapeProperties shapeProperties61 = new C.ShapeProperties();

            A.SolidFill solidFill115 = new A.SolidFill();
            A.SchemeColor schemeColor97 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill115.Append(schemeColor97);

            A.Outline outline94 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill116 = new A.SolidFill();

            A.SchemeColor schemeColor98 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation36 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset30 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor98.Append(luminanceModulation36);
            schemeColor98.Append(luminanceOffset30);

            solidFill116.Append(schemeColor98);
            A.Round round12 = new A.Round();

            outline94.Append(solidFill116);
            outline94.Append(round12);
            A.EffectList effectList80 = new A.EffectList();

            shapeProperties61.Append(solidFill115);
            shapeProperties61.Append(outline94);
            shapeProperties61.Append(effectList80);

            C.TextProperties textProperties24 = new C.TextProperties();
            A.BodyProperties bodyProperties38 = new A.BodyProperties();
            A.ListStyle listStyle38 = new A.ListStyle();

            A.Paragraph paragraph38 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties24 = new A.ParagraphProperties();
            A.DefaultRunProperties defaultRunProperties24 = new A.DefaultRunProperties();

            paragraphProperties24.Append(defaultRunProperties24);
            A.EndParagraphRunProperties endParagraphRunProperties24 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph38.Append(paragraphProperties24);
            paragraph38.Append(endParagraphRunProperties24);

            textProperties24.Append(bodyProperties38);
            textProperties24.Append(listStyle38);
            textProperties24.Append(paragraph38);

            C.PrintSettings printSettings14 = new C.PrintSettings();
            C.HeaderFooter headerFooter14 = new C.HeaderFooter();
            C.PageMargins pageMargins23 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup14 = new C.PageSetup();

            printSettings14.Append(headerFooter14);
            printSettings14.Append(pageMargins23);
            printSettings14.Append(pageSetup14);

            C.ChartSpaceExtensionList chartSpaceExtensionList14 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList14.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList14.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension14 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension14.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions14 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter14 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories14 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData14 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries14 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible14 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions14.Append(dropZoneFilter14);
            pivotOptions14.Append(dropZoneCategories14);
            pivotOptions14.Append(dropZoneData14);
            pivotOptions14.Append(dropZoneSeries14);
            pivotOptions14.Append(dropZonesVisible14);

            chartSpaceExtension14.Append(pivotOptions14);

            chartSpaceExtensionList14.Append(chartSpaceExtension14);

            chartSpace14.Append(date190414);
            chartSpace14.Append(editingLanguage14);
            chartSpace14.Append(roundedCorners14);
            chartSpace14.Append(alternateContent29);
            chartSpace14.Append(pivotSource14);
            chartSpace14.Append(chart14);
            chartSpace14.Append(shapeProperties61);
            chartSpace14.Append(textProperties24);
            chartSpace14.Append(printSettings14);
            chartSpace14.Append(chartSpaceExtensionList14);

            chartPart14.ChartSpace = chartSpace14;
        }

        // Generates content of pivotTablePart7.
        private static void GeneratePivotTablePart7Content(PivotTablePart pivotTablePart7)
        {
            PivotTableDefinition pivotTableDefinition13 = new PivotTableDefinition(){ Name = "PivotTable1", CacheId = 1U, ApplyNumberFormats = false, ApplyBorderFormats = false, ApplyFontFormats = false, ApplyPatternFormats = false, ApplyAlignmentFormats = false, ApplyWidthHeightFormats = true, DataCaption = "Values", UpdatedVersion = 5, MinRefreshableVersion = 5, UseAutoFormatting = true, ItemPrintTitles = true, CreatedVersion = 4, Indent = 0U, Outline = true, OutlineData = true, MultipleFieldFilters = false, ChartFormat = 19U };
            Location location7 = new Location(){ Reference = "A1:B5", FirstHeaderRow = 1U, FirstDataRow = 1U, FirstDataColumn = 1U };

            PivotFields pivotFields7 = new PivotFields(){ Count = 7U };

            PivotField pivotField42 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items23 = new Items(){ Count = 15U };
            Item item198 = new Item(){ Index = 0U };
            Item item199 = new Item(){ Index = 1U };
            Item item200 = new Item(){ Index = 2U };
            Item item201 = new Item(){ Index = 3U };
            Item item202 = new Item(){ Index = 4U };
            Item item203 = new Item(){ Index = 5U };
            Item item204 = new Item(){ Index = 6U };
            Item item205 = new Item(){ Index = 7U };
            Item item206 = new Item(){ Index = 8U };
            Item item207 = new Item(){ Index = 9U };
            Item item208 = new Item(){ Index = 10U };
            Item item209 = new Item(){ Index = 11U };
            Item item210 = new Item(){ Index = 12U };
            Item item211 = new Item(){ Index = 13U };
            Item item212 = new Item(){ ItemType = ItemValues.Default };

            items23.Append(item198);
            items23.Append(item199);
            items23.Append(item200);
            items23.Append(item201);
            items23.Append(item202);
            items23.Append(item203);
            items23.Append(item204);
            items23.Append(item205);
            items23.Append(item206);
            items23.Append(item207);
            items23.Append(item208);
            items23.Append(item209);
            items23.Append(item210);
            items23.Append(item211);
            items23.Append(item212);

            pivotField42.Append(items23);

            PivotField pivotField43 = new PivotField(){ Axis = PivotTableAxisValues.AxisRow, ShowAll = false };

            Items items24 = new Items(){ Count = 11U };
            Item item213 = new Item(){ Index = 0U };
            Item item214 = new Item(){ Missing = true, Index = 4U };
            Item item215 = new Item(){ Missing = true, Index = 3U };
            Item item216 = new Item(){ Index = 1U };
            Item item217 = new Item(){ Index = 2U };
            Item item218 = new Item(){ Missing = true, Index = 9U };
            Item item219 = new Item(){ Missing = true, Index = 8U };
            Item item220 = new Item(){ Missing = true, Index = 7U };
            Item item221 = new Item(){ Missing = true, Index = 6U };
            Item item222 = new Item(){ Missing = true, Index = 5U };
            Item item223 = new Item(){ ItemType = ItemValues.Default };

            items24.Append(item213);
            items24.Append(item214);
            items24.Append(item215);
            items24.Append(item216);
            items24.Append(item217);
            items24.Append(item218);
            items24.Append(item219);
            items24.Append(item220);
            items24.Append(item221);
            items24.Append(item222);
            items24.Append(item223);

            pivotField43.Append(items24);
            PivotField pivotField44 = new PivotField(){ DataField = true, ShowAll = false };
            PivotField pivotField45 = new PivotField(){ ShowAll = false };

            PivotField pivotField46 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items25 = new Items(){ Count = 5U };
            Item item224 = new Item(){ Index = 0U };
            Item item225 = new Item(){ Index = 1U };
            Item item226 = new Item(){ Index = 3U };
            Item item227 = new Item(){ Index = 2U };
            Item item228 = new Item(){ ItemType = ItemValues.Default };

            items25.Append(item224);
            items25.Append(item225);
            items25.Append(item226);
            items25.Append(item227);
            items25.Append(item228);

            pivotField46.Append(items25);
            PivotField pivotField47 = new PivotField(){ ShowAll = false };

            PivotField pivotField48 = new PivotField(){ ShowAll = false, DefaultSubtotal = false };

            Items items26 = new Items(){ Count = 5U };
            Item item229 = new Item(){ Index = 0U };
            Item item230 = new Item(){ Index = 1U };
            Item item231 = new Item(){ Index = 2U };
            Item item232 = new Item(){ Index = 3U };
            Item item233 = new Item(){ Index = 4U };

            items26.Append(item229);
            items26.Append(item230);
            items26.Append(item231);
            items26.Append(item232);
            items26.Append(item233);

            pivotField48.Append(items26);

            pivotFields7.Append(pivotField42);
            pivotFields7.Append(pivotField43);
            pivotFields7.Append(pivotField44);
            pivotFields7.Append(pivotField45);
            pivotFields7.Append(pivotField46);
            pivotFields7.Append(pivotField47);
            pivotFields7.Append(pivotField48);

            RowFields rowFields7 = new RowFields(){ Count = 1U };
            Field field7 = new Field(){ Index = 1 };

            rowFields7.Append(field7);

            RowItems rowItems7 = new RowItems(){ Count = 4U };

            RowItem rowItem31 = new RowItem();
            MemberPropertyIndex memberPropertyIndex25 = new MemberPropertyIndex();

            rowItem31.Append(memberPropertyIndex25);

            RowItem rowItem32 = new RowItem();
            MemberPropertyIndex memberPropertyIndex26 = new MemberPropertyIndex(){ Val = 3 };

            rowItem32.Append(memberPropertyIndex26);

            RowItem rowItem33 = new RowItem();
            MemberPropertyIndex memberPropertyIndex27 = new MemberPropertyIndex(){ Val = 4 };

            rowItem33.Append(memberPropertyIndex27);

            RowItem rowItem34 = new RowItem(){ ItemType = ItemValues.Grand };
            MemberPropertyIndex memberPropertyIndex28 = new MemberPropertyIndex();

            rowItem34.Append(memberPropertyIndex28);

            rowItems7.Append(rowItem31);
            rowItems7.Append(rowItem32);
            rowItems7.Append(rowItem33);
            rowItems7.Append(rowItem34);

            ColumnItems columnItems7 = new ColumnItems(){ Count = 1U };
            RowItem rowItem35 = new RowItem();

            columnItems7.Append(rowItem35);

            DataFields dataFields7 = new DataFields(){ Count = 1U };
            DataField dataField7 = new DataField(){ Name = "Sum of Quantity", Field = 2U, BaseField = 0, BaseItem = 0U };

            dataFields7.Append(dataField7);

            ChartFormats chartFormats7 = new ChartFormats(){ Count = 15U };

            ChartFormat chartFormat52 = new ChartFormat(){ Chart = 4U, Format = 0U, Series = true };

            PivotArea pivotArea52 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences52 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference52 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem74 = new FieldItem(){ Val = 0U };

            pivotAreaReference52.Append(fieldItem74);

            pivotAreaReferences52.Append(pivotAreaReference52);

            pivotArea52.Append(pivotAreaReferences52);

            chartFormat52.Append(pivotArea52);

            ChartFormat chartFormat53 = new ChartFormat(){ Chart = 5U, Format = 2U, Series = true };

            PivotArea pivotArea53 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences53 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference53 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem75 = new FieldItem(){ Val = 0U };

            pivotAreaReference53.Append(fieldItem75);

            pivotAreaReferences53.Append(pivotAreaReference53);

            pivotArea53.Append(pivotAreaReferences53);

            chartFormat53.Append(pivotArea53);

            ChartFormat chartFormat54 = new ChartFormat(){ Chart = 6U, Format = 0U, Series = true };

            PivotArea pivotArea54 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences54 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference54 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem76 = new FieldItem(){ Val = 0U };

            pivotAreaReference54.Append(fieldItem76);

            pivotAreaReferences54.Append(pivotAreaReference54);

            pivotArea54.Append(pivotAreaReferences54);

            chartFormat54.Append(pivotArea54);

            ChartFormat chartFormat55 = new ChartFormat(){ Chart = 7U, Format = 14U, Series = true };

            PivotArea pivotArea55 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences55 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference55 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem77 = new FieldItem(){ Val = 0U };

            pivotAreaReference55.Append(fieldItem77);

            pivotAreaReferences55.Append(pivotAreaReference55);

            pivotArea55.Append(pivotAreaReferences55);

            chartFormat55.Append(pivotArea55);

            ChartFormat chartFormat56 = new ChartFormat(){ Chart = 8U, Format = 1U, Series = true };

            PivotArea pivotArea56 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences56 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference56 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem78 = new FieldItem(){ Val = 0U };

            pivotAreaReference56.Append(fieldItem78);

            pivotAreaReferences56.Append(pivotAreaReference56);

            pivotArea56.Append(pivotAreaReferences56);

            chartFormat56.Append(pivotArea56);

            ChartFormat chartFormat57 = new ChartFormat(){ Chart = 9U, Format = 15U, Series = true };

            PivotArea pivotArea57 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences57 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference57 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem79 = new FieldItem(){ Val = 0U };

            pivotAreaReference57.Append(fieldItem79);

            pivotAreaReferences57.Append(pivotAreaReference57);

            pivotArea57.Append(pivotAreaReferences57);

            chartFormat57.Append(pivotArea57);

            ChartFormat chartFormat58 = new ChartFormat(){ Chart = 10U, Format = 2U, Series = true };

            PivotArea pivotArea58 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences58 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference58 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem80 = new FieldItem(){ Val = 0U };

            pivotAreaReference58.Append(fieldItem80);

            pivotAreaReferences58.Append(pivotAreaReference58);

            pivotArea58.Append(pivotAreaReferences58);

            chartFormat58.Append(pivotArea58);

            ChartFormat chartFormat59 = new ChartFormat(){ Chart = 11U, Format = 16U, Series = true };

            PivotArea pivotArea59 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences59 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference59 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem81 = new FieldItem(){ Val = 0U };

            pivotAreaReference59.Append(fieldItem81);

            pivotAreaReferences59.Append(pivotAreaReference59);

            pivotArea59.Append(pivotAreaReferences59);

            chartFormat59.Append(pivotArea59);

            ChartFormat chartFormat60 = new ChartFormat(){ Chart = 12U, Format = 3U, Series = true };

            PivotArea pivotArea60 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences60 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference60 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem82 = new FieldItem(){ Val = 0U };

            pivotAreaReference60.Append(fieldItem82);

            pivotAreaReferences60.Append(pivotAreaReference60);

            pivotArea60.Append(pivotAreaReferences60);

            chartFormat60.Append(pivotArea60);

            ChartFormat chartFormat61 = new ChartFormat(){ Chart = 13U, Format = 17U, Series = true };

            PivotArea pivotArea61 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences61 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference61 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem83 = new FieldItem(){ Val = 0U };

            pivotAreaReference61.Append(fieldItem83);

            pivotAreaReferences61.Append(pivotAreaReference61);

            pivotArea61.Append(pivotAreaReferences61);

            chartFormat61.Append(pivotArea61);

            ChartFormat chartFormat62 = new ChartFormat(){ Chart = 14U, Format = 4U, Series = true };

            PivotArea pivotArea62 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences62 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference62 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem84 = new FieldItem(){ Val = 0U };

            pivotAreaReference62.Append(fieldItem84);

            pivotAreaReferences62.Append(pivotAreaReference62);

            pivotArea62.Append(pivotAreaReferences62);

            chartFormat62.Append(pivotArea62);

            ChartFormat chartFormat63 = new ChartFormat(){ Chart = 15U, Format = 18U, Series = true };

            PivotArea pivotArea63 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences63 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference63 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem85 = new FieldItem(){ Val = 0U };

            pivotAreaReference63.Append(fieldItem85);

            pivotAreaReferences63.Append(pivotAreaReference63);

            pivotArea63.Append(pivotAreaReferences63);

            chartFormat63.Append(pivotArea63);

            ChartFormat chartFormat64 = new ChartFormat(){ Chart = 16U, Format = 5U, Series = true };

            PivotArea pivotArea64 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences64 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference64 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem86 = new FieldItem(){ Val = 0U };

            pivotAreaReference64.Append(fieldItem86);

            pivotAreaReferences64.Append(pivotAreaReference64);

            pivotArea64.Append(pivotAreaReferences64);

            chartFormat64.Append(pivotArea64);

            ChartFormat chartFormat65 = new ChartFormat(){ Chart = 17U, Format = 19U, Series = true };

            PivotArea pivotArea65 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences65 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference65 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem87 = new FieldItem(){ Val = 0U };

            pivotAreaReference65.Append(fieldItem87);

            pivotAreaReferences65.Append(pivotAreaReference65);

            pivotArea65.Append(pivotAreaReferences65);

            chartFormat65.Append(pivotArea65);

            ChartFormat chartFormat66 = new ChartFormat(){ Chart = 18U, Format = 6U, Series = true };

            PivotArea pivotArea66 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences66 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference66 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem88 = new FieldItem(){ Val = 0U };

            pivotAreaReference66.Append(fieldItem88);

            pivotAreaReferences66.Append(pivotAreaReference66);

            pivotArea66.Append(pivotAreaReferences66);

            chartFormat66.Append(pivotArea66);

            chartFormats7.Append(chartFormat52);
            chartFormats7.Append(chartFormat53);
            chartFormats7.Append(chartFormat54);
            chartFormats7.Append(chartFormat55);
            chartFormats7.Append(chartFormat56);
            chartFormats7.Append(chartFormat57);
            chartFormats7.Append(chartFormat58);
            chartFormats7.Append(chartFormat59);
            chartFormats7.Append(chartFormat60);
            chartFormats7.Append(chartFormat61);
            chartFormats7.Append(chartFormat62);
            chartFormats7.Append(chartFormat63);
            chartFormats7.Append(chartFormat64);
            chartFormats7.Append(chartFormat65);
            chartFormats7.Append(chartFormat66);
            PivotTableStyle pivotTableStyle7 = new PivotTableStyle(){ Name = "PivotStyleLight16", ShowRowHeaders = true, ShowColumnHeaders = true, ShowRowStripes = false, ShowColumnStripes = false, ShowLastColumn = true };

            PivotTableDefinitionExtensionList pivotTableDefinitionExtensionList7 = new PivotTableDefinitionExtensionList();

            PivotTableDefinitionExtension pivotTableDefinitionExtension7 = new PivotTableDefinitionExtension(){ Uri = "{962EF5D1-5CA2-4c93-8EF4-DBF5C05439D2}" };
            pivotTableDefinitionExtension7.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");

            X14.PivotTableDefinition pivotTableDefinition14 = new X14.PivotTableDefinition(){ HideValuesRow = true };
            pivotTableDefinition14.AddNamespaceDeclaration("xm", "http://schemas.microsoft.com/office/excel/2006/main");

            pivotTableDefinitionExtension7.Append(pivotTableDefinition14);

            pivotTableDefinitionExtensionList7.Append(pivotTableDefinitionExtension7);

            pivotTableDefinition13.Append(location7);
            pivotTableDefinition13.Append(pivotFields7);
            pivotTableDefinition13.Append(rowFields7);
            pivotTableDefinition13.Append(rowItems7);
            pivotTableDefinition13.Append(columnItems7);
            pivotTableDefinition13.Append(dataFields7);
            pivotTableDefinition13.Append(chartFormats7);
            pivotTableDefinition13.Append(pivotTableStyle7);
            pivotTableDefinition13.Append(pivotTableDefinitionExtensionList7);

            pivotTablePart7.PivotTableDefinition = pivotTableDefinition13;
        }

        // Generates content of timeLineCachePart7.
        private static void GenerateTimeLineCachePart7Content(TimeLineCachePart timeLineCachePart7)
        {
            X15.TimelineCacheDefinition timelineCacheDefinition7 = new X15.TimelineCacheDefinition(){ Name = "NativeTimeline_DeliveryDate4", SourceName = "DeliveryDate" };
            timelineCacheDefinition7.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCachePivotTables timelineCachePivotTables7 = new X15.TimelineCachePivotTables();
            X15.TimelineCachePivotTable timelineCachePivotTable7 = new X15.TimelineCachePivotTable(){ TabId = 8U, Name = "PivotTable1" };

            timelineCachePivotTables7.Append(timelineCachePivotTable7);

            X15.TimelineState timelineState7 = new X15.TimelineState(){ MinimalRefreshVersion = 6U, LastRefreshVersion = 6U, PivotCacheId = 2U, FilterType = PivotFilterValues.Unknown };
            X15.BoundsTimelineRange boundsTimelineRange7 = new X15.BoundsTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2004-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelineState7.Append(boundsTimelineRange7);

            timelineCacheDefinition7.Append(timelineCachePivotTables7);
            timelineCacheDefinition7.Append(timelineState7);

            timeLineCachePart7.TimelineCacheDefinition = timelineCacheDefinition7;
        }

        // Generates content of worksheetPart10.
        private static void GenerateWorksheetPart10Content(WorksheetPart worksheetPart10)
        {
            Worksheet worksheet10 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet10.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet10.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet10.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension10 = new SheetDimension(){ Reference = "A1:B5" };

            SheetViews sheetViews10 = new SheetViews();
            SheetView sheetView10 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews10.Append(sheetView10);
            SheetFormatProperties sheetFormatProperties10 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns10 = new Columns();
            Column column62 = new Column(){ Min = 1U, Max = 1U, Width = 14.140625D, BestFit = true, CustomWidth = true };
            Column column63 = new Column(){ Min = 2U, Max = 2U, Width = 17.42578125D, CustomWidth = true };
            Column column64 = new Column(){ Min = 3U, Max = 3U, Width = 12.42578125D, CustomWidth = true };
            Column column65 = new Column(){ Min = 4U, Max = 11U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column66 = new Column(){ Min = 12U, Max = 12U, Width = 13D, CustomWidth = true };
            Column column67 = new Column(){ Min = 13U, Max = 20U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column68 = new Column(){ Min = 21U, Max = 23U, Width = 20.42578125D, BestFit = true, CustomWidth = true };

            columns10.Append(column62);
            columns10.Append(column63);
            columns10.Append(column64);
            columns10.Append(column65);
            columns10.Append(column66);
            columns10.Append(column67);
            columns10.Append(column68);

            SheetData sheetData10 = new SheetData();

            Row row58 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell203 = new Cell(){ CellReference = "A1", StyleIndex = 5U, DataType = CellValues.SharedString };
            CellValue cellValue203 = new CellValue();
            cellValue203.Text = "29";

            cell203.Append(cellValue203);

            Cell cell204 = new Cell(){ CellReference = "B1", DataType = CellValues.SharedString };
            CellValue cellValue204 = new CellValue();
            cellValue204.Text = "28";

            cell204.Append(cellValue204);

            row58.Append(cell203);
            row58.Append(cell204);

            Row row59 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell205 = new Cell(){ CellReference = "A2", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue205 = new CellValue();
            cellValue205.Text = "6";

            cell205.Append(cellValue205);

            Cell cell206 = new Cell(){ CellReference = "B2", StyleIndex = 7U };
            CellValue cellValue206 = new CellValue();
            cellValue206.Text = "19";

            cell206.Append(cellValue206);

            row59.Append(cell205);
            row59.Append(cell206);

            Row row60 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell207 = new Cell(){ CellReference = "A3", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue207 = new CellValue();
            cellValue207.Text = "8";

            cell207.Append(cellValue207);

            Cell cell208 = new Cell(){ CellReference = "B3", StyleIndex = 7U };
            CellValue cellValue208 = new CellValue();
            cellValue208.Text = "13";

            cell208.Append(cellValue208);

            row60.Append(cell207);
            row60.Append(cell208);

            Row row61 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell209 = new Cell(){ CellReference = "A4", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue209 = new CellValue();
            cellValue209.Text = "11";

            cell209.Append(cellValue209);

            Cell cell210 = new Cell(){ CellReference = "B4", StyleIndex = 7U };
            CellValue cellValue210 = new CellValue();
            cellValue210.Text = "33";

            cell210.Append(cellValue210);

            row61.Append(cell209);
            row61.Append(cell210);

            Row row62 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell211 = new Cell(){ CellReference = "A5", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue211 = new CellValue();
            cellValue211.Text = "30";

            cell211.Append(cellValue211);

            Cell cell212 = new Cell(){ CellReference = "B5", StyleIndex = 7U };
            CellValue cellValue212 = new CellValue();
            cellValue212.Text = "65";

            cell212.Append(cellValue212);

            row62.Append(cell211);
            row62.Append(cell212);

            sheetData10.Append(row58);
            sheetData10.Append(row59);
            sheetData10.Append(row60);
            sheetData10.Append(row61);
            sheetData10.Append(row62);
            PhoneticProperties phoneticProperties16 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins24 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            S.Drawing drawing8 = new S.Drawing(){ Id = "rId2" };

            WorksheetExtensionList worksheetExtensionList8 = new WorksheetExtensionList();

            WorksheetExtension worksheetExtension8 = new WorksheetExtension(){ Uri = "{7E03D99C-DC04-49d9-9315-930204A7B6E9}" };
            worksheetExtension8.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineReferences timelineReferences8 = new X15.TimelineReferences();
            X15.TimelineReference timelineReference8 = new X15.TimelineReference(){ Id = "rId3" };

            timelineReferences8.Append(timelineReference8);

            worksheetExtension8.Append(timelineReferences8);

            worksheetExtensionList8.Append(worksheetExtension8);

            worksheet10.Append(sheetDimension10);
            worksheet10.Append(sheetViews10);
            worksheet10.Append(sheetFormatProperties10);
            worksheet10.Append(columns10);
            worksheet10.Append(sheetData10);
            worksheet10.Append(phoneticProperties16);
            worksheet10.Append(pageMargins24);
            worksheet10.Append(drawing8);
            worksheet10.Append(worksheetExtensionList8);

            worksheetPart10.Worksheet = worksheet10;
        }

        // Generates content of timeLinePart8.
        private static void GenerateTimeLinePart8Content(TimeLinePart timeLinePart8)
        {
            X15.Timelines timelines8 = new X15.Timelines(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x" }  };
            timelines8.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            timelines8.AddNamespaceDeclaration("x", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");
            X15.Timeline timeline15 = new X15.Timeline(){ Name = "DeliveryDate", Cache = "NativeTimeline_DeliveryDate", Caption = "Level1", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline16 = new X15.Timeline(){ Name = "DeliveryDate 1", Cache = "NativeTimeline_DeliveryDate", Caption = "Level2", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-06T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline17 = new X15.Timeline(){ Name = "DeliveryDate 2", Cache = "NativeTimeline_DeliveryDate", Caption = "Level3", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline18 = new X15.Timeline(){ Name = "DeliveryDate 3", Cache = "NativeTimeline_DeliveryDate", Caption = "Level4", Level = 2U, SelectionLevel = 2U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelines8.Append(timeline15);
            timelines8.Append(timeline16);
            timelines8.Append(timeline17);
            timelines8.Append(timeline18);

            timeLinePart8.Timelines = timelines8;
        }

        // Generates content of drawingsPart8.
        private static void GenerateDrawingsPart8Content(DrawingsPart drawingsPart8)
        {
            Xdr.WorksheetDrawing worksheetDrawing8 = new Xdr.WorksheetDrawing();
            worksheetDrawing8.AddNamespaceDeclaration("xdr", "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing");
            worksheetDrawing8.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            Xdr.TwoCellAnchor twoCellAnchor29 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker29 = new Xdr.FromMarker();
            Xdr.ColumnId columnId57 = new Xdr.ColumnId();
            columnId57.Text = "2";
            Xdr.ColumnOffset columnOffset57 = new Xdr.ColumnOffset();
            columnOffset57.Text = "185737";
            Xdr.RowId rowId57 = new Xdr.RowId();
            rowId57.Text = "0";
            Xdr.RowOffset rowOffset57 = new Xdr.RowOffset();
            rowOffset57.Text = "0";

            fromMarker29.Append(columnId57);
            fromMarker29.Append(columnOffset57);
            fromMarker29.Append(rowId57);
            fromMarker29.Append(rowOffset57);

            Xdr.ToMarker toMarker29 = new Xdr.ToMarker();
            Xdr.ColumnId columnId58 = new Xdr.ColumnId();
            columnId58.Text = "9";
            Xdr.ColumnOffset columnOffset58 = new Xdr.ColumnOffset();
            columnOffset58.Text = "90487";
            Xdr.RowId rowId58 = new Xdr.RowId();
            rowId58.Text = "14";
            Xdr.RowOffset rowOffset58 = new Xdr.RowOffset();
            rowOffset58.Text = "76200";

            toMarker29.Append(columnId58);
            toMarker29.Append(columnOffset58);
            toMarker29.Append(rowId58);
            toMarker29.Append(rowOffset58);

            Xdr.GraphicFrame graphicFrame29 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties29 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties43 = new Xdr.NonVisualDrawingProperties(){ Id = 2U, Name = "Chart 1" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties29 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties29.Append(nonVisualDrawingProperties43);
            nonVisualGraphicFrameProperties29.Append(nonVisualGraphicFrameDrawingProperties29);

            Xdr.Transform transform29 = new Xdr.Transform();
            A.Offset offset43 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents43 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform29.Append(offset43);
            transform29.Append(extents43);

            A.Graphic graphic29 = new A.Graphic();

            A.GraphicData graphicData29 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference15 = new C.ChartReference(){ Id = "rId1" };
            chartReference15.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference15.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData29.Append(chartReference15);

            graphic29.Append(graphicData29);

            graphicFrame29.Append(nonVisualGraphicFrameProperties29);
            graphicFrame29.Append(transform29);
            graphicFrame29.Append(graphic29);
            Xdr.ClientData clientData29 = new Xdr.ClientData();

            twoCellAnchor29.Append(fromMarker29);
            twoCellAnchor29.Append(toMarker29);
            twoCellAnchor29.Append(graphicFrame29);
            twoCellAnchor29.Append(clientData29);

            Xdr.TwoCellAnchor twoCellAnchor30 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker30 = new Xdr.FromMarker();
            Xdr.ColumnId columnId59 = new Xdr.ColumnId();
            columnId59.Text = "2";
            Xdr.ColumnOffset columnOffset59 = new Xdr.ColumnOffset();
            columnOffset59.Text = "200025";
            Xdr.RowId rowId59 = new Xdr.RowId();
            rowId59.Text = "14";
            Xdr.RowOffset rowOffset59 = new Xdr.RowOffset();
            rowOffset59.Text = "147637";

            fromMarker30.Append(columnId59);
            fromMarker30.Append(columnOffset59);
            fromMarker30.Append(rowId59);
            fromMarker30.Append(rowOffset59);

            Xdr.ToMarker toMarker30 = new Xdr.ToMarker();
            Xdr.ColumnId columnId60 = new Xdr.ColumnId();
            columnId60.Text = "7";
            Xdr.ColumnOffset columnOffset60 = new Xdr.ColumnOffset();
            columnOffset60.Text = "476250";
            Xdr.RowId rowId60 = new Xdr.RowId();
            rowId60.Text = "29";
            Xdr.RowOffset rowOffset60 = new Xdr.RowOffset();
            rowOffset60.Text = "33337";

            toMarker30.Append(columnId60);
            toMarker30.Append(columnOffset60);
            toMarker30.Append(rowId60);
            toMarker30.Append(rowOffset60);

            Xdr.GraphicFrame graphicFrame30 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties30 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties44 = new Xdr.NonVisualDrawingProperties(){ Id = 3U, Name = "グラフ 2" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties30 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties30.Append(nonVisualDrawingProperties44);
            nonVisualGraphicFrameProperties30.Append(nonVisualGraphicFrameDrawingProperties30);

            Xdr.Transform transform30 = new Xdr.Transform();
            A.Offset offset44 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents44 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform30.Append(offset44);
            transform30.Append(extents44);

            A.Graphic graphic30 = new A.Graphic();

            A.GraphicData graphicData30 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference16 = new C.ChartReference(){ Id = "rId2" };
            chartReference16.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference16.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData30.Append(chartReference16);

            graphic30.Append(graphicData30);

            graphicFrame30.Append(nonVisualGraphicFrameProperties30);
            graphicFrame30.Append(transform30);
            graphicFrame30.Append(graphic30);
            Xdr.ClientData clientData30 = new Xdr.ClientData();

            twoCellAnchor30.Append(fromMarker30);
            twoCellAnchor30.Append(toMarker30);
            twoCellAnchor30.Append(graphicFrame30);
            twoCellAnchor30.Append(clientData30);

            Xdr.TwoCellAnchor twoCellAnchor31 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker31 = new Xdr.FromMarker();
            Xdr.ColumnId columnId61 = new Xdr.ColumnId();
            columnId61.Text = "10";
            Xdr.ColumnOffset columnOffset61 = new Xdr.ColumnOffset();
            columnOffset61.Text = "28575";
            Xdr.RowId rowId61 = new Xdr.RowId();
            rowId61.Text = "0";
            Xdr.RowOffset rowOffset61 = new Xdr.RowOffset();
            rowOffset61.Text = "38100";

            fromMarker31.Append(columnId61);
            fromMarker31.Append(columnOffset61);
            fromMarker31.Append(rowId61);
            fromMarker31.Append(rowOffset61);

            Xdr.ToMarker toMarker31 = new Xdr.ToMarker();
            Xdr.ColumnId columnId62 = new Xdr.ColumnId();
            columnId62.Text = "13";
            Xdr.ColumnOffset columnOffset62 = new Xdr.ColumnOffset();
            columnOffset62.Text = "762000";
            Xdr.RowId rowId62 = new Xdr.RowId();
            rowId62.Text = "6";
            Xdr.RowOffset rowOffset62 = new Xdr.RowOffset();
            rowOffset62.Text = "85725";

            toMarker31.Append(columnId62);
            toMarker31.Append(columnOffset62);
            toMarker31.Append(rowId62);
            toMarker31.Append(rowOffset62);

            AlternateContent alternateContent30 = new AlternateContent();
            alternateContent30.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent30.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice30 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame31 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties31 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties45 = new Xdr.NonVisualDrawingProperties(){ Id = 5U, Name = "DeliveryDate" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties31 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties31.Append(nonVisualDrawingProperties45);
            nonVisualGraphicFrameProperties31.Append(nonVisualGraphicFrameDrawingProperties31);

            Xdr.Transform transform31 = new Xdr.Transform();
            A.Offset offset45 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents45 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform31.Append(offset45);
            transform31.Append(extents45);

            A.Graphic graphic31 = new A.Graphic();

            A.GraphicData graphicData31 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer15 = new Tsle.TimeSlicer(){ Name = "DeliveryDate" };
            timeSlicer15.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData31.Append(timeSlicer15);

            graphic31.Append(graphicData31);

            graphicFrame31.Append(nonVisualGraphicFrameProperties31);
            graphicFrame31.Append(transform31);
            graphicFrame31.Append(graphic31);

            alternateContentChoice30.Append(graphicFrame31);

            AlternateContentFallback alternateContentFallback29 = new AlternateContentFallback();
            alternateContentFallback29.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback29.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape15 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties15 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties46 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties15 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks15 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties15.Append(shapeLocks15);

            nonVisualShapeProperties15.Append(nonVisualDrawingProperties46);
            nonVisualShapeProperties15.Append(nonVisualShapeDrawingProperties15);

            Xdr.ShapeProperties shapeProperties62 = new Xdr.ShapeProperties();

            A.Transform2D transform2D15 = new A.Transform2D();
            A.Offset offset46 = new A.Offset(){ X = 8629650L, Y = 38100L };
            A.Extents extents46 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D15.Append(offset46);
            transform2D15.Append(extents46);

            A.PresetGeometry presetGeometry15 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList15 = new A.AdjustValueList();

            presetGeometry15.Append(adjustValueList15);

            A.SolidFill solidFill117 = new A.SolidFill();
            A.PresetColor presetColor29 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill117.Append(presetColor29);

            A.Outline outline95 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill118 = new A.SolidFill();
            A.PresetColor presetColor30 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill118.Append(presetColor30);

            outline95.Append(solidFill118);

            shapeProperties62.Append(transform2D15);
            shapeProperties62.Append(presetGeometry15);
            shapeProperties62.Append(solidFill117);
            shapeProperties62.Append(outline95);

            Xdr.TextBody textBody15 = new Xdr.TextBody();
            A.BodyProperties bodyProperties39 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle39 = new A.ListStyle();

            A.Paragraph paragraph39 = new A.Paragraph();

            A.Run run15 = new A.Run();
            A.RunProperties runProperties15 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text53 = new A.Text();
            text53.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run15.Append(runProperties15);
            run15.Append(text53);

            paragraph39.Append(run15);

            textBody15.Append(bodyProperties39);
            textBody15.Append(listStyle39);
            textBody15.Append(paragraph39);

            shape15.Append(nonVisualShapeProperties15);
            shape15.Append(shapeProperties62);
            shape15.Append(textBody15);

            alternateContentFallback29.Append(shape15);

            alternateContent30.Append(alternateContentChoice30);
            alternateContent30.Append(alternateContentFallback29);
            Xdr.ClientData clientData31 = new Xdr.ClientData();

            twoCellAnchor31.Append(fromMarker31);
            twoCellAnchor31.Append(toMarker31);
            twoCellAnchor31.Append(alternateContent30);
            twoCellAnchor31.Append(clientData31);

            Xdr.TwoCellAnchor twoCellAnchor32 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker32 = new Xdr.FromMarker();
            Xdr.ColumnId columnId63 = new Xdr.ColumnId();
            columnId63.Text = "9";
            Xdr.ColumnOffset columnOffset63 = new Xdr.ColumnOffset();
            columnOffset63.Text = "857250";
            Xdr.RowId rowId63 = new Xdr.RowId();
            rowId63.Text = "8";
            Xdr.RowOffset rowOffset63 = new Xdr.RowOffset();
            rowOffset63.Text = "19050";

            fromMarker32.Append(columnId63);
            fromMarker32.Append(columnOffset63);
            fromMarker32.Append(rowId63);
            fromMarker32.Append(rowOffset63);

            Xdr.ToMarker toMarker32 = new Xdr.ToMarker();
            Xdr.ColumnId columnId64 = new Xdr.ColumnId();
            columnId64.Text = "13";
            Xdr.ColumnOffset columnOffset64 = new Xdr.ColumnOffset();
            columnOffset64.Text = "723900";
            Xdr.RowId rowId64 = new Xdr.RowId();
            rowId64.Text = "14";
            Xdr.RowOffset rowOffset64 = new Xdr.RowOffset();
            rowOffset64.Text = "66675";

            toMarker32.Append(columnId64);
            toMarker32.Append(columnOffset64);
            toMarker32.Append(rowId64);
            toMarker32.Append(rowOffset64);

            AlternateContent alternateContent31 = new AlternateContent();
            alternateContent31.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent31.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice31 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame32 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties32 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties47 = new Xdr.NonVisualDrawingProperties(){ Id = 6U, Name = "DeliveryDate 1" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties32 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties32.Append(nonVisualDrawingProperties47);
            nonVisualGraphicFrameProperties32.Append(nonVisualGraphicFrameDrawingProperties32);

            Xdr.Transform transform32 = new Xdr.Transform();
            A.Offset offset47 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents47 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform32.Append(offset47);
            transform32.Append(extents47);

            A.Graphic graphic32 = new A.Graphic();

            A.GraphicData graphicData32 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer16 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 1" };
            timeSlicer16.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData32.Append(timeSlicer16);

            graphic32.Append(graphicData32);

            graphicFrame32.Append(nonVisualGraphicFrameProperties32);
            graphicFrame32.Append(transform32);
            graphicFrame32.Append(graphic32);

            alternateContentChoice31.Append(graphicFrame32);

            AlternateContentFallback alternateContentFallback30 = new AlternateContentFallback();
            alternateContentFallback30.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback30.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape16 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties16 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties48 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties16 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks16 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties16.Append(shapeLocks16);

            nonVisualShapeProperties16.Append(nonVisualDrawingProperties48);
            nonVisualShapeProperties16.Append(nonVisualShapeDrawingProperties16);

            Xdr.ShapeProperties shapeProperties63 = new Xdr.ShapeProperties();

            A.Transform2D transform2D16 = new A.Transform2D();
            A.Offset offset48 = new A.Offset(){ X = 8591550L, Y = 1543050L };
            A.Extents extents48 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D16.Append(offset48);
            transform2D16.Append(extents48);

            A.PresetGeometry presetGeometry16 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList16 = new A.AdjustValueList();

            presetGeometry16.Append(adjustValueList16);

            A.SolidFill solidFill119 = new A.SolidFill();
            A.PresetColor presetColor31 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill119.Append(presetColor31);

            A.Outline outline96 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill120 = new A.SolidFill();
            A.PresetColor presetColor32 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill120.Append(presetColor32);

            outline96.Append(solidFill120);

            shapeProperties63.Append(transform2D16);
            shapeProperties63.Append(presetGeometry16);
            shapeProperties63.Append(solidFill119);
            shapeProperties63.Append(outline96);

            Xdr.TextBody textBody16 = new Xdr.TextBody();
            A.BodyProperties bodyProperties40 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle40 = new A.ListStyle();

            A.Paragraph paragraph40 = new A.Paragraph();

            A.Run run16 = new A.Run();
            A.RunProperties runProperties16 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text54 = new A.Text();
            text54.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run16.Append(runProperties16);
            run16.Append(text54);

            paragraph40.Append(run16);

            textBody16.Append(bodyProperties40);
            textBody16.Append(listStyle40);
            textBody16.Append(paragraph40);

            shape16.Append(nonVisualShapeProperties16);
            shape16.Append(shapeProperties63);
            shape16.Append(textBody16);

            alternateContentFallback30.Append(shape16);

            alternateContent31.Append(alternateContentChoice31);
            alternateContent31.Append(alternateContentFallback30);
            Xdr.ClientData clientData32 = new Xdr.ClientData();

            twoCellAnchor32.Append(fromMarker32);
            twoCellAnchor32.Append(toMarker32);
            twoCellAnchor32.Append(alternateContent31);
            twoCellAnchor32.Append(clientData32);

            Xdr.TwoCellAnchor twoCellAnchor33 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker33 = new Xdr.FromMarker();
            Xdr.ColumnId columnId65 = new Xdr.ColumnId();
            columnId65.Text = "10";
            Xdr.ColumnOffset columnOffset65 = new Xdr.ColumnOffset();
            columnOffset65.Text = "9525";
            Xdr.RowId rowId65 = new Xdr.RowId();
            rowId65.Text = "16";
            Xdr.RowOffset rowOffset65 = new Xdr.RowOffset();
            rowOffset65.Text = "0";

            fromMarker33.Append(columnId65);
            fromMarker33.Append(columnOffset65);
            fromMarker33.Append(rowId65);
            fromMarker33.Append(rowOffset65);

            Xdr.ToMarker toMarker33 = new Xdr.ToMarker();
            Xdr.ColumnId columnId66 = new Xdr.ColumnId();
            columnId66.Text = "13";
            Xdr.ColumnOffset columnOffset66 = new Xdr.ColumnOffset();
            columnOffset66.Text = "742950";
            Xdr.RowId rowId66 = new Xdr.RowId();
            rowId66.Text = "22";
            Xdr.RowOffset rowOffset66 = new Xdr.RowOffset();
            rowOffset66.Text = "47625";

            toMarker33.Append(columnId66);
            toMarker33.Append(columnOffset66);
            toMarker33.Append(rowId66);
            toMarker33.Append(rowOffset66);

            AlternateContent alternateContent32 = new AlternateContent();
            alternateContent32.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent32.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice32 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame33 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties33 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties49 = new Xdr.NonVisualDrawingProperties(){ Id = 7U, Name = "DeliveryDate 2" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties33 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties33.Append(nonVisualDrawingProperties49);
            nonVisualGraphicFrameProperties33.Append(nonVisualGraphicFrameDrawingProperties33);

            Xdr.Transform transform33 = new Xdr.Transform();
            A.Offset offset49 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents49 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform33.Append(offset49);
            transform33.Append(extents49);

            A.Graphic graphic33 = new A.Graphic();

            A.GraphicData graphicData33 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer17 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 2" };
            timeSlicer17.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData33.Append(timeSlicer17);

            graphic33.Append(graphicData33);

            graphicFrame33.Append(nonVisualGraphicFrameProperties33);
            graphicFrame33.Append(transform33);
            graphicFrame33.Append(graphic33);

            alternateContentChoice32.Append(graphicFrame33);

            AlternateContentFallback alternateContentFallback31 = new AlternateContentFallback();
            alternateContentFallback31.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback31.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape17 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties17 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties50 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties17 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks17 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties17.Append(shapeLocks17);

            nonVisualShapeProperties17.Append(nonVisualDrawingProperties50);
            nonVisualShapeProperties17.Append(nonVisualShapeDrawingProperties17);

            Xdr.ShapeProperties shapeProperties64 = new Xdr.ShapeProperties();

            A.Transform2D transform2D17 = new A.Transform2D();
            A.Offset offset50 = new A.Offset(){ X = 8610600L, Y = 3048000L };
            A.Extents extents50 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D17.Append(offset50);
            transform2D17.Append(extents50);

            A.PresetGeometry presetGeometry17 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList17 = new A.AdjustValueList();

            presetGeometry17.Append(adjustValueList17);

            A.SolidFill solidFill121 = new A.SolidFill();
            A.PresetColor presetColor33 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill121.Append(presetColor33);

            A.Outline outline97 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill122 = new A.SolidFill();
            A.PresetColor presetColor34 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill122.Append(presetColor34);

            outline97.Append(solidFill122);

            shapeProperties64.Append(transform2D17);
            shapeProperties64.Append(presetGeometry17);
            shapeProperties64.Append(solidFill121);
            shapeProperties64.Append(outline97);

            Xdr.TextBody textBody17 = new Xdr.TextBody();
            A.BodyProperties bodyProperties41 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle41 = new A.ListStyle();

            A.Paragraph paragraph41 = new A.Paragraph();

            A.Run run17 = new A.Run();
            A.RunProperties runProperties17 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text55 = new A.Text();
            text55.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run17.Append(runProperties17);
            run17.Append(text55);

            paragraph41.Append(run17);

            textBody17.Append(bodyProperties41);
            textBody17.Append(listStyle41);
            textBody17.Append(paragraph41);

            shape17.Append(nonVisualShapeProperties17);
            shape17.Append(shapeProperties64);
            shape17.Append(textBody17);

            alternateContentFallback31.Append(shape17);

            alternateContent32.Append(alternateContentChoice32);
            alternateContent32.Append(alternateContentFallback31);
            Xdr.ClientData clientData33 = new Xdr.ClientData();

            twoCellAnchor33.Append(fromMarker33);
            twoCellAnchor33.Append(toMarker33);
            twoCellAnchor33.Append(alternateContent32);
            twoCellAnchor33.Append(clientData33);

            Xdr.TwoCellAnchor twoCellAnchor34 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker34 = new Xdr.FromMarker();
            Xdr.ColumnId columnId67 = new Xdr.ColumnId();
            columnId67.Text = "10";
            Xdr.ColumnOffset columnOffset67 = new Xdr.ColumnOffset();
            columnOffset67.Text = "0";
            Xdr.RowId rowId67 = new Xdr.RowId();
            rowId67.Text = "23";
            Xdr.RowOffset rowOffset67 = new Xdr.RowOffset();
            rowOffset67.Text = "85725";

            fromMarker34.Append(columnId67);
            fromMarker34.Append(columnOffset67);
            fromMarker34.Append(rowId67);
            fromMarker34.Append(rowOffset67);

            Xdr.ToMarker toMarker34 = new Xdr.ToMarker();
            Xdr.ColumnId columnId68 = new Xdr.ColumnId();
            columnId68.Text = "13";
            Xdr.ColumnOffset columnOffset68 = new Xdr.ColumnOffset();
            columnOffset68.Text = "733425";
            Xdr.RowId rowId68 = new Xdr.RowId();
            rowId68.Text = "29";
            Xdr.RowOffset rowOffset68 = new Xdr.RowOffset();
            rowOffset68.Text = "133350";

            toMarker34.Append(columnId68);
            toMarker34.Append(columnOffset68);
            toMarker34.Append(rowId68);
            toMarker34.Append(rowOffset68);

            AlternateContent alternateContent33 = new AlternateContent();
            alternateContent33.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent33.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice33 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame34 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties34 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties51 = new Xdr.NonVisualDrawingProperties(){ Id = 8U, Name = "DeliveryDate 3" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties34 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties34.Append(nonVisualDrawingProperties51);
            nonVisualGraphicFrameProperties34.Append(nonVisualGraphicFrameDrawingProperties34);

            Xdr.Transform transform34 = new Xdr.Transform();
            A.Offset offset51 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents51 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform34.Append(offset51);
            transform34.Append(extents51);

            A.Graphic graphic34 = new A.Graphic();

            A.GraphicData graphicData34 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer18 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 3" };
            timeSlicer18.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData34.Append(timeSlicer18);

            graphic34.Append(graphicData34);

            graphicFrame34.Append(nonVisualGraphicFrameProperties34);
            graphicFrame34.Append(transform34);
            graphicFrame34.Append(graphic34);

            alternateContentChoice33.Append(graphicFrame34);

            AlternateContentFallback alternateContentFallback32 = new AlternateContentFallback();
            alternateContentFallback32.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback32.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape18 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties18 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties52 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties18 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks18 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties18.Append(shapeLocks18);

            nonVisualShapeProperties18.Append(nonVisualDrawingProperties52);
            nonVisualShapeProperties18.Append(nonVisualShapeDrawingProperties18);

            Xdr.ShapeProperties shapeProperties65 = new Xdr.ShapeProperties();

            A.Transform2D transform2D18 = new A.Transform2D();
            A.Offset offset52 = new A.Offset(){ X = 8601075L, Y = 4467225L };
            A.Extents extents52 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D18.Append(offset52);
            transform2D18.Append(extents52);

            A.PresetGeometry presetGeometry18 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList18 = new A.AdjustValueList();

            presetGeometry18.Append(adjustValueList18);

            A.SolidFill solidFill123 = new A.SolidFill();
            A.PresetColor presetColor35 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill123.Append(presetColor35);

            A.Outline outline98 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill124 = new A.SolidFill();
            A.PresetColor presetColor36 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill124.Append(presetColor36);

            outline98.Append(solidFill124);

            shapeProperties65.Append(transform2D18);
            shapeProperties65.Append(presetGeometry18);
            shapeProperties65.Append(solidFill123);
            shapeProperties65.Append(outline98);

            Xdr.TextBody textBody18 = new Xdr.TextBody();
            A.BodyProperties bodyProperties42 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle42 = new A.ListStyle();

            A.Paragraph paragraph42 = new A.Paragraph();

            A.Run run18 = new A.Run();
            A.RunProperties runProperties18 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text56 = new A.Text();
            text56.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run18.Append(runProperties18);
            run18.Append(text56);

            paragraph42.Append(run18);

            textBody18.Append(bodyProperties42);
            textBody18.Append(listStyle42);
            textBody18.Append(paragraph42);

            shape18.Append(nonVisualShapeProperties18);
            shape18.Append(shapeProperties65);
            shape18.Append(textBody18);

            alternateContentFallback32.Append(shape18);

            alternateContent33.Append(alternateContentChoice33);
            alternateContent33.Append(alternateContentFallback32);
            Xdr.ClientData clientData34 = new Xdr.ClientData();

            twoCellAnchor34.Append(fromMarker34);
            twoCellAnchor34.Append(toMarker34);
            twoCellAnchor34.Append(alternateContent33);
            twoCellAnchor34.Append(clientData34);

            worksheetDrawing8.Append(twoCellAnchor29);
            worksheetDrawing8.Append(twoCellAnchor30);
            worksheetDrawing8.Append(twoCellAnchor31);
            worksheetDrawing8.Append(twoCellAnchor32);
            worksheetDrawing8.Append(twoCellAnchor33);
            worksheetDrawing8.Append(twoCellAnchor34);

            drawingsPart8.WorksheetDrawing = worksheetDrawing8;
        }

        // Generates content of chartPart15.
        private static void GenerateChartPart15Content(ChartPart chartPart15)
        {
            C.ChartSpace chartSpace15 = new C.ChartSpace();
            chartSpace15.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace15.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace15.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date190415 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage15 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners15 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent34 = new AlternateContent();
            alternateContent34.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice34 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice34.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style29 = new C14.Style(){ Val = 102 };

            alternateContentChoice34.Append(style29);

            AlternateContentFallback alternateContentFallback33 = new AlternateContentFallback();
            C.Style style30 = new C.Style(){ Val = 2 };

            alternateContentFallback33.Append(style30);

            alternateContent34.Append(alternateContentChoice34);
            alternateContent34.Append(alternateContentFallback33);

            C.PivotSource pivotSource15 = new C.PivotSource();
            C.PivotTableName pivotTableName15 = new C.PivotTableName();
            pivotTableName15.Text = "[GeneratedDocument.xlsx]Level!PivotTable1";
            C.FormatId formatId15 = new C.FormatId(){ Val = 6U };

            pivotSource15.Append(pivotTableName15);
            pivotSource15.Append(formatId15);

            C.Chart chart15 = new C.Chart();

            C.Title title15 = new C.Title();
            C.Overlay overlay29 = new C.Overlay(){ Val = false };

            title15.Append(overlay29);
            C.AutoTitleDeleted autoTitleDeleted15 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats15 = new C.PivotFormats();

            C.PivotFormat pivotFormat139 = new C.PivotFormat();
            C.Index index153 = new C.Index(){ Val = 0U };

            C.Marker marker139 = new C.Marker();
            C.Symbol symbol139 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker139.Append(symbol139);

            pivotFormat139.Append(index153);
            pivotFormat139.Append(marker139);

            pivotFormats15.Append(pivotFormat139);

            C.PlotArea plotArea15 = new C.PlotArea();
            C.Layout layout15 = new C.Layout();

            C.PieChart pieChart8 = new C.PieChart();
            C.VaryColors varyColors15 = new C.VaryColors(){ Val = true };

            C.PieChartSeries pieChartSeries8 = new C.PieChartSeries();
            C.Index index154 = new C.Index(){ Val = 0U };
            C.Order order15 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText15 = new C.SeriesText();

            C.StringReference stringReference29 = new C.StringReference();
            C.Formula formula43 = new C.Formula();
            formula43.Text = "Level!$B$1";

            C.StringCache stringCache29 = new C.StringCache();
            C.PointCount pointCount43 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint57 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue99 = new C.NumericValue();
            numericValue99.Text = "Total";

            stringPoint57.Append(numericValue99);

            stringCache29.Append(pointCount43);
            stringCache29.Append(stringPoint57);

            stringReference29.Append(formula43);
            stringReference29.Append(stringCache29);

            seriesText15.Append(stringReference29);

            C.CategoryAxisData categoryAxisData15 = new C.CategoryAxisData();

            C.StringReference stringReference30 = new C.StringReference();
            C.Formula formula44 = new C.Formula();
            formula44.Text = "Level!$A$2:$A$5";

            C.StringCache stringCache30 = new C.StringCache();
            C.PointCount pointCount44 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint58 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue100 = new C.NumericValue();
            numericValue100.Text = "product_A";

            stringPoint58.Append(numericValue100);

            C.StringPoint stringPoint59 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue101 = new C.NumericValue();
            numericValue101.Text = "product_D";

            stringPoint59.Append(numericValue101);

            C.StringPoint stringPoint60 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue102 = new C.NumericValue();
            numericValue102.Text = "product_E";

            stringPoint60.Append(numericValue102);

            stringCache30.Append(pointCount44);
            stringCache30.Append(stringPoint58);
            stringCache30.Append(stringPoint59);
            stringCache30.Append(stringPoint60);

            stringReference30.Append(formula44);
            stringReference30.Append(stringCache30);

            categoryAxisData15.Append(stringReference30);

            C.Values values15 = new C.Values();

            C.NumberReference numberReference15 = new C.NumberReference();
            C.Formula formula45 = new C.Formula();
            formula45.Text = "Level!$B$2:$B$5";

            C.NumberingCache numberingCache15 = new C.NumberingCache();
            C.FormatCode formatCode15 = new C.FormatCode();
            formatCode15.Text = "General";
            C.PointCount pointCount45 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint43 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue103 = new C.NumericValue();
            numericValue103.Text = "19";

            numericPoint43.Append(numericValue103);

            C.NumericPoint numericPoint44 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue104 = new C.NumericValue();
            numericValue104.Text = "13";

            numericPoint44.Append(numericValue104);

            C.NumericPoint numericPoint45 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue105 = new C.NumericValue();
            numericValue105.Text = "33";

            numericPoint45.Append(numericValue105);

            numberingCache15.Append(formatCode15);
            numberingCache15.Append(pointCount45);
            numberingCache15.Append(numericPoint43);
            numberingCache15.Append(numericPoint44);
            numberingCache15.Append(numericPoint45);

            numberReference15.Append(formula45);
            numberReference15.Append(numberingCache15);

            values15.Append(numberReference15);

            pieChartSeries8.Append(index154);
            pieChartSeries8.Append(order15);
            pieChartSeries8.Append(seriesText15);
            pieChartSeries8.Append(categoryAxisData15);
            pieChartSeries8.Append(values15);

            C.DataLabels dataLabels15 = new C.DataLabels();
            C.ShowLegendKey showLegendKey15 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue15 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName15 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName15 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent15 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize15 = new C.ShowBubbleSize(){ Val = false };
            C.ShowLeaderLines showLeaderLines8 = new C.ShowLeaderLines(){ Val = true };

            dataLabels15.Append(showLegendKey15);
            dataLabels15.Append(showValue15);
            dataLabels15.Append(showCategoryName15);
            dataLabels15.Append(showSeriesName15);
            dataLabels15.Append(showPercent15);
            dataLabels15.Append(showBubbleSize15);
            dataLabels15.Append(showLeaderLines8);
            C.FirstSliceAngle firstSliceAngle8 = new C.FirstSliceAngle(){ Val = (UInt16Value)0U };

            pieChart8.Append(varyColors15);
            pieChart8.Append(pieChartSeries8);
            pieChart8.Append(dataLabels15);
            pieChart8.Append(firstSliceAngle8);

            plotArea15.Append(layout15);
            plotArea15.Append(pieChart8);

            C.Legend legend15 = new C.Legend();
            C.LegendPosition legendPosition15 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay30 = new C.Overlay(){ Val = false };

            legend15.Append(legendPosition15);
            legend15.Append(overlay30);
            C.PlotVisibleOnly plotVisibleOnly15 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs15 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum15 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart15.Append(title15);
            chart15.Append(autoTitleDeleted15);
            chart15.Append(pivotFormats15);
            chart15.Append(plotArea15);
            chart15.Append(legend15);
            chart15.Append(plotVisibleOnly15);
            chart15.Append(displayBlanksAs15);
            chart15.Append(showDataLabelsOverMaximum15);

            C.PrintSettings printSettings15 = new C.PrintSettings();
            C.HeaderFooter headerFooter15 = new C.HeaderFooter();
            C.PageMargins pageMargins25 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup15 = new C.PageSetup();

            printSettings15.Append(headerFooter15);
            printSettings15.Append(pageMargins25);
            printSettings15.Append(pageSetup15);

            C.ChartSpaceExtensionList chartSpaceExtensionList15 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList15.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList15.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension15 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension15.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions15 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter15 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories15 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData15 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries15 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible15 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions15.Append(dropZoneFilter15);
            pivotOptions15.Append(dropZoneCategories15);
            pivotOptions15.Append(dropZoneData15);
            pivotOptions15.Append(dropZoneSeries15);
            pivotOptions15.Append(dropZonesVisible15);

            chartSpaceExtension15.Append(pivotOptions15);

            chartSpaceExtensionList15.Append(chartSpaceExtension15);

            chartSpace15.Append(date190415);
            chartSpace15.Append(editingLanguage15);
            chartSpace15.Append(roundedCorners15);
            chartSpace15.Append(alternateContent34);
            chartSpace15.Append(pivotSource15);
            chartSpace15.Append(chart15);
            chartSpace15.Append(printSettings15);
            chartSpace15.Append(chartSpaceExtensionList15);

            chartPart15.ChartSpace = chartSpace15;
        }

        // Generates content of chartPart16.
        private static void GenerateChartPart16Content(ChartPart chartPart16)
        {
            C.ChartSpace chartSpace16 = new C.ChartSpace();
            chartSpace16.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace16.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace16.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date190416 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage16 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners16 = new C.RoundedCorners(){ Val = false };
            C.Style style31 = new C.Style(){ Val = 1 };

            C.PivotSource pivotSource16 = new C.PivotSource();
            C.PivotTableName pivotTableName16 = new C.PivotTableName();
            pivotTableName16.Text = "[GeneratedDocument.xlsx]Level!PivotTable1";
            C.FormatId formatId16 = new C.FormatId(){ Val = 4U };

            pivotSource16.Append(pivotTableName16);
            pivotSource16.Append(formatId16);

            C.Chart chart16 = new C.Chart();

            C.Title title16 = new C.Title();
            C.Overlay overlay31 = new C.Overlay(){ Val = false };

            title16.Append(overlay31);
            C.AutoTitleDeleted autoTitleDeleted16 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats16 = new C.PivotFormats();

            C.PivotFormat pivotFormat140 = new C.PivotFormat();
            C.Index index155 = new C.Index(){ Val = 0U };

            C.ShapeProperties shapeProperties66 = new C.ShapeProperties();

            A.SolidFill solidFill125 = new A.SolidFill();

            A.SchemeColor schemeColor99 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint44 = new A.Tint(){ Val = 100000 };

            schemeColor99.Append(tint44);

            solidFill125.Append(schemeColor99);

            A.Outline outline99 = new A.Outline();
            A.NoFill noFill84 = new A.NoFill();

            outline99.Append(noFill84);
            A.EffectList effectList81 = new A.EffectList();

            shapeProperties66.Append(solidFill125);
            shapeProperties66.Append(outline99);
            shapeProperties66.Append(effectList81);

            C.Marker marker140 = new C.Marker();
            C.Symbol symbol140 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker140.Append(symbol140);

            pivotFormat140.Append(index155);
            pivotFormat140.Append(shapeProperties66);
            pivotFormat140.Append(marker140);

            C.PivotFormat pivotFormat141 = new C.PivotFormat();
            C.Index index156 = new C.Index(){ Val = 1U };

            C.ShapeProperties shapeProperties67 = new C.ShapeProperties();

            A.SolidFill solidFill126 = new A.SolidFill();

            A.SchemeColor schemeColor100 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent2 };
            A.Tint tint45 = new A.Tint(){ Val = 100000 };

            schemeColor100.Append(tint45);

            solidFill126.Append(schemeColor100);

            A.Outline outline100 = new A.Outline();
            A.NoFill noFill85 = new A.NoFill();

            outline100.Append(noFill85);
            A.EffectList effectList82 = new A.EffectList();

            shapeProperties67.Append(solidFill126);
            shapeProperties67.Append(outline100);
            shapeProperties67.Append(effectList82);

            C.Marker marker141 = new C.Marker();
            C.Symbol symbol141 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker141.Append(symbol141);

            pivotFormat141.Append(index156);
            pivotFormat141.Append(shapeProperties67);
            pivotFormat141.Append(marker141);

            C.PivotFormat pivotFormat142 = new C.PivotFormat();
            C.Index index157 = new C.Index(){ Val = 2U };

            C.Marker marker142 = new C.Marker();
            C.Symbol symbol142 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker142.Append(symbol142);

            pivotFormat142.Append(index157);
            pivotFormat142.Append(marker142);

            C.PivotFormat pivotFormat143 = new C.PivotFormat();
            C.Index index158 = new C.Index(){ Val = 3U };

            C.Marker marker143 = new C.Marker();
            C.Symbol symbol143 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker143.Append(symbol143);

            pivotFormat143.Append(index158);
            pivotFormat143.Append(marker143);

            C.PivotFormat pivotFormat144 = new C.PivotFormat();
            C.Index index159 = new C.Index(){ Val = 4U };

            C.Marker marker144 = new C.Marker();
            C.Symbol symbol144 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker144.Append(symbol144);

            pivotFormat144.Append(index159);
            pivotFormat144.Append(marker144);

            C.PivotFormat pivotFormat145 = new C.PivotFormat();
            C.Index index160 = new C.Index(){ Val = 5U };

            C.Marker marker145 = new C.Marker();
            C.Symbol symbol145 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker145.Append(symbol145);

            pivotFormat145.Append(index160);
            pivotFormat145.Append(marker145);

            C.PivotFormat pivotFormat146 = new C.PivotFormat();
            C.Index index161 = new C.Index(){ Val = 6U };

            C.Marker marker146 = new C.Marker();
            C.Symbol symbol146 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker146.Append(symbol146);

            pivotFormat146.Append(index161);
            pivotFormat146.Append(marker146);

            C.PivotFormat pivotFormat147 = new C.PivotFormat();
            C.Index index162 = new C.Index(){ Val = 7U };

            C.Marker marker147 = new C.Marker();
            C.Symbol symbol147 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker147.Append(symbol147);

            pivotFormat147.Append(index162);
            pivotFormat147.Append(marker147);

            C.PivotFormat pivotFormat148 = new C.PivotFormat();
            C.Index index163 = new C.Index(){ Val = 8U };

            C.Marker marker148 = new C.Marker();
            C.Symbol symbol148 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker148.Append(symbol148);

            pivotFormat148.Append(index163);
            pivotFormat148.Append(marker148);

            C.PivotFormat pivotFormat149 = new C.PivotFormat();
            C.Index index164 = new C.Index(){ Val = 9U };

            C.Marker marker149 = new C.Marker();
            C.Symbol symbol149 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker149.Append(symbol149);

            pivotFormat149.Append(index164);
            pivotFormat149.Append(marker149);

            C.PivotFormat pivotFormat150 = new C.PivotFormat();
            C.Index index165 = new C.Index(){ Val = 10U };

            C.Marker marker150 = new C.Marker();
            C.Symbol symbol150 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker150.Append(symbol150);

            pivotFormat150.Append(index165);
            pivotFormat150.Append(marker150);

            C.PivotFormat pivotFormat151 = new C.PivotFormat();
            C.Index index166 = new C.Index(){ Val = 11U };

            C.Marker marker151 = new C.Marker();
            C.Symbol symbol151 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker151.Append(symbol151);

            pivotFormat151.Append(index166);
            pivotFormat151.Append(marker151);

            C.PivotFormat pivotFormat152 = new C.PivotFormat();
            C.Index index167 = new C.Index(){ Val = 12U };

            C.Marker marker152 = new C.Marker();
            C.Symbol symbol152 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker152.Append(symbol152);

            pivotFormat152.Append(index167);
            pivotFormat152.Append(marker152);

            C.PivotFormat pivotFormat153 = new C.PivotFormat();
            C.Index index168 = new C.Index(){ Val = 13U };

            C.Marker marker153 = new C.Marker();
            C.Symbol symbol153 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker153.Append(symbol153);

            pivotFormat153.Append(index168);
            pivotFormat153.Append(marker153);

            pivotFormats16.Append(pivotFormat140);
            pivotFormats16.Append(pivotFormat141);
            pivotFormats16.Append(pivotFormat142);
            pivotFormats16.Append(pivotFormat143);
            pivotFormats16.Append(pivotFormat144);
            pivotFormats16.Append(pivotFormat145);
            pivotFormats16.Append(pivotFormat146);
            pivotFormats16.Append(pivotFormat147);
            pivotFormats16.Append(pivotFormat148);
            pivotFormats16.Append(pivotFormat149);
            pivotFormats16.Append(pivotFormat150);
            pivotFormats16.Append(pivotFormat151);
            pivotFormats16.Append(pivotFormat152);
            pivotFormats16.Append(pivotFormat153);

            C.PlotArea plotArea16 = new C.PlotArea();
            C.Layout layout16 = new C.Layout();

            C.BarChart barChart8 = new C.BarChart();
            C.BarDirection barDirection8 = new C.BarDirection(){ Val = C.BarDirectionValues.Column };
            C.BarGrouping barGrouping8 = new C.BarGrouping(){ Val = C.BarGroupingValues.Clustered };
            C.VaryColors varyColors16 = new C.VaryColors(){ Val = false };

            C.BarChartSeries barChartSeries8 = new C.BarChartSeries();
            C.Index index169 = new C.Index(){ Val = 0U };
            C.Order order16 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText16 = new C.SeriesText();

            C.StringReference stringReference31 = new C.StringReference();
            C.Formula formula46 = new C.Formula();
            formula46.Text = "Level!$B$1";

            C.StringCache stringCache31 = new C.StringCache();
            C.PointCount pointCount46 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint61 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue106 = new C.NumericValue();
            numericValue106.Text = "Total";

            stringPoint61.Append(numericValue106);

            stringCache31.Append(pointCount46);
            stringCache31.Append(stringPoint61);

            stringReference31.Append(formula46);
            stringReference31.Append(stringCache31);

            seriesText16.Append(stringReference31);

            C.ChartShapeProperties chartShapeProperties31 = new C.ChartShapeProperties();

            A.SolidFill solidFill127 = new A.SolidFill();

            A.SchemeColor schemeColor101 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint46 = new A.Tint(){ Val = 100000 };

            schemeColor101.Append(tint46);

            solidFill127.Append(schemeColor101);

            A.Outline outline101 = new A.Outline();
            A.NoFill noFill86 = new A.NoFill();

            outline101.Append(noFill86);
            A.EffectList effectList83 = new A.EffectList();

            chartShapeProperties31.Append(solidFill127);
            chartShapeProperties31.Append(outline101);
            chartShapeProperties31.Append(effectList83);
            C.InvertIfNegative invertIfNegative8 = new C.InvertIfNegative(){ Val = false };

            C.CategoryAxisData categoryAxisData16 = new C.CategoryAxisData();

            C.StringReference stringReference32 = new C.StringReference();
            C.Formula formula47 = new C.Formula();
            formula47.Text = "Level!$A$2:$A$5";

            C.StringCache stringCache32 = new C.StringCache();
            C.PointCount pointCount47 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint62 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue107 = new C.NumericValue();
            numericValue107.Text = "product_A";

            stringPoint62.Append(numericValue107);

            C.StringPoint stringPoint63 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue108 = new C.NumericValue();
            numericValue108.Text = "product_D";

            stringPoint63.Append(numericValue108);

            C.StringPoint stringPoint64 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue109 = new C.NumericValue();
            numericValue109.Text = "product_E";

            stringPoint64.Append(numericValue109);

            stringCache32.Append(pointCount47);
            stringCache32.Append(stringPoint62);
            stringCache32.Append(stringPoint63);
            stringCache32.Append(stringPoint64);

            stringReference32.Append(formula47);
            stringReference32.Append(stringCache32);

            categoryAxisData16.Append(stringReference32);

            C.Values values16 = new C.Values();

            C.NumberReference numberReference16 = new C.NumberReference();
            C.Formula formula48 = new C.Formula();
            formula48.Text = "Level!$B$2:$B$5";

            C.NumberingCache numberingCache16 = new C.NumberingCache();
            C.FormatCode formatCode16 = new C.FormatCode();
            formatCode16.Text = "General";
            C.PointCount pointCount48 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint46 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue110 = new C.NumericValue();
            numericValue110.Text = "19";

            numericPoint46.Append(numericValue110);

            C.NumericPoint numericPoint47 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue111 = new C.NumericValue();
            numericValue111.Text = "13";

            numericPoint47.Append(numericValue111);

            C.NumericPoint numericPoint48 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue112 = new C.NumericValue();
            numericValue112.Text = "33";

            numericPoint48.Append(numericValue112);

            numberingCache16.Append(formatCode16);
            numberingCache16.Append(pointCount48);
            numberingCache16.Append(numericPoint46);
            numberingCache16.Append(numericPoint47);
            numberingCache16.Append(numericPoint48);

            numberReference16.Append(formula48);
            numberReference16.Append(numberingCache16);

            values16.Append(numberReference16);

            barChartSeries8.Append(index169);
            barChartSeries8.Append(order16);
            barChartSeries8.Append(seriesText16);
            barChartSeries8.Append(chartShapeProperties31);
            barChartSeries8.Append(invertIfNegative8);
            barChartSeries8.Append(categoryAxisData16);
            barChartSeries8.Append(values16);

            C.DataLabels dataLabels16 = new C.DataLabels();
            C.ShowLegendKey showLegendKey16 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue16 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName16 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName16 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent16 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize16 = new C.ShowBubbleSize(){ Val = false };

            dataLabels16.Append(showLegendKey16);
            dataLabels16.Append(showValue16);
            dataLabels16.Append(showCategoryName16);
            dataLabels16.Append(showSeriesName16);
            dataLabels16.Append(showPercent16);
            dataLabels16.Append(showBubbleSize16);
            C.GapWidth gapWidth8 = new C.GapWidth(){ Val = (UInt16Value)219U };
            C.Overlap overlap7 = new C.Overlap(){ Val = -27 };
            C.AxisId axisId29 = new C.AxisId(){ Val = 209240832U };
            C.AxisId axisId30 = new C.AxisId(){ Val = 209693768U };

            barChart8.Append(barDirection8);
            barChart8.Append(barGrouping8);
            barChart8.Append(varyColors16);
            barChart8.Append(barChartSeries8);
            barChart8.Append(dataLabels16);
            barChart8.Append(gapWidth8);
            barChart8.Append(overlap7);
            barChart8.Append(axisId29);
            barChart8.Append(axisId30);

            C.CategoryAxis categoryAxis8 = new C.CategoryAxis();
            C.AxisId axisId31 = new C.AxisId(){ Val = 209240832U };

            C.Scaling scaling15 = new C.Scaling();
            C.Orientation orientation15 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling15.Append(orientation15);
            C.Delete delete15 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition15 = new C.AxisPosition(){ Val = C.AxisPositionValues.Bottom };
            C.NumberingFormat numberingFormat26 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = false };
            C.MajorTickMark majorTickMark15 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark15 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition15 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties32 = new C.ChartShapeProperties();
            A.NoFill noFill87 = new A.NoFill();

            A.Outline outline102 = new A.Outline();
            A.NoFill noFill88 = new A.NoFill();

            outline102.Append(noFill88);
            A.EffectList effectList84 = new A.EffectList();

            chartShapeProperties32.Append(noFill87);
            chartShapeProperties32.Append(outline102);
            chartShapeProperties32.Append(effectList84);

            C.TextProperties textProperties25 = new C.TextProperties();
            A.BodyProperties bodyProperties43 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle43 = new A.ListStyle();

            A.Paragraph paragraph43 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties25 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties25 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill128 = new A.SolidFill();

            A.SchemeColor schemeColor102 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation37 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset31 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor102.Append(luminanceModulation37);
            schemeColor102.Append(luminanceOffset31);

            solidFill128.Append(schemeColor102);
            A.LatinFont latinFont21 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont21 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont21 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties25.Append(solidFill128);
            defaultRunProperties25.Append(latinFont21);
            defaultRunProperties25.Append(eastAsianFont21);
            defaultRunProperties25.Append(complexScriptFont21);

            paragraphProperties25.Append(defaultRunProperties25);
            A.EndParagraphRunProperties endParagraphRunProperties25 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph43.Append(paragraphProperties25);
            paragraph43.Append(endParagraphRunProperties25);

            textProperties25.Append(bodyProperties43);
            textProperties25.Append(listStyle43);
            textProperties25.Append(paragraph43);
            C.CrossingAxis crossingAxis15 = new C.CrossingAxis(){ Val = 209693768U };
            C.Crosses crosses15 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.AutoLabeled autoLabeled8 = new C.AutoLabeled(){ Val = true };
            C.LabelAlignment labelAlignment8 = new C.LabelAlignment(){ Val = C.LabelAlignmentValues.Center };
            C.LabelOffset labelOffset8 = new C.LabelOffset(){ Val = (UInt16Value)100U };
            C.NoMultiLevelLabels noMultiLevelLabels8 = new C.NoMultiLevelLabels(){ Val = false };

            categoryAxis8.Append(axisId31);
            categoryAxis8.Append(scaling15);
            categoryAxis8.Append(delete15);
            categoryAxis8.Append(axisPosition15);
            categoryAxis8.Append(numberingFormat26);
            categoryAxis8.Append(majorTickMark15);
            categoryAxis8.Append(minorTickMark15);
            categoryAxis8.Append(tickLabelPosition15);
            categoryAxis8.Append(chartShapeProperties32);
            categoryAxis8.Append(textProperties25);
            categoryAxis8.Append(crossingAxis15);
            categoryAxis8.Append(crosses15);
            categoryAxis8.Append(autoLabeled8);
            categoryAxis8.Append(labelAlignment8);
            categoryAxis8.Append(labelOffset8);
            categoryAxis8.Append(noMultiLevelLabels8);

            C.ValueAxis valueAxis8 = new C.ValueAxis();
            C.AxisId axisId32 = new C.AxisId(){ Val = 209693768U };

            C.Scaling scaling16 = new C.Scaling();
            C.Orientation orientation16 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling16.Append(orientation16);
            C.Delete delete16 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition16 = new C.AxisPosition(){ Val = C.AxisPositionValues.Left };

            C.MajorGridlines majorGridlines8 = new C.MajorGridlines();

            C.ChartShapeProperties chartShapeProperties33 = new C.ChartShapeProperties();

            A.Outline outline103 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill129 = new A.SolidFill();

            A.SchemeColor schemeColor103 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation38 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset32 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor103.Append(luminanceModulation38);
            schemeColor103.Append(luminanceOffset32);

            solidFill129.Append(schemeColor103);
            A.Round round13 = new A.Round();

            outline103.Append(solidFill129);
            outline103.Append(round13);
            A.EffectList effectList85 = new A.EffectList();

            chartShapeProperties33.Append(outline103);
            chartShapeProperties33.Append(effectList85);

            majorGridlines8.Append(chartShapeProperties33);
            C.NumberingFormat numberingFormat27 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = true };
            C.MajorTickMark majorTickMark16 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark16 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition16 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties34 = new C.ChartShapeProperties();
            A.NoFill noFill89 = new A.NoFill();

            A.Outline outline104 = new A.Outline();
            A.NoFill noFill90 = new A.NoFill();

            outline104.Append(noFill90);
            A.EffectList effectList86 = new A.EffectList();

            chartShapeProperties34.Append(noFill89);
            chartShapeProperties34.Append(outline104);
            chartShapeProperties34.Append(effectList86);

            C.TextProperties textProperties26 = new C.TextProperties();
            A.BodyProperties bodyProperties44 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle44 = new A.ListStyle();

            A.Paragraph paragraph44 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties26 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties26 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill130 = new A.SolidFill();

            A.SchemeColor schemeColor104 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation39 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset33 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor104.Append(luminanceModulation39);
            schemeColor104.Append(luminanceOffset33);

            solidFill130.Append(schemeColor104);
            A.LatinFont latinFont22 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont22 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont22 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties26.Append(solidFill130);
            defaultRunProperties26.Append(latinFont22);
            defaultRunProperties26.Append(eastAsianFont22);
            defaultRunProperties26.Append(complexScriptFont22);

            paragraphProperties26.Append(defaultRunProperties26);
            A.EndParagraphRunProperties endParagraphRunProperties26 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph44.Append(paragraphProperties26);
            paragraph44.Append(endParagraphRunProperties26);

            textProperties26.Append(bodyProperties44);
            textProperties26.Append(listStyle44);
            textProperties26.Append(paragraph44);
            C.CrossingAxis crossingAxis16 = new C.CrossingAxis(){ Val = 209240832U };
            C.Crosses crosses16 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.CrossBetween crossBetween8 = new C.CrossBetween(){ Val = C.CrossBetweenValues.Between };

            valueAxis8.Append(axisId32);
            valueAxis8.Append(scaling16);
            valueAxis8.Append(delete16);
            valueAxis8.Append(axisPosition16);
            valueAxis8.Append(majorGridlines8);
            valueAxis8.Append(numberingFormat27);
            valueAxis8.Append(majorTickMark16);
            valueAxis8.Append(minorTickMark16);
            valueAxis8.Append(tickLabelPosition16);
            valueAxis8.Append(chartShapeProperties34);
            valueAxis8.Append(textProperties26);
            valueAxis8.Append(crossingAxis16);
            valueAxis8.Append(crosses16);
            valueAxis8.Append(crossBetween8);

            C.ShapeProperties shapeProperties68 = new C.ShapeProperties();

            A.SolidFill solidFill131 = new A.SolidFill();
            A.SchemeColor schemeColor105 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill131.Append(schemeColor105);

            A.Outline outline105 = new A.Outline();
            A.NoFill noFill91 = new A.NoFill();

            outline105.Append(noFill91);
            A.EffectList effectList87 = new A.EffectList();

            shapeProperties68.Append(solidFill131);
            shapeProperties68.Append(outline105);
            shapeProperties68.Append(effectList87);

            plotArea16.Append(layout16);
            plotArea16.Append(barChart8);
            plotArea16.Append(categoryAxis8);
            plotArea16.Append(valueAxis8);
            plotArea16.Append(shapeProperties68);

            C.Legend legend16 = new C.Legend();
            C.LegendPosition legendPosition16 = new C.LegendPosition(){ Val = C.LegendPositionValues.Bottom };
            C.Overlay overlay32 = new C.Overlay(){ Val = false };

            C.ChartShapeProperties chartShapeProperties35 = new C.ChartShapeProperties();
            A.NoFill noFill92 = new A.NoFill();

            A.Outline outline106 = new A.Outline();
            A.NoFill noFill93 = new A.NoFill();

            outline106.Append(noFill93);
            A.EffectList effectList88 = new A.EffectList();

            chartShapeProperties35.Append(noFill92);
            chartShapeProperties35.Append(outline106);
            chartShapeProperties35.Append(effectList88);

            C.TextProperties textProperties27 = new C.TextProperties();
            A.BodyProperties bodyProperties45 = new A.BodyProperties(){ Rotation = 0, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle45 = new A.ListStyle();

            A.Paragraph paragraph45 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties27 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties27 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill132 = new A.SolidFill();

            A.SchemeColor schemeColor106 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation40 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset34 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor106.Append(luminanceModulation40);
            schemeColor106.Append(luminanceOffset34);

            solidFill132.Append(schemeColor106);
            A.LatinFont latinFont23 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont23 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont23 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties27.Append(solidFill132);
            defaultRunProperties27.Append(latinFont23);
            defaultRunProperties27.Append(eastAsianFont23);
            defaultRunProperties27.Append(complexScriptFont23);

            paragraphProperties27.Append(defaultRunProperties27);
            A.EndParagraphRunProperties endParagraphRunProperties27 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph45.Append(paragraphProperties27);
            paragraph45.Append(endParagraphRunProperties27);

            textProperties27.Append(bodyProperties45);
            textProperties27.Append(listStyle45);
            textProperties27.Append(paragraph45);

            legend16.Append(legendPosition16);
            legend16.Append(overlay32);
            legend16.Append(chartShapeProperties35);
            legend16.Append(textProperties27);
            C.PlotVisibleOnly plotVisibleOnly16 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs16 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum16 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart16.Append(title16);
            chart16.Append(autoTitleDeleted16);
            chart16.Append(pivotFormats16);
            chart16.Append(plotArea16);
            chart16.Append(legend16);
            chart16.Append(plotVisibleOnly16);
            chart16.Append(displayBlanksAs16);
            chart16.Append(showDataLabelsOverMaximum16);

            C.ShapeProperties shapeProperties69 = new C.ShapeProperties();

            A.SolidFill solidFill133 = new A.SolidFill();
            A.SchemeColor schemeColor107 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill133.Append(schemeColor107);

            A.Outline outline107 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill134 = new A.SolidFill();

            A.SchemeColor schemeColor108 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation41 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset35 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor108.Append(luminanceModulation41);
            schemeColor108.Append(luminanceOffset35);

            solidFill134.Append(schemeColor108);
            A.Round round14 = new A.Round();

            outline107.Append(solidFill134);
            outline107.Append(round14);
            A.EffectList effectList89 = new A.EffectList();

            shapeProperties69.Append(solidFill133);
            shapeProperties69.Append(outline107);
            shapeProperties69.Append(effectList89);

            C.TextProperties textProperties28 = new C.TextProperties();
            A.BodyProperties bodyProperties46 = new A.BodyProperties();
            A.ListStyle listStyle46 = new A.ListStyle();

            A.Paragraph paragraph46 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties28 = new A.ParagraphProperties();
            A.DefaultRunProperties defaultRunProperties28 = new A.DefaultRunProperties();

            paragraphProperties28.Append(defaultRunProperties28);
            A.EndParagraphRunProperties endParagraphRunProperties28 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph46.Append(paragraphProperties28);
            paragraph46.Append(endParagraphRunProperties28);

            textProperties28.Append(bodyProperties46);
            textProperties28.Append(listStyle46);
            textProperties28.Append(paragraph46);

            C.PrintSettings printSettings16 = new C.PrintSettings();
            C.HeaderFooter headerFooter16 = new C.HeaderFooter();
            C.PageMargins pageMargins26 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup16 = new C.PageSetup();

            printSettings16.Append(headerFooter16);
            printSettings16.Append(pageMargins26);
            printSettings16.Append(pageSetup16);

            C.ChartSpaceExtensionList chartSpaceExtensionList16 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList16.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C.ChartSpaceExtension chartSpaceExtension16 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension16.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions16 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter16 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories16 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData16 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries16 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible16 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions16.Append(dropZoneFilter16);
            pivotOptions16.Append(dropZoneCategories16);
            pivotOptions16.Append(dropZoneData16);
            pivotOptions16.Append(dropZoneSeries16);
            pivotOptions16.Append(dropZonesVisible16);

            chartSpaceExtension16.Append(pivotOptions16);

            chartSpaceExtensionList16.Append(chartSpaceExtension16);

            chartSpace16.Append(date190416);
            chartSpace16.Append(editingLanguage16);
            chartSpace16.Append(roundedCorners16);
            chartSpace16.Append(style31);
            chartSpace16.Append(pivotSource16);
            chartSpace16.Append(chart16);
            chartSpace16.Append(shapeProperties69);
            chartSpace16.Append(textProperties28);
            chartSpace16.Append(printSettings16);
            chartSpace16.Append(chartSpaceExtensionList16);

            chartPart16.ChartSpace = chartSpace16;
        }

        // Generates content of pivotTablePart8.
        private static void GeneratePivotTablePart8Content(PivotTablePart pivotTablePart8)
        {
            PivotTableDefinition pivotTableDefinition15 = new PivotTableDefinition(){ Name = "PivotTable1", CacheId = 1U, ApplyNumberFormats = false, ApplyBorderFormats = false, ApplyFontFormats = false, ApplyPatternFormats = false, ApplyAlignmentFormats = false, ApplyWidthHeightFormats = true, DataCaption = "Values", UpdatedVersion = 5, MinRefreshableVersion = 5, UseAutoFormatting = true, ItemPrintTitles = true, CreatedVersion = 4, Indent = 0U, Outline = true, OutlineData = true, MultipleFieldFilters = false, ChartFormat = 7U };
            Location location8 = new Location(){ Reference = "A1:B5", FirstHeaderRow = 1U, FirstDataRow = 1U, FirstDataColumn = 1U };

            PivotFields pivotFields8 = new PivotFields(){ Count = 7U };

            PivotField pivotField49 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items27 = new Items(){ Count = 15U };
            Item item234 = new Item(){ Index = 0U };
            Item item235 = new Item(){ Index = 1U };
            Item item236 = new Item(){ Index = 2U };
            Item item237 = new Item(){ Index = 3U };
            Item item238 = new Item(){ Index = 4U };
            Item item239 = new Item(){ Index = 5U };
            Item item240 = new Item(){ Index = 6U };
            Item item241 = new Item(){ Index = 7U };
            Item item242 = new Item(){ Index = 8U };
            Item item243 = new Item(){ Index = 9U };
            Item item244 = new Item(){ Index = 10U };
            Item item245 = new Item(){ Index = 11U };
            Item item246 = new Item(){ Index = 12U };
            Item item247 = new Item(){ Index = 13U };
            Item item248 = new Item(){ ItemType = ItemValues.Default };

            items27.Append(item234);
            items27.Append(item235);
            items27.Append(item236);
            items27.Append(item237);
            items27.Append(item238);
            items27.Append(item239);
            items27.Append(item240);
            items27.Append(item241);
            items27.Append(item242);
            items27.Append(item243);
            items27.Append(item244);
            items27.Append(item245);
            items27.Append(item246);
            items27.Append(item247);
            items27.Append(item248);

            pivotField49.Append(items27);

            PivotField pivotField50 = new PivotField(){ Axis = PivotTableAxisValues.AxisRow, ShowAll = false };

            Items items28 = new Items(){ Count = 11U };
            Item item249 = new Item(){ Index = 0U };
            Item item250 = new Item(){ Missing = true, Index = 4U };
            Item item251 = new Item(){ Missing = true, Index = 3U };
            Item item252 = new Item(){ Index = 1U };
            Item item253 = new Item(){ Index = 2U };
            Item item254 = new Item(){ Missing = true, Index = 9U };
            Item item255 = new Item(){ Missing = true, Index = 8U };
            Item item256 = new Item(){ Missing = true, Index = 7U };
            Item item257 = new Item(){ Missing = true, Index = 6U };
            Item item258 = new Item(){ Missing = true, Index = 5U };
            Item item259 = new Item(){ ItemType = ItemValues.Default };

            items28.Append(item249);
            items28.Append(item250);
            items28.Append(item251);
            items28.Append(item252);
            items28.Append(item253);
            items28.Append(item254);
            items28.Append(item255);
            items28.Append(item256);
            items28.Append(item257);
            items28.Append(item258);
            items28.Append(item259);

            pivotField50.Append(items28);
            PivotField pivotField51 = new PivotField(){ DataField = true, ShowAll = false };
            PivotField pivotField52 = new PivotField(){ ShowAll = false };

            PivotField pivotField53 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items29 = new Items(){ Count = 5U };
            Item item260 = new Item(){ Index = 0U };
            Item item261 = new Item(){ Index = 1U };
            Item item262 = new Item(){ Index = 3U };
            Item item263 = new Item(){ Index = 2U };
            Item item264 = new Item(){ ItemType = ItemValues.Default };

            items29.Append(item260);
            items29.Append(item261);
            items29.Append(item262);
            items29.Append(item263);
            items29.Append(item264);

            pivotField53.Append(items29);
            PivotField pivotField54 = new PivotField(){ ShowAll = false };

            PivotField pivotField55 = new PivotField(){ ShowAll = false, DefaultSubtotal = false };

            Items items30 = new Items(){ Count = 5U };
            Item item265 = new Item(){ Index = 0U };
            Item item266 = new Item(){ Index = 1U };
            Item item267 = new Item(){ Index = 2U };
            Item item268 = new Item(){ Index = 3U };
            Item item269 = new Item(){ Index = 4U };

            items30.Append(item265);
            items30.Append(item266);
            items30.Append(item267);
            items30.Append(item268);
            items30.Append(item269);

            pivotField55.Append(items30);

            pivotFields8.Append(pivotField49);
            pivotFields8.Append(pivotField50);
            pivotFields8.Append(pivotField51);
            pivotFields8.Append(pivotField52);
            pivotFields8.Append(pivotField53);
            pivotFields8.Append(pivotField54);
            pivotFields8.Append(pivotField55);

            RowFields rowFields8 = new RowFields(){ Count = 1U };
            Field field8 = new Field(){ Index = 1 };

            rowFields8.Append(field8);

            RowItems rowItems8 = new RowItems(){ Count = 4U };

            RowItem rowItem36 = new RowItem();
            MemberPropertyIndex memberPropertyIndex29 = new MemberPropertyIndex();

            rowItem36.Append(memberPropertyIndex29);

            RowItem rowItem37 = new RowItem();
            MemberPropertyIndex memberPropertyIndex30 = new MemberPropertyIndex(){ Val = 3 };

            rowItem37.Append(memberPropertyIndex30);

            RowItem rowItem38 = new RowItem();
            MemberPropertyIndex memberPropertyIndex31 = new MemberPropertyIndex(){ Val = 4 };

            rowItem38.Append(memberPropertyIndex31);

            RowItem rowItem39 = new RowItem(){ ItemType = ItemValues.Grand };
            MemberPropertyIndex memberPropertyIndex32 = new MemberPropertyIndex();

            rowItem39.Append(memberPropertyIndex32);

            rowItems8.Append(rowItem36);
            rowItems8.Append(rowItem37);
            rowItems8.Append(rowItem38);
            rowItems8.Append(rowItem39);

            ColumnItems columnItems8 = new ColumnItems(){ Count = 1U };
            RowItem rowItem40 = new RowItem();

            columnItems8.Append(rowItem40);

            DataFields dataFields8 = new DataFields(){ Count = 1U };
            DataField dataField8 = new DataField(){ Name = "Sum of Quantity", Field = 2U, BaseField = 0, BaseItem = 0U };

            dataFields8.Append(dataField8);

            ChartFormats chartFormats8 = new ChartFormats(){ Count = 3U };

            ChartFormat chartFormat67 = new ChartFormat(){ Chart = 4U, Format = 0U, Series = true };

            PivotArea pivotArea67 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences67 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference67 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem89 = new FieldItem(){ Val = 0U };

            pivotAreaReference67.Append(fieldItem89);

            pivotAreaReferences67.Append(pivotAreaReference67);

            pivotArea67.Append(pivotAreaReferences67);

            chartFormat67.Append(pivotArea67);

            ChartFormat chartFormat68 = new ChartFormat(){ Chart = 5U, Format = 2U, Series = true };

            PivotArea pivotArea68 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences68 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference68 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem90 = new FieldItem(){ Val = 0U };

            pivotAreaReference68.Append(fieldItem90);

            pivotAreaReferences68.Append(pivotAreaReference68);

            pivotArea68.Append(pivotAreaReferences68);

            chartFormat68.Append(pivotArea68);

            ChartFormat chartFormat69 = new ChartFormat(){ Chart = 6U, Format = 0U, Series = true };

            PivotArea pivotArea69 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences69 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference69 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem91 = new FieldItem(){ Val = 0U };

            pivotAreaReference69.Append(fieldItem91);

            pivotAreaReferences69.Append(pivotAreaReference69);

            pivotArea69.Append(pivotAreaReferences69);

            chartFormat69.Append(pivotArea69);

            chartFormats8.Append(chartFormat67);
            chartFormats8.Append(chartFormat68);
            chartFormats8.Append(chartFormat69);
            PivotTableStyle pivotTableStyle8 = new PivotTableStyle(){ Name = "PivotStyleLight16", ShowRowHeaders = true, ShowColumnHeaders = true, ShowRowStripes = false, ShowColumnStripes = false, ShowLastColumn = true };

            PivotTableDefinitionExtensionList pivotTableDefinitionExtensionList8 = new PivotTableDefinitionExtensionList();

            PivotTableDefinitionExtension pivotTableDefinitionExtension8 = new PivotTableDefinitionExtension(){ Uri = "{962EF5D1-5CA2-4c93-8EF4-DBF5C05439D2}" };
            pivotTableDefinitionExtension8.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");

            X14.PivotTableDefinition pivotTableDefinition16 = new X14.PivotTableDefinition(){ HideValuesRow = true };
            pivotTableDefinition16.AddNamespaceDeclaration("xm", "http://schemas.microsoft.com/office/excel/2006/main");

            pivotTableDefinitionExtension8.Append(pivotTableDefinition16);

            pivotTableDefinitionExtensionList8.Append(pivotTableDefinitionExtension8);

            pivotTableDefinition15.Append(location8);
            pivotTableDefinition15.Append(pivotFields8);
            pivotTableDefinition15.Append(rowFields8);
            pivotTableDefinition15.Append(rowItems8);
            pivotTableDefinition15.Append(columnItems8);
            pivotTableDefinition15.Append(dataFields8);
            pivotTableDefinition15.Append(chartFormats8);
            pivotTableDefinition15.Append(pivotTableStyle8);
            pivotTableDefinition15.Append(pivotTableDefinitionExtensionList8);

            pivotTablePart8.PivotTableDefinition = pivotTableDefinition15;
        }

        // Generates content of worksheetPart11.
        private static void GenerateWorksheetPart11Content(WorksheetPart worksheetPart11)
        {
            Worksheet worksheet11 = new Worksheet(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x14ac" }  };
            worksheet11.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            worksheet11.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            worksheet11.AddNamespaceDeclaration("x14ac", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac");
            SheetDimension sheetDimension11 = new SheetDimension(){ Reference = "A1:B5" };

            SheetViews sheetViews11 = new SheetViews();
            SheetView sheetView11 = new SheetView(){ WorkbookViewId = 0U };

            sheetViews11.Append(sheetView11);
            SheetFormatProperties sheetFormatProperties11 = new SheetFormatProperties(){ DefaultRowHeight = 15D };

            Columns columns11 = new Columns();
            Column column69 = new Column(){ Min = 1U, Max = 1U, Width = 14.140625D, BestFit = true, CustomWidth = true };
            Column column70 = new Column(){ Min = 2U, Max = 2U, Width = 17.42578125D, CustomWidth = true };
            Column column71 = new Column(){ Min = 3U, Max = 3U, Width = 12.42578125D, CustomWidth = true };
            Column column72 = new Column(){ Min = 4U, Max = 11U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column73 = new Column(){ Min = 12U, Max = 12U, Width = 13D, CustomWidth = true };
            Column column74 = new Column(){ Min = 13U, Max = 20U, Width = 13D, BestFit = true, CustomWidth = true };
            Column column75 = new Column(){ Min = 21U, Max = 23U, Width = 20.42578125D, BestFit = true, CustomWidth = true };

            columns11.Append(column69);
            columns11.Append(column70);
            columns11.Append(column71);
            columns11.Append(column72);
            columns11.Append(column73);
            columns11.Append(column74);
            columns11.Append(column75);

            SheetData sheetData11 = new SheetData();

            Row row63 = new Row(){ RowIndex = 1U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell213 = new Cell(){ CellReference = "A1", StyleIndex = 5U, DataType = CellValues.SharedString };
            CellValue cellValue213 = new CellValue();
            cellValue213.Text = "29";

            cell213.Append(cellValue213);

            Cell cell214 = new Cell(){ CellReference = "B1", DataType = CellValues.SharedString };
            CellValue cellValue214 = new CellValue();
            cellValue214.Text = "28";

            cell214.Append(cellValue214);

            row63.Append(cell213);
            row63.Append(cell214);

            Row row64 = new Row(){ RowIndex = 2U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell215 = new Cell(){ CellReference = "A2", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue215 = new CellValue();
            cellValue215.Text = "6";

            cell215.Append(cellValue215);

            Cell cell216 = new Cell(){ CellReference = "B2", StyleIndex = 7U };
            CellValue cellValue216 = new CellValue();
            cellValue216.Text = "19";

            cell216.Append(cellValue216);

            row64.Append(cell215);
            row64.Append(cell216);

            Row row65 = new Row(){ RowIndex = 3U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell217 = new Cell(){ CellReference = "A3", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue217 = new CellValue();
            cellValue217.Text = "8";

            cell217.Append(cellValue217);

            Cell cell218 = new Cell(){ CellReference = "B3", StyleIndex = 7U };
            CellValue cellValue218 = new CellValue();
            cellValue218.Text = "13";

            cell218.Append(cellValue218);

            row65.Append(cell217);
            row65.Append(cell218);

            Row row66 = new Row(){ RowIndex = 4U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell219 = new Cell(){ CellReference = "A4", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue219 = new CellValue();
            cellValue219.Text = "11";

            cell219.Append(cellValue219);

            Cell cell220 = new Cell(){ CellReference = "B4", StyleIndex = 7U };
            CellValue cellValue220 = new CellValue();
            cellValue220.Text = "33";

            cell220.Append(cellValue220);

            row66.Append(cell219);
            row66.Append(cell220);

            Row row67 = new Row(){ RowIndex = 5U, Spans = new ListValue<StringValue>() { InnerText = "1:2" } };

            Cell cell221 = new Cell(){ CellReference = "A5", StyleIndex = 6U, DataType = CellValues.SharedString };
            CellValue cellValue221 = new CellValue();
            cellValue221.Text = "30";

            cell221.Append(cellValue221);

            Cell cell222 = new Cell(){ CellReference = "B5", StyleIndex = 7U };
            CellValue cellValue222 = new CellValue();
            cellValue222.Text = "65";

            cell222.Append(cellValue222);

            row67.Append(cell221);
            row67.Append(cell222);

            sheetData11.Append(row63);
            sheetData11.Append(row64);
            sheetData11.Append(row65);
            sheetData11.Append(row66);
            sheetData11.Append(row67);
            PhoneticProperties phoneticProperties17 = new PhoneticProperties(){ FontId = 1U };
            PageMargins pageMargins27 = new PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            S.Drawing drawing9 = new S.Drawing(){ Id = "rId2" };

            WorksheetExtensionList worksheetExtensionList9 = new WorksheetExtensionList();

            WorksheetExtension worksheetExtension9 = new WorksheetExtension(){ Uri = "{7E03D99C-DC04-49d9-9315-930204A7B6E9}" };
            worksheetExtension9.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineReferences timelineReferences9 = new X15.TimelineReferences();
            X15.TimelineReference timelineReference9 = new X15.TimelineReference(){ Id = "rId3" };

            timelineReferences9.Append(timelineReference9);

            worksheetExtension9.Append(timelineReferences9);

            worksheetExtensionList9.Append(worksheetExtension9);

            worksheet11.Append(sheetDimension11);
            worksheet11.Append(sheetViews11);
            worksheet11.Append(sheetFormatProperties11);
            worksheet11.Append(columns11);
            worksheet11.Append(sheetData11);
            worksheet11.Append(phoneticProperties17);
            worksheet11.Append(pageMargins27);
            worksheet11.Append(drawing9);
            worksheet11.Append(worksheetExtensionList9);

            worksheetPart11.Worksheet = worksheet11;
        }

        // Generates content of timeLinePart9.
        private static void GenerateTimeLinePart9Content(TimeLinePart timeLinePart9)
        {
            X15.Timelines timelines9 = new X15.Timelines(){ MCAttributes = new MarkupCompatibilityAttributes(){ Ignorable = "x" }  };
            timelines9.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            timelines9.AddNamespaceDeclaration("x", "http://schemas.openxmlformats.org/spreadsheetml/2006/main");
            X15.Timeline timeline19 = new X15.Timeline(){ Name = "DeliveryDate 12", Cache = "NativeTimeline_DeliveryDate5", Caption = "ShowHorizontalScrollbar1", Level = 2U, SelectionLevel = 0U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-06T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };
            X15.Timeline timeline20 = new X15.Timeline(){ Name = "DeliveryDate 13", Cache = "NativeTimeline_DeliveryDate5", Caption = "ShowHorizontalScrollbar2", Level = 2U, SelectionLevel = 0U, ScrollPosition = System.Xml.XmlConvert.ToDateTime("2003-03-16T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelines9.Append(timeline19);
            timelines9.Append(timeline20);

            timeLinePart9.Timelines = timelines9;
        }

        // Generates content of drawingsPart9.
        private static void GenerateDrawingsPart9Content(DrawingsPart drawingsPart9)
        {
            Xdr.WorksheetDrawing worksheetDrawing9 = new Xdr.WorksheetDrawing();
            worksheetDrawing9.AddNamespaceDeclaration("xdr", "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing");
            worksheetDrawing9.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            Xdr.TwoCellAnchor twoCellAnchor35 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker35 = new Xdr.FromMarker();
            Xdr.ColumnId columnId69 = new Xdr.ColumnId();
            columnId69.Text = "2";
            Xdr.ColumnOffset columnOffset69 = new Xdr.ColumnOffset();
            columnOffset69.Text = "185737";
            Xdr.RowId rowId69 = new Xdr.RowId();
            rowId69.Text = "0";
            Xdr.RowOffset rowOffset69 = new Xdr.RowOffset();
            rowOffset69.Text = "0";

            fromMarker35.Append(columnId69);
            fromMarker35.Append(columnOffset69);
            fromMarker35.Append(rowId69);
            fromMarker35.Append(rowOffset69);

            Xdr.ToMarker toMarker35 = new Xdr.ToMarker();
            Xdr.ColumnId columnId70 = new Xdr.ColumnId();
            columnId70.Text = "9";
            Xdr.ColumnOffset columnOffset70 = new Xdr.ColumnOffset();
            columnOffset70.Text = "90487";
            Xdr.RowId rowId70 = new Xdr.RowId();
            rowId70.Text = "14";
            Xdr.RowOffset rowOffset70 = new Xdr.RowOffset();
            rowOffset70.Text = "76200";

            toMarker35.Append(columnId70);
            toMarker35.Append(columnOffset70);
            toMarker35.Append(rowId70);
            toMarker35.Append(rowOffset70);

            Xdr.GraphicFrame graphicFrame35 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties35 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties53 = new Xdr.NonVisualDrawingProperties(){ Id = 2U, Name = "Chart 1" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties35 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks13 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties35.Append(graphicFrameLocks13);

            nonVisualGraphicFrameProperties35.Append(nonVisualDrawingProperties53);
            nonVisualGraphicFrameProperties35.Append(nonVisualGraphicFrameDrawingProperties35);

            Xdr.Transform transform35 = new Xdr.Transform();
            A.Offset offset53 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents53 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform35.Append(offset53);
            transform35.Append(extents53);

            A.Graphic graphic35 = new A.Graphic();

            A.GraphicData graphicData35 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference17 = new C.ChartReference(){ Id = "rId1" };
            chartReference17.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference17.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData35.Append(chartReference17);

            graphic35.Append(graphicData35);

            graphicFrame35.Append(nonVisualGraphicFrameProperties35);
            graphicFrame35.Append(transform35);
            graphicFrame35.Append(graphic35);
            Xdr.ClientData clientData35 = new Xdr.ClientData();

            twoCellAnchor35.Append(fromMarker35);
            twoCellAnchor35.Append(toMarker35);
            twoCellAnchor35.Append(graphicFrame35);
            twoCellAnchor35.Append(clientData35);

            Xdr.TwoCellAnchor twoCellAnchor36 = new Xdr.TwoCellAnchor();

            Xdr.FromMarker fromMarker36 = new Xdr.FromMarker();
            Xdr.ColumnId columnId71 = new Xdr.ColumnId();
            columnId71.Text = "2";
            Xdr.ColumnOffset columnOffset71 = new Xdr.ColumnOffset();
            columnOffset71.Text = "200025";
            Xdr.RowId rowId71 = new Xdr.RowId();
            rowId71.Text = "14";
            Xdr.RowOffset rowOffset71 = new Xdr.RowOffset();
            rowOffset71.Text = "147637";

            fromMarker36.Append(columnId71);
            fromMarker36.Append(columnOffset71);
            fromMarker36.Append(rowId71);
            fromMarker36.Append(rowOffset71);

            Xdr.ToMarker toMarker36 = new Xdr.ToMarker();
            Xdr.ColumnId columnId72 = new Xdr.ColumnId();
            columnId72.Text = "7";
            Xdr.ColumnOffset columnOffset72 = new Xdr.ColumnOffset();
            columnOffset72.Text = "476250";
            Xdr.RowId rowId72 = new Xdr.RowId();
            rowId72.Text = "29";
            Xdr.RowOffset rowOffset72 = new Xdr.RowOffset();
            rowOffset72.Text = "33337";

            toMarker36.Append(columnId72);
            toMarker36.Append(columnOffset72);
            toMarker36.Append(rowId72);
            toMarker36.Append(rowOffset72);

            Xdr.GraphicFrame graphicFrame36 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties36 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties54 = new Xdr.NonVisualDrawingProperties(){ Id = 3U, Name = "グラフ 2" };

            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties36 = new Xdr.NonVisualGraphicFrameDrawingProperties();
            A.GraphicFrameLocks graphicFrameLocks14 = new A.GraphicFrameLocks();

            nonVisualGraphicFrameDrawingProperties36.Append(graphicFrameLocks14);

            nonVisualGraphicFrameProperties36.Append(nonVisualDrawingProperties54);
            nonVisualGraphicFrameProperties36.Append(nonVisualGraphicFrameDrawingProperties36);

            Xdr.Transform transform36 = new Xdr.Transform();
            A.Offset offset54 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents54 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform36.Append(offset54);
            transform36.Append(extents54);

            A.Graphic graphic36 = new A.Graphic();

            A.GraphicData graphicData36 = new A.GraphicData(){ Uri = "http://schemas.openxmlformats.org/drawingml/2006/chart" };

            C.ChartReference chartReference18 = new C.ChartReference(){ Id = "rId2" };
            chartReference18.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartReference18.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");

            graphicData36.Append(chartReference18);

            graphic36.Append(graphicData36);

            graphicFrame36.Append(nonVisualGraphicFrameProperties36);
            graphicFrame36.Append(transform36);
            graphicFrame36.Append(graphic36);
            Xdr.ClientData clientData36 = new Xdr.ClientData();

            twoCellAnchor36.Append(fromMarker36);
            twoCellAnchor36.Append(toMarker36);
            twoCellAnchor36.Append(graphicFrame36);
            twoCellAnchor36.Append(clientData36);

            Xdr.TwoCellAnchor twoCellAnchor37 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker37 = new Xdr.FromMarker();
            Xdr.ColumnId columnId73 = new Xdr.ColumnId();
            columnId73.Text = "9";
            Xdr.ColumnOffset columnOffset73 = new Xdr.ColumnOffset();
            columnOffset73.Text = "847725";
            Xdr.RowId rowId73 = new Xdr.RowId();
            rowId73.Text = "0";
            Xdr.RowOffset rowOffset73 = new Xdr.RowOffset();
            rowOffset73.Text = "161925";

            fromMarker37.Append(columnId73);
            fromMarker37.Append(columnOffset73);
            fromMarker37.Append(rowId73);
            fromMarker37.Append(rowOffset73);

            Xdr.ToMarker toMarker37 = new Xdr.ToMarker();
            Xdr.ColumnId columnId74 = new Xdr.ColumnId();
            columnId74.Text = "13";
            Xdr.ColumnOffset columnOffset74 = new Xdr.ColumnOffset();
            columnOffset74.Text = "714375";
            Xdr.RowId rowId74 = new Xdr.RowId();
            rowId74.Text = "7";
            Xdr.RowOffset rowOffset74 = new Xdr.RowOffset();
            rowOffset74.Text = "19050";

            toMarker37.Append(columnId74);
            toMarker37.Append(columnOffset74);
            toMarker37.Append(rowId74);
            toMarker37.Append(rowOffset74);

            AlternateContent alternateContent35 = new AlternateContent();
            alternateContent35.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent35.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice35 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame37 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties37 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties55 = new Xdr.NonVisualDrawingProperties(){ Id = 4U, Name = "DeliveryDate 12" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties37 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties37.Append(nonVisualDrawingProperties55);
            nonVisualGraphicFrameProperties37.Append(nonVisualGraphicFrameDrawingProperties37);

            Xdr.Transform transform37 = new Xdr.Transform();
            A.Offset offset55 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents55 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform37.Append(offset55);
            transform37.Append(extents55);

            A.Graphic graphic37 = new A.Graphic();

            A.GraphicData graphicData37 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer19 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 12" };
            timeSlicer19.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData37.Append(timeSlicer19);

            graphic37.Append(graphicData37);

            graphicFrame37.Append(nonVisualGraphicFrameProperties37);
            graphicFrame37.Append(transform37);
            graphicFrame37.Append(graphic37);

            alternateContentChoice35.Append(graphicFrame37);

            AlternateContentFallback alternateContentFallback34 = new AlternateContentFallback();
            alternateContentFallback34.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            alternateContentFallback34.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");

            Xdr.Shape shape19 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties19 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties56 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties19 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks19 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties19.Append(shapeLocks19);

            nonVisualShapeProperties19.Append(nonVisualDrawingProperties56);
            nonVisualShapeProperties19.Append(nonVisualShapeDrawingProperties19);

            Xdr.ShapeProperties shapeProperties70 = new Xdr.ShapeProperties();

            A.Transform2D transform2D19 = new A.Transform2D();
            A.Offset offset56 = new A.Offset(){ X = 8582025L, Y = 161925L };
            A.Extents extents56 = new A.Extents(){ Cx = 3333750L, Cy = 1190625L };

            transform2D19.Append(offset56);
            transform2D19.Append(extents56);

            A.PresetGeometry presetGeometry19 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList19 = new A.AdjustValueList();

            presetGeometry19.Append(adjustValueList19);

            A.SolidFill solidFill135 = new A.SolidFill();
            A.PresetColor presetColor37 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill135.Append(presetColor37);

            A.Outline outline108 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill136 = new A.SolidFill();
            A.PresetColor presetColor38 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill136.Append(presetColor38);

            outline108.Append(solidFill136);

            shapeProperties70.Append(transform2D19);
            shapeProperties70.Append(presetGeometry19);
            shapeProperties70.Append(solidFill135);
            shapeProperties70.Append(outline108);

            Xdr.TextBody textBody19 = new Xdr.TextBody();
            A.BodyProperties bodyProperties47 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle47 = new A.ListStyle();

            A.Paragraph paragraph47 = new A.Paragraph();

            A.Run run19 = new A.Run();
            A.RunProperties runProperties19 = new A.RunProperties(){ Language = "en-US", FontSize = 1100 };
            A.Text text57 = new A.Text();
            text57.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run19.Append(runProperties19);
            run19.Append(text57);

            paragraph47.Append(run19);

            textBody19.Append(bodyProperties47);
            textBody19.Append(listStyle47);
            textBody19.Append(paragraph47);

            shape19.Append(nonVisualShapeProperties19);
            shape19.Append(shapeProperties70);
            shape19.Append(textBody19);

            alternateContentFallback34.Append(shape19);

            alternateContent35.Append(alternateContentChoice35);
            alternateContent35.Append(alternateContentFallback34);
            Xdr.ClientData clientData37 = new Xdr.ClientData();

            twoCellAnchor37.Append(fromMarker37);
            twoCellAnchor37.Append(toMarker37);
            twoCellAnchor37.Append(alternateContent35);
            twoCellAnchor37.Append(clientData37);

            Xdr.TwoCellAnchor twoCellAnchor38 = new Xdr.TwoCellAnchor(){ EditAs = Xdr.EditAsValues.OneCell };

            Xdr.FromMarker fromMarker38 = new Xdr.FromMarker();
            Xdr.ColumnId columnId75 = new Xdr.ColumnId();
            columnId75.Text = "9";
            Xdr.ColumnOffset columnOffset75 = new Xdr.ColumnOffset();
            columnOffset75.Text = "847725";
            Xdr.RowId rowId75 = new Xdr.RowId();
            rowId75.Text = "8";
            Xdr.RowOffset rowOffset75 = new Xdr.RowOffset();
            rowOffset75.Text = "28575";

            fromMarker38.Append(columnId75);
            fromMarker38.Append(columnOffset75);
            fromMarker38.Append(rowId75);
            fromMarker38.Append(rowOffset75);

            Xdr.ToMarker toMarker38 = new Xdr.ToMarker();
            Xdr.ColumnId columnId76 = new Xdr.ColumnId();
            columnId76.Text = "13";
            Xdr.ColumnOffset columnOffset76 = new Xdr.ColumnOffset();
            columnOffset76.Text = "590550";
            Xdr.RowId rowId76 = new Xdr.RowId();
            rowId76.Text = "14";
            Xdr.RowOffset rowOffset76 = new Xdr.RowOffset();
            rowOffset76.Text = "76200";

            toMarker38.Append(columnId76);
            toMarker38.Append(columnOffset76);
            toMarker38.Append(rowId76);
            toMarker38.Append(rowOffset76);

            AlternateContent alternateContent36 = new AlternateContent();
            alternateContent36.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            alternateContent36.AddNamespaceDeclaration("a15", "http://schemas.microsoft.com/office/drawing/2012/main");

            AlternateContentChoice alternateContentChoice36 = new AlternateContentChoice(){ Requires = "a15" };

            Xdr.GraphicFrame graphicFrame38 = new Xdr.GraphicFrame(){ Macro = string.Empty };

            Xdr.NonVisualGraphicFrameProperties nonVisualGraphicFrameProperties38 = new Xdr.NonVisualGraphicFrameProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties57 = new Xdr.NonVisualDrawingProperties(){ Id = 5U, Name = "DeliveryDate 13" };
            Xdr.NonVisualGraphicFrameDrawingProperties nonVisualGraphicFrameDrawingProperties38 = new Xdr.NonVisualGraphicFrameDrawingProperties();

            nonVisualGraphicFrameProperties38.Append(nonVisualDrawingProperties57);
            nonVisualGraphicFrameProperties38.Append(nonVisualGraphicFrameDrawingProperties38);

            Xdr.Transform transform38 = new Xdr.Transform();
            A.Offset offset57 = new A.Offset(){ X = 0L, Y = 0L };
            A.Extents extents57 = new A.Extents(){ Cx = 0L, Cy = 0L };

            transform38.Append(offset57);
            transform38.Append(extents57);

            A.Graphic graphic38 = new A.Graphic();

            A.GraphicData graphicData38 = new A.GraphicData(){ Uri = "http://schemas.microsoft.com/office/drawing/2012/timeslicer" };

            Tsle.TimeSlicer timeSlicer20 = new Tsle.TimeSlicer(){ Name = "DeliveryDate 13" };
            timeSlicer20.AddNamespaceDeclaration("tsle", "http://schemas.microsoft.com/office/drawing/2012/timeslicer");

            graphicData38.Append(timeSlicer20);

            graphic38.Append(graphicData38);

            graphicFrame38.Append(nonVisualGraphicFrameProperties38);
            graphicFrame38.Append(transform38);
            graphicFrame38.Append(graphic38);

            alternateContentChoice36.Append(graphicFrame38);

            AlternateContentFallback alternateContentFallback35 = new AlternateContentFallback();

            Xdr.Shape shape20 = new Xdr.Shape(){ Macro = string.Empty, TextLink = string.Empty };

            Xdr.NonVisualShapeProperties nonVisualShapeProperties20 = new Xdr.NonVisualShapeProperties();
            Xdr.NonVisualDrawingProperties nonVisualDrawingProperties58 = new Xdr.NonVisualDrawingProperties(){ Id = 0U, Name = string.Empty };

            Xdr.NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties20 = new Xdr.NonVisualShapeDrawingProperties();
            A.ShapeLocks shapeLocks20 = new A.ShapeLocks(){ NoTextEdit = true };

            nonVisualShapeDrawingProperties20.Append(shapeLocks20);

            nonVisualShapeProperties20.Append(nonVisualDrawingProperties58);
            nonVisualShapeProperties20.Append(nonVisualShapeDrawingProperties20);

            Xdr.ShapeProperties shapeProperties71 = new Xdr.ShapeProperties();

            A.Transform2D transform2D20 = new A.Transform2D();
            A.Offset offset58 = new A.Offset(){ X = 10144125L, Y = 1400175L };
            A.Extents extents58 = new A.Extents(){ Cx = 3705225L, Cy = 1076325L };

            transform2D20.Append(offset58);
            transform2D20.Append(extents58);

            A.PresetGeometry presetGeometry20 = new A.PresetGeometry(){ Preset = A.ShapeTypeValues.Rectangle };
            A.AdjustValueList adjustValueList20 = new A.AdjustValueList();

            presetGeometry20.Append(adjustValueList20);

            A.SolidFill solidFill137 = new A.SolidFill();
            A.PresetColor presetColor39 = new A.PresetColor(){ Val = A.PresetColorValues.White };

            solidFill137.Append(presetColor39);

            A.Outline outline109 = new A.Outline(){ Width = 1 };

            A.SolidFill solidFill138 = new A.SolidFill();
            A.PresetColor presetColor40 = new A.PresetColor(){ Val = A.PresetColorValues.Green };

            solidFill138.Append(presetColor40);

            outline109.Append(solidFill138);

            shapeProperties71.Append(transform2D20);
            shapeProperties71.Append(presetGeometry20);
            shapeProperties71.Append(solidFill137);
            shapeProperties71.Append(outline109);

            Xdr.TextBody textBody20 = new Xdr.TextBody();
            A.BodyProperties bodyProperties48 = new A.BodyProperties(){ VerticalOverflow = A.TextVerticalOverflowValues.Clip, HorizontalOverflow = A.TextHorizontalOverflowValues.Clip };
            A.ListStyle listStyle48 = new A.ListStyle();

            A.Paragraph paragraph48 = new A.Paragraph();

            A.Run run20 = new A.Run();
            A.RunProperties runProperties20 = new A.RunProperties(){ Language = "ja-JP", AlternativeLanguage = "en-US", FontSize = 1100 };
            A.Text text58 = new A.Text();
            text58.Text = "Timeline: Works in Excel 15 or higher. Do not move or resize.";

            run20.Append(runProperties20);
            run20.Append(text58);

            paragraph48.Append(run20);

            textBody20.Append(bodyProperties48);
            textBody20.Append(listStyle48);
            textBody20.Append(paragraph48);

            shape20.Append(nonVisualShapeProperties20);
            shape20.Append(shapeProperties71);
            shape20.Append(textBody20);

            alternateContentFallback35.Append(shape20);

            alternateContent36.Append(alternateContentChoice36);
            alternateContent36.Append(alternateContentFallback35);
            Xdr.ClientData clientData38 = new Xdr.ClientData();

            twoCellAnchor38.Append(fromMarker38);
            twoCellAnchor38.Append(toMarker38);
            twoCellAnchor38.Append(alternateContent36);
            twoCellAnchor38.Append(clientData38);

            worksheetDrawing9.Append(twoCellAnchor35);
            worksheetDrawing9.Append(twoCellAnchor36);
            worksheetDrawing9.Append(twoCellAnchor37);
            worksheetDrawing9.Append(twoCellAnchor38);

            drawingsPart9.WorksheetDrawing = worksheetDrawing9;
        }

        // Generates content of chartPart17.
        private static void GenerateChartPart17Content(ChartPart chartPart17)
        {
            C.ChartSpace chartSpace17 = new C.ChartSpace();
            chartSpace17.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace17.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace17.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date190417 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage17 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners17 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent37 = new AlternateContent();
            alternateContent37.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice37 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice37.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style32 = new C14.Style(){ Val = 102 };

            alternateContentChoice37.Append(style32);

            AlternateContentFallback alternateContentFallback36 = new AlternateContentFallback();
            C.Style style33 = new C.Style(){ Val = 2 };

            alternateContentFallback36.Append(style33);

            alternateContent37.Append(alternateContentChoice37);
            alternateContent37.Append(alternateContentFallback36);

            C.PivotSource pivotSource17 = new C.PivotSource();
            C.PivotTableName pivotTableName17 = new C.PivotTableName();
            pivotTableName17.Text = "[GeneratedDocument.xlsx]ShowHorizontalScrollbar!PivotTable1";
            C.FormatId formatId17 = new C.FormatId(){ Val = 16U };

            pivotSource17.Append(pivotTableName17);
            pivotSource17.Append(formatId17);

            C.Chart chart17 = new C.Chart();

            C.Title title17 = new C.Title();
            C.Overlay overlay33 = new C.Overlay(){ Val = false };

            title17.Append(overlay33);
            C.AutoTitleDeleted autoTitleDeleted17 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats17 = new C.PivotFormats();

            C.PivotFormat pivotFormat154 = new C.PivotFormat();
            C.Index index170 = new C.Index(){ Val = 0U };

            C.Marker marker154 = new C.Marker();
            C.Symbol symbol154 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker154.Append(symbol154);

            pivotFormat154.Append(index170);
            pivotFormat154.Append(marker154);

            C.PivotFormat pivotFormat155 = new C.PivotFormat();
            C.Index index171 = new C.Index(){ Val = 1U };

            C.Marker marker155 = new C.Marker();
            C.Symbol symbol155 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker155.Append(symbol155);

            pivotFormat155.Append(index171);
            pivotFormat155.Append(marker155);

            C.PivotFormat pivotFormat156 = new C.PivotFormat();
            C.Index index172 = new C.Index(){ Val = 2U };

            C.Marker marker156 = new C.Marker();
            C.Symbol symbol156 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker156.Append(symbol156);

            pivotFormat156.Append(index172);
            pivotFormat156.Append(marker156);

            C.PivotFormat pivotFormat157 = new C.PivotFormat();
            C.Index index173 = new C.Index(){ Val = 3U };

            C.Marker marker157 = new C.Marker();
            C.Symbol symbol157 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker157.Append(symbol157);

            pivotFormat157.Append(index173);
            pivotFormat157.Append(marker157);

            C.PivotFormat pivotFormat158 = new C.PivotFormat();
            C.Index index174 = new C.Index(){ Val = 4U };

            C.Marker marker158 = new C.Marker();
            C.Symbol symbol158 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker158.Append(symbol158);

            pivotFormat158.Append(index174);
            pivotFormat158.Append(marker158);

            C.PivotFormat pivotFormat159 = new C.PivotFormat();
            C.Index index175 = new C.Index(){ Val = 5U };

            C.Marker marker159 = new C.Marker();
            C.Symbol symbol159 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker159.Append(symbol159);

            pivotFormat159.Append(index175);
            pivotFormat159.Append(marker159);

            pivotFormats17.Append(pivotFormat154);
            pivotFormats17.Append(pivotFormat155);
            pivotFormats17.Append(pivotFormat156);
            pivotFormats17.Append(pivotFormat157);
            pivotFormats17.Append(pivotFormat158);
            pivotFormats17.Append(pivotFormat159);

            C.PlotArea plotArea17 = new C.PlotArea();
            C.Layout layout17 = new C.Layout();

            C.PieChart pieChart9 = new C.PieChart();
            C.VaryColors varyColors17 = new C.VaryColors(){ Val = true };

            C.PieChartSeries pieChartSeries9 = new C.PieChartSeries();
            C.Index index176 = new C.Index(){ Val = 0U };
            C.Order order17 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText17 = new C.SeriesText();

            C.StringReference stringReference33 = new C.StringReference();
            C.Formula formula49 = new C.Formula();
            formula49.Text = "ShowHorizontalScrollbar!$B$1";

            C.StringCache stringCache33 = new C.StringCache();
            C.PointCount pointCount49 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint65 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue113 = new C.NumericValue();
            numericValue113.Text = "Total";

            stringPoint65.Append(numericValue113);

            stringCache33.Append(pointCount49);
            stringCache33.Append(stringPoint65);

            stringReference33.Append(formula49);
            stringReference33.Append(stringCache33);

            seriesText17.Append(stringReference33);

            C.CategoryAxisData categoryAxisData17 = new C.CategoryAxisData();

            C.StringReference stringReference34 = new C.StringReference();
            C.Formula formula50 = new C.Formula();
            formula50.Text = "ShowHorizontalScrollbar!$A$2:$A$5";

            C.StringCache stringCache34 = new C.StringCache();
            C.PointCount pointCount50 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint66 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue114 = new C.NumericValue();
            numericValue114.Text = "product_A";

            stringPoint66.Append(numericValue114);

            C.StringPoint stringPoint67 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue115 = new C.NumericValue();
            numericValue115.Text = "product_D";

            stringPoint67.Append(numericValue115);

            C.StringPoint stringPoint68 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue116 = new C.NumericValue();
            numericValue116.Text = "product_E";

            stringPoint68.Append(numericValue116);

            stringCache34.Append(pointCount50);
            stringCache34.Append(stringPoint66);
            stringCache34.Append(stringPoint67);
            stringCache34.Append(stringPoint68);

            stringReference34.Append(formula50);
            stringReference34.Append(stringCache34);

            categoryAxisData17.Append(stringReference34);

            C.Values values17 = new C.Values();

            C.NumberReference numberReference17 = new C.NumberReference();
            C.Formula formula51 = new C.Formula();
            formula51.Text = "ShowHorizontalScrollbar!$B$2:$B$5";

            C.NumberingCache numberingCache17 = new C.NumberingCache();
            C.FormatCode formatCode17 = new C.FormatCode();
            formatCode17.Text = "General";
            C.PointCount pointCount51 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint49 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue117 = new C.NumericValue();
            numericValue117.Text = "19";

            numericPoint49.Append(numericValue117);

            C.NumericPoint numericPoint50 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue118 = new C.NumericValue();
            numericValue118.Text = "13";

            numericPoint50.Append(numericValue118);

            C.NumericPoint numericPoint51 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue119 = new C.NumericValue();
            numericValue119.Text = "33";

            numericPoint51.Append(numericValue119);

            numberingCache17.Append(formatCode17);
            numberingCache17.Append(pointCount51);
            numberingCache17.Append(numericPoint49);
            numberingCache17.Append(numericPoint50);
            numberingCache17.Append(numericPoint51);

            numberReference17.Append(formula51);
            numberReference17.Append(numberingCache17);

            values17.Append(numberReference17);

            pieChartSeries9.Append(index176);
            pieChartSeries9.Append(order17);
            pieChartSeries9.Append(seriesText17);
            pieChartSeries9.Append(categoryAxisData17);
            pieChartSeries9.Append(values17);

            C.DataLabels dataLabels17 = new C.DataLabels();
            C.ShowLegendKey showLegendKey17 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue17 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName17 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName17 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent17 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize17 = new C.ShowBubbleSize(){ Val = false };
            C.ShowLeaderLines showLeaderLines9 = new C.ShowLeaderLines(){ Val = true };

            dataLabels17.Append(showLegendKey17);
            dataLabels17.Append(showValue17);
            dataLabels17.Append(showCategoryName17);
            dataLabels17.Append(showSeriesName17);
            dataLabels17.Append(showPercent17);
            dataLabels17.Append(showBubbleSize17);
            dataLabels17.Append(showLeaderLines9);
            C.FirstSliceAngle firstSliceAngle9 = new C.FirstSliceAngle(){ Val = (UInt16Value)0U };

            pieChart9.Append(varyColors17);
            pieChart9.Append(pieChartSeries9);
            pieChart9.Append(dataLabels17);
            pieChart9.Append(firstSliceAngle9);

            plotArea17.Append(layout17);
            plotArea17.Append(pieChart9);

            C.Legend legend17 = new C.Legend();
            C.LegendPosition legendPosition17 = new C.LegendPosition(){ Val = C.LegendPositionValues.Right };
            C.Overlay overlay34 = new C.Overlay(){ Val = false };

            legend17.Append(legendPosition17);
            legend17.Append(overlay34);
            C.PlotVisibleOnly plotVisibleOnly17 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs17 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum17 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart17.Append(title17);
            chart17.Append(autoTitleDeleted17);
            chart17.Append(pivotFormats17);
            chart17.Append(plotArea17);
            chart17.Append(legend17);
            chart17.Append(plotVisibleOnly17);
            chart17.Append(displayBlanksAs17);
            chart17.Append(showDataLabelsOverMaximum17);

            C.PrintSettings printSettings17 = new C.PrintSettings();
            C.HeaderFooter headerFooter17 = new C.HeaderFooter();
            C.PageMargins pageMargins28 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup17 = new C.PageSetup();

            printSettings17.Append(headerFooter17);
            printSettings17.Append(pageMargins28);
            printSettings17.Append(pageSetup17);

            C.ChartSpaceExtensionList chartSpaceExtensionList17 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList17.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList17.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension17 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension17.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions17 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter17 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories17 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData17 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries17 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible17 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions17.Append(dropZoneFilter17);
            pivotOptions17.Append(dropZoneCategories17);
            pivotOptions17.Append(dropZoneData17);
            pivotOptions17.Append(dropZoneSeries17);
            pivotOptions17.Append(dropZonesVisible17);

            chartSpaceExtension17.Append(pivotOptions17);

            chartSpaceExtensionList17.Append(chartSpaceExtension17);

            chartSpace17.Append(date190417);
            chartSpace17.Append(editingLanguage17);
            chartSpace17.Append(roundedCorners17);
            chartSpace17.Append(alternateContent37);
            chartSpace17.Append(pivotSource17);
            chartSpace17.Append(chart17);
            chartSpace17.Append(printSettings17);
            chartSpace17.Append(chartSpaceExtensionList17);

            chartPart17.ChartSpace = chartSpace17;
        }

        // Generates content of chartPart18.
        private static void GenerateChartPart18Content(ChartPart chartPart18)
        {
            C.ChartSpace chartSpace18 = new C.ChartSpace();
            chartSpace18.AddNamespaceDeclaration("c", "http://schemas.openxmlformats.org/drawingml/2006/chart");
            chartSpace18.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");
            chartSpace18.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            C.Date1904 date190418 = new C.Date1904(){ Val = false };
            C.EditingLanguage editingLanguage18 = new C.EditingLanguage(){ Val = "en-US" };
            C.RoundedCorners roundedCorners18 = new C.RoundedCorners(){ Val = false };

            AlternateContent alternateContent38 = new AlternateContent();
            alternateContent38.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            AlternateContentChoice alternateContentChoice38 = new AlternateContentChoice(){ Requires = "c14" };
            alternateContentChoice38.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            C14.Style style34 = new C14.Style(){ Val = 101 };

            alternateContentChoice38.Append(style34);

            AlternateContentFallback alternateContentFallback37 = new AlternateContentFallback();
            C.Style style35 = new C.Style(){ Val = 1 };

            alternateContentFallback37.Append(style35);

            alternateContent38.Append(alternateContentChoice38);
            alternateContent38.Append(alternateContentFallback37);

            C.PivotSource pivotSource18 = new C.PivotSource();
            C.PivotTableName pivotTableName18 = new C.PivotTableName();
            pivotTableName18.Text = "[GeneratedDocument.xlsx]ShowHorizontalScrollbar!PivotTable1";
            C.FormatId formatId18 = new C.FormatId(){ Val = 15U };

            pivotSource18.Append(pivotTableName18);
            pivotSource18.Append(formatId18);

            C.Chart chart18 = new C.Chart();

            C.Title title18 = new C.Title();
            C.Overlay overlay35 = new C.Overlay(){ Val = false };

            title18.Append(overlay35);
            C.AutoTitleDeleted autoTitleDeleted18 = new C.AutoTitleDeleted(){ Val = false };

            C.PivotFormats pivotFormats18 = new C.PivotFormats();

            C.PivotFormat pivotFormat160 = new C.PivotFormat();
            C.Index index177 = new C.Index(){ Val = 0U };

            C.ShapeProperties shapeProperties72 = new C.ShapeProperties();

            A.SolidFill solidFill139 = new A.SolidFill();

            A.SchemeColor schemeColor109 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint47 = new A.Tint(){ Val = 100000 };

            schemeColor109.Append(tint47);

            solidFill139.Append(schemeColor109);

            A.Outline outline110 = new A.Outline();
            A.NoFill noFill94 = new A.NoFill();

            outline110.Append(noFill94);
            A.EffectList effectList90 = new A.EffectList();

            shapeProperties72.Append(solidFill139);
            shapeProperties72.Append(outline110);
            shapeProperties72.Append(effectList90);

            C.Marker marker160 = new C.Marker();
            C.Symbol symbol160 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker160.Append(symbol160);

            pivotFormat160.Append(index177);
            pivotFormat160.Append(shapeProperties72);
            pivotFormat160.Append(marker160);

            C.PivotFormat pivotFormat161 = new C.PivotFormat();
            C.Index index178 = new C.Index(){ Val = 1U };

            C.ShapeProperties shapeProperties73 = new C.ShapeProperties();

            A.SolidFill solidFill140 = new A.SolidFill();

            A.SchemeColor schemeColor110 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent2 };
            A.Tint tint48 = new A.Tint(){ Val = 100000 };

            schemeColor110.Append(tint48);

            solidFill140.Append(schemeColor110);

            A.Outline outline111 = new A.Outline();
            A.NoFill noFill95 = new A.NoFill();

            outline111.Append(noFill95);
            A.EffectList effectList91 = new A.EffectList();

            shapeProperties73.Append(solidFill140);
            shapeProperties73.Append(outline111);
            shapeProperties73.Append(effectList91);

            C.Marker marker161 = new C.Marker();
            C.Symbol symbol161 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker161.Append(symbol161);

            pivotFormat161.Append(index178);
            pivotFormat161.Append(shapeProperties73);
            pivotFormat161.Append(marker161);

            C.PivotFormat pivotFormat162 = new C.PivotFormat();
            C.Index index179 = new C.Index(){ Val = 2U };

            C.Marker marker162 = new C.Marker();
            C.Symbol symbol162 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker162.Append(symbol162);

            pivotFormat162.Append(index179);
            pivotFormat162.Append(marker162);

            C.PivotFormat pivotFormat163 = new C.PivotFormat();
            C.Index index180 = new C.Index(){ Val = 3U };

            C.Marker marker163 = new C.Marker();
            C.Symbol symbol163 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker163.Append(symbol163);

            pivotFormat163.Append(index180);
            pivotFormat163.Append(marker163);

            C.PivotFormat pivotFormat164 = new C.PivotFormat();
            C.Index index181 = new C.Index(){ Val = 4U };

            C.Marker marker164 = new C.Marker();
            C.Symbol symbol164 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker164.Append(symbol164);

            pivotFormat164.Append(index181);
            pivotFormat164.Append(marker164);

            C.PivotFormat pivotFormat165 = new C.PivotFormat();
            C.Index index182 = new C.Index(){ Val = 5U };

            C.Marker marker165 = new C.Marker();
            C.Symbol symbol165 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker165.Append(symbol165);

            pivotFormat165.Append(index182);
            pivotFormat165.Append(marker165);

            C.PivotFormat pivotFormat166 = new C.PivotFormat();
            C.Index index183 = new C.Index(){ Val = 6U };

            C.Marker marker166 = new C.Marker();
            C.Symbol symbol166 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker166.Append(symbol166);

            pivotFormat166.Append(index183);
            pivotFormat166.Append(marker166);

            C.PivotFormat pivotFormat167 = new C.PivotFormat();
            C.Index index184 = new C.Index(){ Val = 7U };

            C.Marker marker167 = new C.Marker();
            C.Symbol symbol167 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker167.Append(symbol167);

            pivotFormat167.Append(index184);
            pivotFormat167.Append(marker167);

            C.PivotFormat pivotFormat168 = new C.PivotFormat();
            C.Index index185 = new C.Index(){ Val = 8U };

            C.Marker marker168 = new C.Marker();
            C.Symbol symbol168 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker168.Append(symbol168);

            pivotFormat168.Append(index185);
            pivotFormat168.Append(marker168);

            C.PivotFormat pivotFormat169 = new C.PivotFormat();
            C.Index index186 = new C.Index(){ Val = 9U };

            C.Marker marker169 = new C.Marker();
            C.Symbol symbol169 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker169.Append(symbol169);

            pivotFormat169.Append(index186);
            pivotFormat169.Append(marker169);

            C.PivotFormat pivotFormat170 = new C.PivotFormat();
            C.Index index187 = new C.Index(){ Val = 10U };

            C.Marker marker170 = new C.Marker();
            C.Symbol symbol170 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker170.Append(symbol170);

            pivotFormat170.Append(index187);
            pivotFormat170.Append(marker170);

            C.PivotFormat pivotFormat171 = new C.PivotFormat();
            C.Index index188 = new C.Index(){ Val = 11U };

            C.Marker marker171 = new C.Marker();
            C.Symbol symbol171 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker171.Append(symbol171);

            pivotFormat171.Append(index188);
            pivotFormat171.Append(marker171);

            C.PivotFormat pivotFormat172 = new C.PivotFormat();
            C.Index index189 = new C.Index(){ Val = 12U };

            C.Marker marker172 = new C.Marker();
            C.Symbol symbol172 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker172.Append(symbol172);

            pivotFormat172.Append(index189);
            pivotFormat172.Append(marker172);

            C.PivotFormat pivotFormat173 = new C.PivotFormat();
            C.Index index190 = new C.Index(){ Val = 13U };

            C.Marker marker173 = new C.Marker();
            C.Symbol symbol173 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker173.Append(symbol173);

            pivotFormat173.Append(index190);
            pivotFormat173.Append(marker173);

            C.PivotFormat pivotFormat174 = new C.PivotFormat();
            C.Index index191 = new C.Index(){ Val = 14U };

            C.ShapeProperties shapeProperties74 = new C.ShapeProperties();

            A.SolidFill solidFill141 = new A.SolidFill();

            A.SchemeColor schemeColor111 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint49 = new A.Tint(){ Val = 100000 };

            schemeColor111.Append(tint49);

            solidFill141.Append(schemeColor111);

            A.Outline outline112 = new A.Outline();
            A.NoFill noFill96 = new A.NoFill();

            outline112.Append(noFill96);
            A.EffectList effectList92 = new A.EffectList();

            shapeProperties74.Append(solidFill141);
            shapeProperties74.Append(outline112);
            shapeProperties74.Append(effectList92);

            C.Marker marker174 = new C.Marker();
            C.Symbol symbol174 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker174.Append(symbol174);

            pivotFormat174.Append(index191);
            pivotFormat174.Append(shapeProperties74);
            pivotFormat174.Append(marker174);

            C.PivotFormat pivotFormat175 = new C.PivotFormat();
            C.Index index192 = new C.Index(){ Val = 15U };

            C.ShapeProperties shapeProperties75 = new C.ShapeProperties();

            A.SolidFill solidFill142 = new A.SolidFill();

            A.SchemeColor schemeColor112 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint50 = new A.Tint(){ Val = 100000 };

            schemeColor112.Append(tint50);

            solidFill142.Append(schemeColor112);

            A.Outline outline113 = new A.Outline();
            A.NoFill noFill97 = new A.NoFill();

            outline113.Append(noFill97);
            A.EffectList effectList93 = new A.EffectList();

            shapeProperties75.Append(solidFill142);
            shapeProperties75.Append(outline113);
            shapeProperties75.Append(effectList93);

            C.Marker marker175 = new C.Marker();
            C.Symbol symbol175 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker175.Append(symbol175);

            pivotFormat175.Append(index192);
            pivotFormat175.Append(shapeProperties75);
            pivotFormat175.Append(marker175);

            C.PivotFormat pivotFormat176 = new C.PivotFormat();
            C.Index index193 = new C.Index(){ Val = 16U };

            C.ShapeProperties shapeProperties76 = new C.ShapeProperties();

            A.SolidFill solidFill143 = new A.SolidFill();

            A.SchemeColor schemeColor113 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint51 = new A.Tint(){ Val = 100000 };

            schemeColor113.Append(tint51);

            solidFill143.Append(schemeColor113);

            A.Outline outline114 = new A.Outline();
            A.NoFill noFill98 = new A.NoFill();

            outline114.Append(noFill98);
            A.EffectList effectList94 = new A.EffectList();

            shapeProperties76.Append(solidFill143);
            shapeProperties76.Append(outline114);
            shapeProperties76.Append(effectList94);

            C.Marker marker176 = new C.Marker();
            C.Symbol symbol176 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker176.Append(symbol176);

            pivotFormat176.Append(index193);
            pivotFormat176.Append(shapeProperties76);
            pivotFormat176.Append(marker176);

            C.PivotFormat pivotFormat177 = new C.PivotFormat();
            C.Index index194 = new C.Index(){ Val = 17U };

            C.ShapeProperties shapeProperties77 = new C.ShapeProperties();

            A.SolidFill solidFill144 = new A.SolidFill();

            A.SchemeColor schemeColor114 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint52 = new A.Tint(){ Val = 100000 };

            schemeColor114.Append(tint52);

            solidFill144.Append(schemeColor114);

            A.Outline outline115 = new A.Outline();
            A.NoFill noFill99 = new A.NoFill();

            outline115.Append(noFill99);
            A.EffectList effectList95 = new A.EffectList();

            shapeProperties77.Append(solidFill144);
            shapeProperties77.Append(outline115);
            shapeProperties77.Append(effectList95);

            C.Marker marker177 = new C.Marker();
            C.Symbol symbol177 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker177.Append(symbol177);

            pivotFormat177.Append(index194);
            pivotFormat177.Append(shapeProperties77);
            pivotFormat177.Append(marker177);

            C.PivotFormat pivotFormat178 = new C.PivotFormat();
            C.Index index195 = new C.Index(){ Val = 18U };

            C.ShapeProperties shapeProperties78 = new C.ShapeProperties();

            A.SolidFill solidFill145 = new A.SolidFill();

            A.SchemeColor schemeColor115 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint53 = new A.Tint(){ Val = 100000 };

            schemeColor115.Append(tint53);

            solidFill145.Append(schemeColor115);

            A.Outline outline116 = new A.Outline();
            A.NoFill noFill100 = new A.NoFill();

            outline116.Append(noFill100);
            A.EffectList effectList96 = new A.EffectList();

            shapeProperties78.Append(solidFill145);
            shapeProperties78.Append(outline116);
            shapeProperties78.Append(effectList96);

            C.Marker marker178 = new C.Marker();
            C.Symbol symbol178 = new C.Symbol(){ Val = C.MarkerStyleValues.None };

            marker178.Append(symbol178);

            pivotFormat178.Append(index195);
            pivotFormat178.Append(shapeProperties78);
            pivotFormat178.Append(marker178);

            pivotFormats18.Append(pivotFormat160);
            pivotFormats18.Append(pivotFormat161);
            pivotFormats18.Append(pivotFormat162);
            pivotFormats18.Append(pivotFormat163);
            pivotFormats18.Append(pivotFormat164);
            pivotFormats18.Append(pivotFormat165);
            pivotFormats18.Append(pivotFormat166);
            pivotFormats18.Append(pivotFormat167);
            pivotFormats18.Append(pivotFormat168);
            pivotFormats18.Append(pivotFormat169);
            pivotFormats18.Append(pivotFormat170);
            pivotFormats18.Append(pivotFormat171);
            pivotFormats18.Append(pivotFormat172);
            pivotFormats18.Append(pivotFormat173);
            pivotFormats18.Append(pivotFormat174);
            pivotFormats18.Append(pivotFormat175);
            pivotFormats18.Append(pivotFormat176);
            pivotFormats18.Append(pivotFormat177);
            pivotFormats18.Append(pivotFormat178);

            C.PlotArea plotArea18 = new C.PlotArea();
            C.Layout layout18 = new C.Layout();

            C.BarChart barChart9 = new C.BarChart();
            C.BarDirection barDirection9 = new C.BarDirection(){ Val = C.BarDirectionValues.Column };
            C.BarGrouping barGrouping9 = new C.BarGrouping(){ Val = C.BarGroupingValues.Clustered };
            C.VaryColors varyColors18 = new C.VaryColors(){ Val = false };

            C.BarChartSeries barChartSeries9 = new C.BarChartSeries();
            C.Index index196 = new C.Index(){ Val = 0U };
            C.Order order18 = new C.Order(){ Val = 0U };

            C.SeriesText seriesText18 = new C.SeriesText();

            C.StringReference stringReference35 = new C.StringReference();
            C.Formula formula52 = new C.Formula();
            formula52.Text = "ShowHorizontalScrollbar!$B$1";

            C.StringCache stringCache35 = new C.StringCache();
            C.PointCount pointCount52 = new C.PointCount(){ Val = 1U };

            C.StringPoint stringPoint69 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue120 = new C.NumericValue();
            numericValue120.Text = "Total";

            stringPoint69.Append(numericValue120);

            stringCache35.Append(pointCount52);
            stringCache35.Append(stringPoint69);

            stringReference35.Append(formula52);
            stringReference35.Append(stringCache35);

            seriesText18.Append(stringReference35);

            C.ChartShapeProperties chartShapeProperties36 = new C.ChartShapeProperties();

            A.SolidFill solidFill146 = new A.SolidFill();

            A.SchemeColor schemeColor116 = new A.SchemeColor(){ Val = A.SchemeColorValues.Accent1 };
            A.Tint tint54 = new A.Tint(){ Val = 100000 };

            schemeColor116.Append(tint54);

            solidFill146.Append(schemeColor116);

            A.Outline outline117 = new A.Outline();
            A.NoFill noFill101 = new A.NoFill();

            outline117.Append(noFill101);
            A.EffectList effectList97 = new A.EffectList();

            chartShapeProperties36.Append(solidFill146);
            chartShapeProperties36.Append(outline117);
            chartShapeProperties36.Append(effectList97);
            C.InvertIfNegative invertIfNegative9 = new C.InvertIfNegative(){ Val = false };

            C.CategoryAxisData categoryAxisData18 = new C.CategoryAxisData();

            C.StringReference stringReference36 = new C.StringReference();
            C.Formula formula53 = new C.Formula();
            formula53.Text = "ShowHorizontalScrollbar!$A$2:$A$5";

            C.StringCache stringCache36 = new C.StringCache();
            C.PointCount pointCount53 = new C.PointCount(){ Val = 3U };

            C.StringPoint stringPoint70 = new C.StringPoint(){ Index = 0U };
            C.NumericValue numericValue121 = new C.NumericValue();
            numericValue121.Text = "product_A";

            stringPoint70.Append(numericValue121);

            C.StringPoint stringPoint71 = new C.StringPoint(){ Index = 1U };
            C.NumericValue numericValue122 = new C.NumericValue();
            numericValue122.Text = "product_D";

            stringPoint71.Append(numericValue122);

            C.StringPoint stringPoint72 = new C.StringPoint(){ Index = 2U };
            C.NumericValue numericValue123 = new C.NumericValue();
            numericValue123.Text = "product_E";

            stringPoint72.Append(numericValue123);

            stringCache36.Append(pointCount53);
            stringCache36.Append(stringPoint70);
            stringCache36.Append(stringPoint71);
            stringCache36.Append(stringPoint72);

            stringReference36.Append(formula53);
            stringReference36.Append(stringCache36);

            categoryAxisData18.Append(stringReference36);

            C.Values values18 = new C.Values();

            C.NumberReference numberReference18 = new C.NumberReference();
            C.Formula formula54 = new C.Formula();
            formula54.Text = "ShowHorizontalScrollbar!$B$2:$B$5";

            C.NumberingCache numberingCache18 = new C.NumberingCache();
            C.FormatCode formatCode18 = new C.FormatCode();
            formatCode18.Text = "General";
            C.PointCount pointCount54 = new C.PointCount(){ Val = 3U };

            C.NumericPoint numericPoint52 = new C.NumericPoint(){ Index = 0U };
            C.NumericValue numericValue124 = new C.NumericValue();
            numericValue124.Text = "19";

            numericPoint52.Append(numericValue124);

            C.NumericPoint numericPoint53 = new C.NumericPoint(){ Index = 1U };
            C.NumericValue numericValue125 = new C.NumericValue();
            numericValue125.Text = "13";

            numericPoint53.Append(numericValue125);

            C.NumericPoint numericPoint54 = new C.NumericPoint(){ Index = 2U };
            C.NumericValue numericValue126 = new C.NumericValue();
            numericValue126.Text = "33";

            numericPoint54.Append(numericValue126);

            numberingCache18.Append(formatCode18);
            numberingCache18.Append(pointCount54);
            numberingCache18.Append(numericPoint52);
            numberingCache18.Append(numericPoint53);
            numberingCache18.Append(numericPoint54);

            numberReference18.Append(formula54);
            numberReference18.Append(numberingCache18);

            values18.Append(numberReference18);

            barChartSeries9.Append(index196);
            barChartSeries9.Append(order18);
            barChartSeries9.Append(seriesText18);
            barChartSeries9.Append(chartShapeProperties36);
            barChartSeries9.Append(invertIfNegative9);
            barChartSeries9.Append(categoryAxisData18);
            barChartSeries9.Append(values18);

            C.DataLabels dataLabels18 = new C.DataLabels();
            C.ShowLegendKey showLegendKey18 = new C.ShowLegendKey(){ Val = false };
            C.ShowValue showValue18 = new C.ShowValue(){ Val = false };
            C.ShowCategoryName showCategoryName18 = new C.ShowCategoryName(){ Val = false };
            C.ShowSeriesName showSeriesName18 = new C.ShowSeriesName(){ Val = false };
            C.ShowPercent showPercent18 = new C.ShowPercent(){ Val = false };
            C.ShowBubbleSize showBubbleSize18 = new C.ShowBubbleSize(){ Val = false };

            dataLabels18.Append(showLegendKey18);
            dataLabels18.Append(showValue18);
            dataLabels18.Append(showCategoryName18);
            dataLabels18.Append(showSeriesName18);
            dataLabels18.Append(showPercent18);
            dataLabels18.Append(showBubbleSize18);
            C.GapWidth gapWidth9 = new C.GapWidth(){ Val = (UInt16Value)219U };
            C.Overlap overlap8 = new C.Overlap(){ Val = -27 };
            C.AxisId axisId33 = new C.AxisId(){ Val = 209982688U };
            C.AxisId axisId34 = new C.AxisId(){ Val = 208839816U };

            barChart9.Append(barDirection9);
            barChart9.Append(barGrouping9);
            barChart9.Append(varyColors18);
            barChart9.Append(barChartSeries9);
            barChart9.Append(dataLabels18);
            barChart9.Append(gapWidth9);
            barChart9.Append(overlap8);
            barChart9.Append(axisId33);
            barChart9.Append(axisId34);

            C.CategoryAxis categoryAxis9 = new C.CategoryAxis();
            C.AxisId axisId35 = new C.AxisId(){ Val = 209982688U };

            C.Scaling scaling17 = new C.Scaling();
            C.Orientation orientation17 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling17.Append(orientation17);
            C.Delete delete17 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition17 = new C.AxisPosition(){ Val = C.AxisPositionValues.Bottom };
            C.NumberingFormat numberingFormat28 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = false };
            C.MajorTickMark majorTickMark17 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark17 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition17 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties37 = new C.ChartShapeProperties();
            A.NoFill noFill102 = new A.NoFill();

            A.Outline outline118 = new A.Outline();
            A.NoFill noFill103 = new A.NoFill();

            outline118.Append(noFill103);
            A.EffectList effectList98 = new A.EffectList();

            chartShapeProperties37.Append(noFill102);
            chartShapeProperties37.Append(outline118);
            chartShapeProperties37.Append(effectList98);

            C.TextProperties textProperties29 = new C.TextProperties();
            A.BodyProperties bodyProperties49 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle49 = new A.ListStyle();

            A.Paragraph paragraph49 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties29 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties29 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill147 = new A.SolidFill();

            A.SchemeColor schemeColor117 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation42 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset36 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor117.Append(luminanceModulation42);
            schemeColor117.Append(luminanceOffset36);

            solidFill147.Append(schemeColor117);
            A.LatinFont latinFont24 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont24 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont24 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties29.Append(solidFill147);
            defaultRunProperties29.Append(latinFont24);
            defaultRunProperties29.Append(eastAsianFont24);
            defaultRunProperties29.Append(complexScriptFont24);

            paragraphProperties29.Append(defaultRunProperties29);
            A.EndParagraphRunProperties endParagraphRunProperties29 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph49.Append(paragraphProperties29);
            paragraph49.Append(endParagraphRunProperties29);

            textProperties29.Append(bodyProperties49);
            textProperties29.Append(listStyle49);
            textProperties29.Append(paragraph49);
            C.CrossingAxis crossingAxis17 = new C.CrossingAxis(){ Val = 208839816U };
            C.Crosses crosses17 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.AutoLabeled autoLabeled9 = new C.AutoLabeled(){ Val = true };
            C.LabelAlignment labelAlignment9 = new C.LabelAlignment(){ Val = C.LabelAlignmentValues.Center };
            C.LabelOffset labelOffset9 = new C.LabelOffset(){ Val = (UInt16Value)100U };
            C.NoMultiLevelLabels noMultiLevelLabels9 = new C.NoMultiLevelLabels(){ Val = false };

            categoryAxis9.Append(axisId35);
            categoryAxis9.Append(scaling17);
            categoryAxis9.Append(delete17);
            categoryAxis9.Append(axisPosition17);
            categoryAxis9.Append(numberingFormat28);
            categoryAxis9.Append(majorTickMark17);
            categoryAxis9.Append(minorTickMark17);
            categoryAxis9.Append(tickLabelPosition17);
            categoryAxis9.Append(chartShapeProperties37);
            categoryAxis9.Append(textProperties29);
            categoryAxis9.Append(crossingAxis17);
            categoryAxis9.Append(crosses17);
            categoryAxis9.Append(autoLabeled9);
            categoryAxis9.Append(labelAlignment9);
            categoryAxis9.Append(labelOffset9);
            categoryAxis9.Append(noMultiLevelLabels9);

            C.ValueAxis valueAxis9 = new C.ValueAxis();
            C.AxisId axisId36 = new C.AxisId(){ Val = 208839816U };

            C.Scaling scaling18 = new C.Scaling();
            C.Orientation orientation18 = new C.Orientation(){ Val = C.OrientationValues.MinMax };

            scaling18.Append(orientation18);
            C.Delete delete18 = new C.Delete(){ Val = false };
            C.AxisPosition axisPosition18 = new C.AxisPosition(){ Val = C.AxisPositionValues.Left };

            C.MajorGridlines majorGridlines9 = new C.MajorGridlines();

            C.ChartShapeProperties chartShapeProperties38 = new C.ChartShapeProperties();

            A.Outline outline119 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill148 = new A.SolidFill();

            A.SchemeColor schemeColor118 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation43 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset37 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor118.Append(luminanceModulation43);
            schemeColor118.Append(luminanceOffset37);

            solidFill148.Append(schemeColor118);
            A.Round round15 = new A.Round();

            outline119.Append(solidFill148);
            outline119.Append(round15);
            A.EffectList effectList99 = new A.EffectList();

            chartShapeProperties38.Append(outline119);
            chartShapeProperties38.Append(effectList99);

            majorGridlines9.Append(chartShapeProperties38);
            C.NumberingFormat numberingFormat29 = new C.NumberingFormat(){ FormatCode = "General", SourceLinked = true };
            C.MajorTickMark majorTickMark18 = new C.MajorTickMark(){ Val = C.TickMarkValues.None };
            C.MinorTickMark minorTickMark18 = new C.MinorTickMark(){ Val = C.TickMarkValues.None };
            C.TickLabelPosition tickLabelPosition18 = new C.TickLabelPosition(){ Val = C.TickLabelPositionValues.NextTo };

            C.ChartShapeProperties chartShapeProperties39 = new C.ChartShapeProperties();
            A.NoFill noFill104 = new A.NoFill();

            A.Outline outline120 = new A.Outline();
            A.NoFill noFill105 = new A.NoFill();

            outline120.Append(noFill105);
            A.EffectList effectList100 = new A.EffectList();

            chartShapeProperties39.Append(noFill104);
            chartShapeProperties39.Append(outline120);
            chartShapeProperties39.Append(effectList100);

            C.TextProperties textProperties30 = new C.TextProperties();
            A.BodyProperties bodyProperties50 = new A.BodyProperties(){ Rotation = -60000000, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle50 = new A.ListStyle();

            A.Paragraph paragraph50 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties30 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties30 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill149 = new A.SolidFill();

            A.SchemeColor schemeColor119 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation44 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset38 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor119.Append(luminanceModulation44);
            schemeColor119.Append(luminanceOffset38);

            solidFill149.Append(schemeColor119);
            A.LatinFont latinFont25 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont25 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont25 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties30.Append(solidFill149);
            defaultRunProperties30.Append(latinFont25);
            defaultRunProperties30.Append(eastAsianFont25);
            defaultRunProperties30.Append(complexScriptFont25);

            paragraphProperties30.Append(defaultRunProperties30);
            A.EndParagraphRunProperties endParagraphRunProperties30 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph50.Append(paragraphProperties30);
            paragraph50.Append(endParagraphRunProperties30);

            textProperties30.Append(bodyProperties50);
            textProperties30.Append(listStyle50);
            textProperties30.Append(paragraph50);
            C.CrossingAxis crossingAxis18 = new C.CrossingAxis(){ Val = 209982688U };
            C.Crosses crosses18 = new C.Crosses(){ Val = C.CrossesValues.AutoZero };
            C.CrossBetween crossBetween9 = new C.CrossBetween(){ Val = C.CrossBetweenValues.Between };

            valueAxis9.Append(axisId36);
            valueAxis9.Append(scaling18);
            valueAxis9.Append(delete18);
            valueAxis9.Append(axisPosition18);
            valueAxis9.Append(majorGridlines9);
            valueAxis9.Append(numberingFormat29);
            valueAxis9.Append(majorTickMark18);
            valueAxis9.Append(minorTickMark18);
            valueAxis9.Append(tickLabelPosition18);
            valueAxis9.Append(chartShapeProperties39);
            valueAxis9.Append(textProperties30);
            valueAxis9.Append(crossingAxis18);
            valueAxis9.Append(crosses18);
            valueAxis9.Append(crossBetween9);

            C.ShapeProperties shapeProperties79 = new C.ShapeProperties();

            A.SolidFill solidFill150 = new A.SolidFill();
            A.SchemeColor schemeColor120 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill150.Append(schemeColor120);

            A.Outline outline121 = new A.Outline();
            A.NoFill noFill106 = new A.NoFill();

            outline121.Append(noFill106);
            A.EffectList effectList101 = new A.EffectList();

            shapeProperties79.Append(solidFill150);
            shapeProperties79.Append(outline121);
            shapeProperties79.Append(effectList101);

            plotArea18.Append(layout18);
            plotArea18.Append(barChart9);
            plotArea18.Append(categoryAxis9);
            plotArea18.Append(valueAxis9);
            plotArea18.Append(shapeProperties79);

            C.Legend legend18 = new C.Legend();
            C.LegendPosition legendPosition18 = new C.LegendPosition(){ Val = C.LegendPositionValues.Bottom };
            C.Overlay overlay36 = new C.Overlay(){ Val = false };

            C.ChartShapeProperties chartShapeProperties40 = new C.ChartShapeProperties();
            A.NoFill noFill107 = new A.NoFill();

            A.Outline outline122 = new A.Outline();
            A.NoFill noFill108 = new A.NoFill();

            outline122.Append(noFill108);
            A.EffectList effectList102 = new A.EffectList();

            chartShapeProperties40.Append(noFill107);
            chartShapeProperties40.Append(outline122);
            chartShapeProperties40.Append(effectList102);

            C.TextProperties textProperties31 = new C.TextProperties();
            A.BodyProperties bodyProperties51 = new A.BodyProperties(){ Rotation = 0, UseParagraphSpacing = true, VerticalOverflow = A.TextVerticalOverflowValues.Ellipsis, Vertical = A.TextVerticalValues.Horizontal, Wrap = A.TextWrappingValues.Square, Anchor = A.TextAnchoringTypeValues.Center, AnchorCenter = true };
            A.ListStyle listStyle51 = new A.ListStyle();

            A.Paragraph paragraph51 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties31 = new A.ParagraphProperties();

            A.DefaultRunProperties defaultRunProperties31 = new A.DefaultRunProperties(){ FontSize = 900, Kerning = 1200 };

            A.SolidFill solidFill151 = new A.SolidFill();

            A.SchemeColor schemeColor121 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation45 = new A.LuminanceModulation(){ Val = 65000 };
            A.LuminanceOffset luminanceOffset39 = new A.LuminanceOffset(){ Val = 35000 };

            schemeColor121.Append(luminanceModulation45);
            schemeColor121.Append(luminanceOffset39);

            solidFill151.Append(schemeColor121);
            A.LatinFont latinFont26 = new A.LatinFont(){ Typeface = "+mn-lt" };
            A.EastAsianFont eastAsianFont26 = new A.EastAsianFont(){ Typeface = "+mn-ea" };
            A.ComplexScriptFont complexScriptFont26 = new A.ComplexScriptFont(){ Typeface = "+mn-cs" };

            defaultRunProperties31.Append(solidFill151);
            defaultRunProperties31.Append(latinFont26);
            defaultRunProperties31.Append(eastAsianFont26);
            defaultRunProperties31.Append(complexScriptFont26);

            paragraphProperties31.Append(defaultRunProperties31);
            A.EndParagraphRunProperties endParagraphRunProperties31 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph51.Append(paragraphProperties31);
            paragraph51.Append(endParagraphRunProperties31);

            textProperties31.Append(bodyProperties51);
            textProperties31.Append(listStyle51);
            textProperties31.Append(paragraph51);

            legend18.Append(legendPosition18);
            legend18.Append(overlay36);
            legend18.Append(chartShapeProperties40);
            legend18.Append(textProperties31);
            C.PlotVisibleOnly plotVisibleOnly18 = new C.PlotVisibleOnly(){ Val = true };
            C.DisplayBlanksAs displayBlanksAs18 = new C.DisplayBlanksAs(){ Val = C.DisplayBlanksAsValues.Gap };
            C.ShowDataLabelsOverMaximum showDataLabelsOverMaximum18 = new C.ShowDataLabelsOverMaximum(){ Val = false };

            chart18.Append(title18);
            chart18.Append(autoTitleDeleted18);
            chart18.Append(pivotFormats18);
            chart18.Append(plotArea18);
            chart18.Append(legend18);
            chart18.Append(plotVisibleOnly18);
            chart18.Append(displayBlanksAs18);
            chart18.Append(showDataLabelsOverMaximum18);

            C.ShapeProperties shapeProperties80 = new C.ShapeProperties();

            A.SolidFill solidFill152 = new A.SolidFill();
            A.SchemeColor schemeColor122 = new A.SchemeColor(){ Val = A.SchemeColorValues.Background1 };

            solidFill152.Append(schemeColor122);

            A.Outline outline123 = new A.Outline(){ Width = 9525, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill153 = new A.SolidFill();

            A.SchemeColor schemeColor123 = new A.SchemeColor(){ Val = A.SchemeColorValues.Text1 };
            A.LuminanceModulation luminanceModulation46 = new A.LuminanceModulation(){ Val = 15000 };
            A.LuminanceOffset luminanceOffset40 = new A.LuminanceOffset(){ Val = 85000 };

            schemeColor123.Append(luminanceModulation46);
            schemeColor123.Append(luminanceOffset40);

            solidFill153.Append(schemeColor123);
            A.Round round16 = new A.Round();

            outline123.Append(solidFill153);
            outline123.Append(round16);
            A.EffectList effectList103 = new A.EffectList();

            shapeProperties80.Append(solidFill152);
            shapeProperties80.Append(outline123);
            shapeProperties80.Append(effectList103);

            C.TextProperties textProperties32 = new C.TextProperties();
            A.BodyProperties bodyProperties52 = new A.BodyProperties();
            A.ListStyle listStyle52 = new A.ListStyle();

            A.Paragraph paragraph52 = new A.Paragraph();

            A.ParagraphProperties paragraphProperties32 = new A.ParagraphProperties();
            A.DefaultRunProperties defaultRunProperties32 = new A.DefaultRunProperties();

            paragraphProperties32.Append(defaultRunProperties32);
            A.EndParagraphRunProperties endParagraphRunProperties32 = new A.EndParagraphRunProperties(){ Language = "en-US" };

            paragraph52.Append(paragraphProperties32);
            paragraph52.Append(endParagraphRunProperties32);

            textProperties32.Append(bodyProperties52);
            textProperties32.Append(listStyle52);
            textProperties32.Append(paragraph52);

            C.PrintSettings printSettings18 = new C.PrintSettings();
            C.HeaderFooter headerFooter18 = new C.HeaderFooter();
            C.PageMargins pageMargins29 = new C.PageMargins(){ Left = 0.7D, Right = 0.7D, Top = 0.75D, Bottom = 0.75D, Header = 0.3D, Footer = 0.3D };
            C.PageSetup pageSetup18 = new C.PageSetup();

            printSettings18.Append(headerFooter18);
            printSettings18.Append(pageMargins29);
            printSettings18.Append(pageSetup18);

            C.ChartSpaceExtensionList chartSpaceExtensionList18 = new C.ChartSpaceExtensionList();
            chartSpaceExtensionList18.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");
            chartSpaceExtensionList18.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");

            C.ChartSpaceExtension chartSpaceExtension18 = new C.ChartSpaceExtension(){ Uri = "{781A3756-C4B2-4CAC-9D66-4F8BD8637D16}" };
            chartSpaceExtension18.AddNamespaceDeclaration("c14", "http://schemas.microsoft.com/office/drawing/2007/8/2/chart");

            C14.PivotOptions pivotOptions18 = new C14.PivotOptions();
            C14.DropZoneFilter dropZoneFilter18 = new C14.DropZoneFilter(){ Val = true };
            C14.DropZoneCategories dropZoneCategories18 = new C14.DropZoneCategories(){ Val = true };
            C14.DropZoneData dropZoneData18 = new C14.DropZoneData(){ Val = true };
            C14.DropZoneSeries dropZoneSeries18 = new C14.DropZoneSeries(){ Val = true };
            C14.DropZonesVisible dropZonesVisible18 = new C14.DropZonesVisible(){ Val = true };

            pivotOptions18.Append(dropZoneFilter18);
            pivotOptions18.Append(dropZoneCategories18);
            pivotOptions18.Append(dropZoneData18);
            pivotOptions18.Append(dropZoneSeries18);
            pivotOptions18.Append(dropZonesVisible18);

            chartSpaceExtension18.Append(pivotOptions18);

            chartSpaceExtensionList18.Append(chartSpaceExtension18);

            chartSpace18.Append(date190418);
            chartSpace18.Append(editingLanguage18);
            chartSpace18.Append(roundedCorners18);
            chartSpace18.Append(alternateContent38);
            chartSpace18.Append(pivotSource18);
            chartSpace18.Append(chart18);
            chartSpace18.Append(shapeProperties80);
            chartSpace18.Append(textProperties32);
            chartSpace18.Append(printSettings18);
            chartSpace18.Append(chartSpaceExtensionList18);

            chartPart18.ChartSpace = chartSpace18;
        }

        // Generates content of pivotTablePart9.
        private static void GeneratePivotTablePart9Content(PivotTablePart pivotTablePart9)
        {
            PivotTableDefinition pivotTableDefinition17 = new PivotTableDefinition(){ Name = "PivotTable1", CacheId = 1U, ApplyNumberFormats = false, ApplyBorderFormats = false, ApplyFontFormats = false, ApplyPatternFormats = false, ApplyAlignmentFormats = false, ApplyWidthHeightFormats = true, DataCaption = "Values", UpdatedVersion = 5, MinRefreshableVersion = 5, UseAutoFormatting = true, ItemPrintTitles = true, CreatedVersion = 4, Indent = 0U, Outline = true, OutlineData = true, MultipleFieldFilters = false, ChartFormat = 17U };
            Location location9 = new Location(){ Reference = "A1:B5", FirstHeaderRow = 1U, FirstDataRow = 1U, FirstDataColumn = 1U };

            PivotFields pivotFields9 = new PivotFields(){ Count = 7U };

            PivotField pivotField56 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items31 = new Items(){ Count = 15U };
            Item item270 = new Item(){ Index = 0U };
            Item item271 = new Item(){ Index = 1U };
            Item item272 = new Item(){ Index = 2U };
            Item item273 = new Item(){ Index = 3U };
            Item item274 = new Item(){ Index = 4U };
            Item item275 = new Item(){ Index = 5U };
            Item item276 = new Item(){ Index = 6U };
            Item item277 = new Item(){ Index = 7U };
            Item item278 = new Item(){ Index = 8U };
            Item item279 = new Item(){ Index = 9U };
            Item item280 = new Item(){ Index = 10U };
            Item item281 = new Item(){ Index = 11U };
            Item item282 = new Item(){ Index = 12U };
            Item item283 = new Item(){ Index = 13U };
            Item item284 = new Item(){ ItemType = ItemValues.Default };

            items31.Append(item270);
            items31.Append(item271);
            items31.Append(item272);
            items31.Append(item273);
            items31.Append(item274);
            items31.Append(item275);
            items31.Append(item276);
            items31.Append(item277);
            items31.Append(item278);
            items31.Append(item279);
            items31.Append(item280);
            items31.Append(item281);
            items31.Append(item282);
            items31.Append(item283);
            items31.Append(item284);

            pivotField56.Append(items31);

            PivotField pivotField57 = new PivotField(){ Axis = PivotTableAxisValues.AxisRow, ShowAll = false };

            Items items32 = new Items(){ Count = 11U };
            Item item285 = new Item(){ Index = 0U };
            Item item286 = new Item(){ Missing = true, Index = 4U };
            Item item287 = new Item(){ Missing = true, Index = 3U };
            Item item288 = new Item(){ Index = 1U };
            Item item289 = new Item(){ Index = 2U };
            Item item290 = new Item(){ Missing = true, Index = 9U };
            Item item291 = new Item(){ Missing = true, Index = 8U };
            Item item292 = new Item(){ Missing = true, Index = 7U };
            Item item293 = new Item(){ Missing = true, Index = 6U };
            Item item294 = new Item(){ Missing = true, Index = 5U };
            Item item295 = new Item(){ ItemType = ItemValues.Default };

            items32.Append(item285);
            items32.Append(item286);
            items32.Append(item287);
            items32.Append(item288);
            items32.Append(item289);
            items32.Append(item290);
            items32.Append(item291);
            items32.Append(item292);
            items32.Append(item293);
            items32.Append(item294);
            items32.Append(item295);

            pivotField57.Append(items32);
            PivotField pivotField58 = new PivotField(){ DataField = true, ShowAll = false };
            PivotField pivotField59 = new PivotField(){ ShowAll = false };

            PivotField pivotField60 = new PivotField(){ NumberFormatId = 14U, ShowAll = false };

            Items items33 = new Items(){ Count = 5U };
            Item item296 = new Item(){ Index = 0U };
            Item item297 = new Item(){ Index = 1U };
            Item item298 = new Item(){ Index = 3U };
            Item item299 = new Item(){ Index = 2U };
            Item item300 = new Item(){ ItemType = ItemValues.Default };

            items33.Append(item296);
            items33.Append(item297);
            items33.Append(item298);
            items33.Append(item299);
            items33.Append(item300);

            pivotField60.Append(items33);
            PivotField pivotField61 = new PivotField(){ ShowAll = false };

            PivotField pivotField62 = new PivotField(){ ShowAll = false, DefaultSubtotal = false };

            Items items34 = new Items(){ Count = 5U };
            Item item301 = new Item(){ Index = 0U };
            Item item302 = new Item(){ Index = 1U };
            Item item303 = new Item(){ Index = 2U };
            Item item304 = new Item(){ Index = 3U };
            Item item305 = new Item(){ Index = 4U };

            items34.Append(item301);
            items34.Append(item302);
            items34.Append(item303);
            items34.Append(item304);
            items34.Append(item305);

            pivotField62.Append(items34);

            pivotFields9.Append(pivotField56);
            pivotFields9.Append(pivotField57);
            pivotFields9.Append(pivotField58);
            pivotFields9.Append(pivotField59);
            pivotFields9.Append(pivotField60);
            pivotFields9.Append(pivotField61);
            pivotFields9.Append(pivotField62);

            RowFields rowFields9 = new RowFields(){ Count = 1U };
            Field field9 = new Field(){ Index = 1 };

            rowFields9.Append(field9);

            RowItems rowItems9 = new RowItems(){ Count = 4U };

            RowItem rowItem41 = new RowItem();
            MemberPropertyIndex memberPropertyIndex33 = new MemberPropertyIndex();

            rowItem41.Append(memberPropertyIndex33);

            RowItem rowItem42 = new RowItem();
            MemberPropertyIndex memberPropertyIndex34 = new MemberPropertyIndex(){ Val = 3 };

            rowItem42.Append(memberPropertyIndex34);

            RowItem rowItem43 = new RowItem();
            MemberPropertyIndex memberPropertyIndex35 = new MemberPropertyIndex(){ Val = 4 };

            rowItem43.Append(memberPropertyIndex35);

            RowItem rowItem44 = new RowItem(){ ItemType = ItemValues.Grand };
            MemberPropertyIndex memberPropertyIndex36 = new MemberPropertyIndex();

            rowItem44.Append(memberPropertyIndex36);

            rowItems9.Append(rowItem41);
            rowItems9.Append(rowItem42);
            rowItems9.Append(rowItem43);
            rowItems9.Append(rowItem44);

            ColumnItems columnItems9 = new ColumnItems(){ Count = 1U };
            RowItem rowItem45 = new RowItem();

            columnItems9.Append(rowItem45);

            DataFields dataFields9 = new DataFields(){ Count = 1U };
            DataField dataField9 = new DataField(){ Name = "Sum of Quantity", Field = 2U, BaseField = 0, BaseItem = 0U };

            dataFields9.Append(dataField9);

            ChartFormats chartFormats9 = new ChartFormats(){ Count = 13U };

            ChartFormat chartFormat70 = new ChartFormat(){ Chart = 4U, Format = 0U, Series = true };

            PivotArea pivotArea70 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences70 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference70 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem92 = new FieldItem(){ Val = 0U };

            pivotAreaReference70.Append(fieldItem92);

            pivotAreaReferences70.Append(pivotAreaReference70);

            pivotArea70.Append(pivotAreaReferences70);

            chartFormat70.Append(pivotArea70);

            ChartFormat chartFormat71 = new ChartFormat(){ Chart = 5U, Format = 2U, Series = true };

            PivotArea pivotArea71 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences71 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference71 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem93 = new FieldItem(){ Val = 0U };

            pivotAreaReference71.Append(fieldItem93);

            pivotAreaReferences71.Append(pivotAreaReference71);

            pivotArea71.Append(pivotAreaReferences71);

            chartFormat71.Append(pivotArea71);

            ChartFormat chartFormat72 = new ChartFormat(){ Chart = 6U, Format = 0U, Series = true };

            PivotArea pivotArea72 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences72 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference72 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem94 = new FieldItem(){ Val = 0U };

            pivotAreaReference72.Append(fieldItem94);

            pivotAreaReferences72.Append(pivotAreaReference72);

            pivotArea72.Append(pivotAreaReferences72);

            chartFormat72.Append(pivotArea72);

            ChartFormat chartFormat73 = new ChartFormat(){ Chart = 7U, Format = 14U, Series = true };

            PivotArea pivotArea73 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences73 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference73 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem95 = new FieldItem(){ Val = 0U };

            pivotAreaReference73.Append(fieldItem95);

            pivotAreaReferences73.Append(pivotAreaReference73);

            pivotArea73.Append(pivotAreaReferences73);

            chartFormat73.Append(pivotArea73);

            ChartFormat chartFormat74 = new ChartFormat(){ Chart = 8U, Format = 1U, Series = true };

            PivotArea pivotArea74 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences74 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference74 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem96 = new FieldItem(){ Val = 0U };

            pivotAreaReference74.Append(fieldItem96);

            pivotAreaReferences74.Append(pivotAreaReference74);

            pivotArea74.Append(pivotAreaReferences74);

            chartFormat74.Append(pivotArea74);

            ChartFormat chartFormat75 = new ChartFormat(){ Chart = 9U, Format = 15U, Series = true };

            PivotArea pivotArea75 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences75 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference75 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem97 = new FieldItem(){ Val = 0U };

            pivotAreaReference75.Append(fieldItem97);

            pivotAreaReferences75.Append(pivotAreaReference75);

            pivotArea75.Append(pivotAreaReferences75);

            chartFormat75.Append(pivotArea75);

            ChartFormat chartFormat76 = new ChartFormat(){ Chart = 10U, Format = 2U, Series = true };

            PivotArea pivotArea76 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences76 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference76 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem98 = new FieldItem(){ Val = 0U };

            pivotAreaReference76.Append(fieldItem98);

            pivotAreaReferences76.Append(pivotAreaReference76);

            pivotArea76.Append(pivotAreaReferences76);

            chartFormat76.Append(pivotArea76);

            ChartFormat chartFormat77 = new ChartFormat(){ Chart = 11U, Format = 16U, Series = true };

            PivotArea pivotArea77 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences77 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference77 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem99 = new FieldItem(){ Val = 0U };

            pivotAreaReference77.Append(fieldItem99);

            pivotAreaReferences77.Append(pivotAreaReference77);

            pivotArea77.Append(pivotAreaReferences77);

            chartFormat77.Append(pivotArea77);

            ChartFormat chartFormat78 = new ChartFormat(){ Chart = 12U, Format = 3U, Series = true };

            PivotArea pivotArea78 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences78 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference78 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem100 = new FieldItem(){ Val = 0U };

            pivotAreaReference78.Append(fieldItem100);

            pivotAreaReferences78.Append(pivotAreaReference78);

            pivotArea78.Append(pivotAreaReferences78);

            chartFormat78.Append(pivotArea78);

            ChartFormat chartFormat79 = new ChartFormat(){ Chart = 13U, Format = 17U, Series = true };

            PivotArea pivotArea79 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences79 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference79 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem101 = new FieldItem(){ Val = 0U };

            pivotAreaReference79.Append(fieldItem101);

            pivotAreaReferences79.Append(pivotAreaReference79);

            pivotArea79.Append(pivotAreaReferences79);

            chartFormat79.Append(pivotArea79);

            ChartFormat chartFormat80 = new ChartFormat(){ Chart = 14U, Format = 4U, Series = true };

            PivotArea pivotArea80 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences80 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference80 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem102 = new FieldItem(){ Val = 0U };

            pivotAreaReference80.Append(fieldItem102);

            pivotAreaReferences80.Append(pivotAreaReference80);

            pivotArea80.Append(pivotAreaReferences80);

            chartFormat80.Append(pivotArea80);

            ChartFormat chartFormat81 = new ChartFormat(){ Chart = 15U, Format = 18U, Series = true };

            PivotArea pivotArea81 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences81 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference81 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem103 = new FieldItem(){ Val = 0U };

            pivotAreaReference81.Append(fieldItem103);

            pivotAreaReferences81.Append(pivotAreaReference81);

            pivotArea81.Append(pivotAreaReferences81);

            chartFormat81.Append(pivotArea81);

            ChartFormat chartFormat82 = new ChartFormat(){ Chart = 16U, Format = 5U, Series = true };

            PivotArea pivotArea82 = new PivotArea(){ Type = PivotAreaValues.Data, Outline = false, FieldPosition = 0U };

            PivotAreaReferences pivotAreaReferences82 = new PivotAreaReferences(){ Count = 1U };

            PivotAreaReference pivotAreaReference82 = new PivotAreaReference(){ Field = 4294967294U, Count = 1U, Selected = false };
            FieldItem fieldItem104 = new FieldItem(){ Val = 0U };

            pivotAreaReference82.Append(fieldItem104);

            pivotAreaReferences82.Append(pivotAreaReference82);

            pivotArea82.Append(pivotAreaReferences82);

            chartFormat82.Append(pivotArea82);

            chartFormats9.Append(chartFormat70);
            chartFormats9.Append(chartFormat71);
            chartFormats9.Append(chartFormat72);
            chartFormats9.Append(chartFormat73);
            chartFormats9.Append(chartFormat74);
            chartFormats9.Append(chartFormat75);
            chartFormats9.Append(chartFormat76);
            chartFormats9.Append(chartFormat77);
            chartFormats9.Append(chartFormat78);
            chartFormats9.Append(chartFormat79);
            chartFormats9.Append(chartFormat80);
            chartFormats9.Append(chartFormat81);
            chartFormats9.Append(chartFormat82);
            PivotTableStyle pivotTableStyle9 = new PivotTableStyle(){ Name = "PivotStyleLight16", ShowRowHeaders = true, ShowColumnHeaders = true, ShowRowStripes = false, ShowColumnStripes = false, ShowLastColumn = true };

            PivotFilters pivotFilters1 = new PivotFilters(){ Count = 1U };

            PivotFilter pivotFilter1 = new PivotFilter(){ Field = 4U, Type = PivotFilterValues.DateBetween, EvaluationOrder = -1, Id = 6U, Name = "DeliveryDate" };

            AutoFilter autoFilter7 = new AutoFilter(){ Reference = "A1" };

            FilterColumn filterColumn1 = new FilterColumn(){ ColumnId = 0U };

            CustomFilters customFilters1 = new CustomFilters(){ And = true };
            CustomFilter customFilter1 = new CustomFilter(){ Operator = FilterOperatorValues.GreaterThanOrEqual, Val = "36526" };
            CustomFilter customFilter2 = new CustomFilter(){ Operator = FilterOperatorValues.LessThanOrEqual, Val = "37986" };

            customFilters1.Append(customFilter1);
            customFilters1.Append(customFilter2);

            filterColumn1.Append(customFilters1);

            autoFilter7.Append(filterColumn1);

            PivotFilterExtensionList pivotFilterExtensionList1 = new PivotFilterExtensionList();

            PivotFilterExtension pivotFilterExtension1 = new PivotFilterExtension(){ Uri = "{0605FD5F-26C8-4aeb-8148-2DB25E43C511}" };
            pivotFilterExtension1.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");
            X15.PivotFilter pivotFilter2 = new X15.PivotFilter(){ UseWholeDay = true };

            pivotFilterExtension1.Append(pivotFilter2);

            pivotFilterExtensionList1.Append(pivotFilterExtension1);

            pivotFilter1.Append(autoFilter7);
            pivotFilter1.Append(pivotFilterExtensionList1);

            pivotFilters1.Append(pivotFilter1);

            PivotTableDefinitionExtensionList pivotTableDefinitionExtensionList9 = new PivotTableDefinitionExtensionList();

            PivotTableDefinitionExtension pivotTableDefinitionExtension9 = new PivotTableDefinitionExtension(){ Uri = "{962EF5D1-5CA2-4c93-8EF4-DBF5C05439D2}" };
            pivotTableDefinitionExtension9.AddNamespaceDeclaration("x14", "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main");

            X14.PivotTableDefinition pivotTableDefinition18 = new X14.PivotTableDefinition(){ HideValuesRow = true };
            pivotTableDefinition18.AddNamespaceDeclaration("xm", "http://schemas.microsoft.com/office/excel/2006/main");

            pivotTableDefinitionExtension9.Append(pivotTableDefinition18);

            pivotTableDefinitionExtensionList9.Append(pivotTableDefinitionExtension9);

            pivotTableDefinition17.Append(location9);
            pivotTableDefinition17.Append(pivotFields9);
            pivotTableDefinition17.Append(rowFields9);
            pivotTableDefinition17.Append(rowItems9);
            pivotTableDefinition17.Append(columnItems9);
            pivotTableDefinition17.Append(dataFields9);
            pivotTableDefinition17.Append(chartFormats9);
            pivotTableDefinition17.Append(pivotTableStyle9);
            pivotTableDefinition17.Append(pivotFilters1);
            pivotTableDefinition17.Append(pivotTableDefinitionExtensionList9);

            pivotTablePart9.PivotTableDefinition = pivotTableDefinition17;
        }

        // Generates content of timeLineCachePart8.
        private static void GenerateTimeLineCachePart8Content(TimeLineCachePart timeLineCachePart8)
        {
            X15.TimelineCacheDefinition timelineCacheDefinition8 = new X15.TimelineCacheDefinition(){ Name = "NativeTimeline_Date", SourceName = "Date" };
            timelineCacheDefinition8.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCachePivotTables timelineCachePivotTables8 = new X15.TimelineCachePivotTables();
            X15.TimelineCachePivotTable timelineCachePivotTable8 = new X15.TimelineCachePivotTable(){ TabId = 4U, Name = "PivotTable1" };

            timelineCachePivotTables8.Append(timelineCachePivotTable8);

            X15.TimelineState timelineState8 = new X15.TimelineState(){ MinimalRefreshVersion = 6U, LastRefreshVersion = 6U, PivotCacheId = 1U, FilterType = PivotFilterValues.Unknown };
            X15.BoundsTimelineRange boundsTimelineRange8 = new X15.BoundsTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2003-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelineState8.Append(boundsTimelineRange8);

            timelineCacheDefinition8.Append(timelineCachePivotTables8);
            timelineCacheDefinition8.Append(timelineState8);

            timeLineCachePart8.TimelineCacheDefinition = timelineCacheDefinition8;
        }

        // Generates content of timeLineCachePart9.
        private static void GenerateTimeLineCachePart9Content(TimeLineCachePart timeLineCachePart9)
        {
            X15.TimelineCacheDefinition timelineCacheDefinition9 = new X15.TimelineCacheDefinition(){ Name = "NativeTimeline_DeliveryDate7", SourceName = "DeliveryDate" };
            timelineCacheDefinition9.AddNamespaceDeclaration("x15", "http://schemas.microsoft.com/office/spreadsheetml/2010/11/main");

            X15.TimelineCachePivotTables timelineCachePivotTables9 = new X15.TimelineCachePivotTables();
            X15.TimelineCachePivotTable timelineCachePivotTable9 = new X15.TimelineCachePivotTable(){ TabId = 11U, Name = "PivotTable1" };

            timelineCachePivotTables9.Append(timelineCachePivotTable9);

            X15.TimelineState timelineState9 = new X15.TimelineState(){ MinimalRefreshVersion = 6U, LastRefreshVersion = 6U, PivotCacheId = 2U, FilterType = PivotFilterValues.Unknown };
            X15.BoundsTimelineRange boundsTimelineRange9 = new X15.BoundsTimelineRange(){ StartDate = System.Xml.XmlConvert.ToDateTime("2000-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind), EndDate = System.Xml.XmlConvert.ToDateTime("2004-01-01T00:00:00Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind) };

            timelineState9.Append(boundsTimelineRange9);

            timelineCacheDefinition9.Append(timelineCachePivotTables9);
            timelineCacheDefinition9.Append(timelineState9);

            timeLineCachePart9.TimelineCacheDefinition = timelineCacheDefinition9;
        }

        private static void SetPackageProperties(OpenXmlPackage document)
        {
            document.PackageProperties.Creator = "Masaki Tamura (Pasona Tech)";
            document.PackageProperties.Created = System.Xml.XmlConvert.ToDateTime("2011-12-19T07:19:18Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind);
            document.PackageProperties.Modified = System.Xml.XmlConvert.ToDateTime("2012-10-03T08:48:40Z", System.Xml.XmlDateTimeSerializationMode.RoundtripKind);
            document.PackageProperties.LastModifiedBy = "Dan Ito";
        }
    }
}
