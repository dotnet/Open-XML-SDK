<Project>
  <Choose>
    <When Condition="$(IsTestProject)">
      <PropertyGroup>
        <NoWarn>$(NoWarn);CA1303;CA1307;CA1309;CA1822;CA1062</NoWarn>
        <CommonFilesDirectory>$(MSBuildThisFileDirectory)Common/</CommonFilesDirectory>
      </PropertyGroup>
      <ItemGroup>
        <CommonFiles Include="$(CommonFilesDirectory)**/*.cs" />
        <Compile Include="@(CommonFiles)">
          <Link>Common/$([MSBuild]::MakeRelative($(CommonFilesDirectory), %(FullPath)))</Link>
        </Compile>
      </ItemGroup>
      <ItemGroup>
        <!-- Need to bring this in manually as the test framework itself tries to bring in 9.0.0 -->
        <PackageReference Include="Newtonsoft.Json" />
        <PackageReference Include="System.ValueTuple" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" />
        <PackageReference Include="NSubstitute" />
        <PackageReference Include="xunit" />
        <PackageReference Include="xunit.runner.visualstudio">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
        </PackageReference>
      </ItemGroup>
    </When>
  </Choose>

  <!-- Enables us to use the .NET Standard or .NET 3.5 tests when by default it would use a different "best fit" TFM -->
  <ItemGroup Condition=" '$(TestTargetFramework)' == '$(TargetFramework)' AND '$(TestDependencyTargetFramework)' != '' ">
    <ProjectReference Update="..\src\DocumentFormat.OpenXml.Framework\DocumentFormat.OpenXml.Framework.csproj">
      <AdditionalProperties>TargetFramework=$(TestDependencyTargetFramework)</AdditionalProperties>
    </ProjectReference>
    <ProjectReference Update="..\src\DocumentFormat.OpenXml\DocumentFormat.OpenXml.csproj">
      <AdditionalProperties>TargetFramework=$(TestDependencyTargetFramework)</AdditionalProperties>
    </ProjectReference>
  </ItemGroup>

  <Target Name="PublishProjectIfFrameworkSet" DependsOnTargets="Publish" Condition=" '$(TargetFramework)' != '' " />
  <Target Name="PublishProjectForAllFrameworksIfFrameworkUnset" Condition=" '$(TargetFramework)' == '' ">
    <ItemGroup>
      <_PublishFramework Include="$(TargetFrameworks)" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Publish" Properties="TargetFramework=%(_PublishFramework.Identity)" />
  </Target>
  <Target Name="PublishAll" Condition="$(IsTestProject) OR $(IsBenchmarkProject)" DependsOnTargets="PublishProjectIfFrameworkSet;PublishProjectForAllFrameworksIfFrameworkUnset" />
  <Import Project="..\Directory.Build.targets" />
</Project>