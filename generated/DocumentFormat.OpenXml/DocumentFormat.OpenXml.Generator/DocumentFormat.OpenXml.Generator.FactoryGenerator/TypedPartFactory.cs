// <auto-generated/>

// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

#nullable enable

using DocumentFormat.OpenXml;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Features;

namespace DocumentFormat.OpenXml.Packaging;

public abstract partial class TypedOpenXmlPackage
{
    private protected abstract partial class TypedPackageFeatureCollection<TDocumentType, TMainPart> : ITypedPartFactoryFeature
        where TDocumentType : struct, System.Enum
        where TMainPart : OpenXmlPart
    {
        T? ITypedPartFactoryFeature.Create<T>() where T : class
        {
            if (typeof(T) == typeof(AlternativeFormatImportPart))
            {
                return (T)(object)new AlternativeFormatImportPart();
            }
            
            if (typeof(T) == typeof(CalculationChainPart))
            {
                return (T)(object)new CalculationChainPart();
            }
            
            if (typeof(T) == typeof(CellMetadataPart))
            {
                return (T)(object)new CellMetadataPart();
            }
            
            if (typeof(T) == typeof(ChartColorStylePart))
            {
                return (T)(object)new ChartColorStylePart();
            }
            
            if (typeof(T) == typeof(ChartDrawingPart))
            {
                return (T)(object)new ChartDrawingPart();
            }
            
            if (typeof(T) == typeof(ChartPart))
            {
                return (T)(object)new ChartPart();
            }
            
            if (typeof(T) == typeof(ChartsheetPart))
            {
                return (T)(object)new ChartsheetPart();
            }
            
            if (typeof(T) == typeof(ChartStylePart))
            {
                return (T)(object)new ChartStylePart();
            }
            
            if (typeof(T) == typeof(CommentAuthorsPart))
            {
                return (T)(object)new CommentAuthorsPart();
            }
            
            if (typeof(T) == typeof(ConnectionsPart))
            {
                return (T)(object)new ConnectionsPart();
            }
            
            if (typeof(T) == typeof(ControlPropertiesPart))
            {
                return (T)(object)new ControlPropertiesPart();
            }
            
            if (typeof(T) == typeof(CoreFilePropertiesPart))
            {
                return (T)(object)new CoreFilePropertiesPart();
            }
            
            if (typeof(T) == typeof(CustomDataPart))
            {
                return (T)(object)new CustomDataPart();
            }
            
            if (typeof(T) == typeof(CustomDataPropertiesPart))
            {
                return (T)(object)new CustomDataPropertiesPart();
            }
            
            if (typeof(T) == typeof(CustomFilePropertiesPart))
            {
                return (T)(object)new CustomFilePropertiesPart();
            }
            
            if (typeof(T) == typeof(CustomizationPart))
            {
                return (T)(object)new CustomizationPart();
            }
            
            if (typeof(T) == typeof(CustomPropertyPart))
            {
                return (T)(object)new CustomPropertyPart();
            }
            
            if (typeof(T) == typeof(CustomXmlMappingsPart))
            {
                return (T)(object)new CustomXmlMappingsPart();
            }
            
            if (typeof(T) == typeof(CustomXmlPart))
            {
                return (T)(object)new CustomXmlPart();
            }
            
            if (typeof(T) == typeof(CustomXmlPropertiesPart))
            {
                return (T)(object)new CustomXmlPropertiesPart();
            }
            
            if (typeof(T) == typeof(DiagramColorsPart))
            {
                return (T)(object)new DiagramColorsPart();
            }
            
            if (typeof(T) == typeof(DiagramDataPart))
            {
                return (T)(object)new DiagramDataPart();
            }
            
            if (typeof(T) == typeof(DiagramLayoutDefinitionPart))
            {
                return (T)(object)new DiagramLayoutDefinitionPart();
            }
            
            if (typeof(T) == typeof(DiagramPersistLayoutPart))
            {
                return (T)(object)new DiagramPersistLayoutPart();
            }
            
            if (typeof(T) == typeof(DiagramStylePart))
            {
                return (T)(object)new DiagramStylePart();
            }
            
            if (typeof(T) == typeof(DialogsheetPart))
            {
                return (T)(object)new DialogsheetPart();
            }
            
            if (typeof(T) == typeof(DigitalSignatureOriginPart))
            {
                return (T)(object)new DigitalSignatureOriginPart();
            }
            
            if (typeof(T) == typeof(DocumentSettingsPart))
            {
                return (T)(object)new DocumentSettingsPart();
            }
            
            if (typeof(T) == typeof(DocumentTasksPart))
            {
                return (T)(object)new DocumentTasksPart();
            }
            
            if (typeof(T) == typeof(DrawingsPart))
            {
                return (T)(object)new DrawingsPart();
            }
            
            if (typeof(T) == typeof(EmbeddedControlPersistenceBinaryDataPart))
            {
                return (T)(object)new EmbeddedControlPersistenceBinaryDataPart();
            }
            
            if (typeof(T) == typeof(EmbeddedControlPersistencePart))
            {
                return (T)(object)new EmbeddedControlPersistencePart();
            }
            
            if (typeof(T) == typeof(EmbeddedObjectPart))
            {
                return (T)(object)new EmbeddedObjectPart();
            }
            
            if (typeof(T) == typeof(EmbeddedPackagePart))
            {
                return (T)(object)new EmbeddedPackagePart();
            }
            
            if (typeof(T) == typeof(EndnotesPart))
            {
                return (T)(object)new EndnotesPart();
            }
            
            if (typeof(T) == typeof(ExcelAttachedToolbarsPart))
            {
                return (T)(object)new ExcelAttachedToolbarsPart();
            }
            
            if (typeof(T) == typeof(ExtendedChartPart))
            {
                return (T)(object)new ExtendedChartPart();
            }
            
            if (typeof(T) == typeof(ExtendedFilePropertiesPart))
            {
                return (T)(object)new ExtendedFilePropertiesPart();
            }
            
            if (typeof(T) == typeof(ExternalWorkbookPart))
            {
                return (T)(object)new ExternalWorkbookPart();
            }
            
            if (typeof(T) == typeof(FontPart))
            {
                return (T)(object)new FontPart();
            }
            
            if (typeof(T) == typeof(FontTablePart))
            {
                return (T)(object)new FontTablePart();
            }
            
            if (typeof(T) == typeof(FooterPart))
            {
                return (T)(object)new FooterPart();
            }
            
            if (typeof(T) == typeof(FootnotesPart))
            {
                return (T)(object)new FootnotesPart();
            }
            
            if (typeof(T) == typeof(GlossaryDocumentPart))
            {
                return (T)(object)new GlossaryDocumentPart();
            }
            
            if (typeof(T) == typeof(HandoutMasterPart))
            {
                return (T)(object)new HandoutMasterPart();
            }
            
            if (typeof(T) == typeof(HeaderPart))
            {
                return (T)(object)new HeaderPart();
            }
            
            if (typeof(T) == typeof(ImagePart))
            {
                return (T)(object)new ImagePart();
            }
            
            if (typeof(T) == typeof(InternationalMacroSheetPart))
            {
                return (T)(object)new InternationalMacroSheetPart();
            }
            
            if (typeof(T) == typeof(LabelInfoPart))
            {
                return (T)(object)new LabelInfoPart();
            }
            
            if (typeof(T) == typeof(LegacyDiagramTextInfoPart))
            {
                return (T)(object)new LegacyDiagramTextInfoPart();
            }
            
            if (typeof(T) == typeof(LegacyDiagramTextPart))
            {
                return (T)(object)new LegacyDiagramTextPart();
            }
            
            if (typeof(T) == typeof(MacroSheetPart))
            {
                return (T)(object)new MacroSheetPart();
            }
            
            if (typeof(T) == typeof(MailMergeRecipientDataPart))
            {
                return (T)(object)new MailMergeRecipientDataPart();
            }
            
            if (typeof(T) == typeof(MainDocumentPart))
            {
                return (T)(object)new MainDocumentPart();
            }
            
            if (typeof(T) == typeof(Model3DReferenceRelationshipPart))
            {
                return (T)(object)new Model3DReferenceRelationshipPart();
            }
            
            if (typeof(T) == typeof(NamedSheetViewsPart))
            {
                return (T)(object)new NamedSheetViewsPart();
            }
            
            if (typeof(T) == typeof(NotesMasterPart))
            {
                return (T)(object)new NotesMasterPart();
            }
            
            if (typeof(T) == typeof(NotesSlidePart))
            {
                return (T)(object)new NotesSlidePart();
            }
            
            if (typeof(T) == typeof(NumberingDefinitionsPart))
            {
                return (T)(object)new NumberingDefinitionsPart();
            }
            
            if (typeof(T) == typeof(PivotTableCacheDefinitionPart))
            {
                return (T)(object)new PivotTableCacheDefinitionPart();
            }
            
            if (typeof(T) == typeof(PivotTableCacheRecordsPart))
            {
                return (T)(object)new PivotTableCacheRecordsPart();
            }
            
            if (typeof(T) == typeof(PivotTablePart))
            {
                return (T)(object)new PivotTablePart();
            }
            
            if (typeof(T) == typeof(PowerPointAuthorsPart))
            {
                return (T)(object)new PowerPointAuthorsPart();
            }
            
            if (typeof(T) == typeof(PowerPointCommentPart))
            {
                return (T)(object)new PowerPointCommentPart();
            }
            
            if (typeof(T) == typeof(PresentationPart))
            {
                return (T)(object)new PresentationPart();
            }
            
            if (typeof(T) == typeof(PresentationPropertiesPart))
            {
                return (T)(object)new PresentationPropertiesPart();
            }
            
            if (typeof(T) == typeof(QueryTablePart))
            {
                return (T)(object)new QueryTablePart();
            }
            
            if (typeof(T) == typeof(QuickAccessToolbarCustomizationsPart))
            {
                return (T)(object)new QuickAccessToolbarCustomizationsPart();
            }
            
            if (typeof(T) == typeof(RdArrayPart))
            {
                return (T)(object)new RdArrayPart();
            }
            
            if (typeof(T) == typeof(RdRichValuePart))
            {
                return (T)(object)new RdRichValuePart();
            }
            
            if (typeof(T) == typeof(RdRichValueStructurePart))
            {
                return (T)(object)new RdRichValueStructurePart();
            }
            
            if (typeof(T) == typeof(RdRichValueTypesPart))
            {
                return (T)(object)new RdRichValueTypesPart();
            }
            
            if (typeof(T) == typeof(RdRichValueWebImagePart))
            {
                return (T)(object)new RdRichValueWebImagePart();
            }
            
            if (typeof(T) == typeof(RdSupportingPropertyBagPart))
            {
                return (T)(object)new RdSupportingPropertyBagPart();
            }
            
            if (typeof(T) == typeof(RdSupportingPropertyBagStructurePart))
            {
                return (T)(object)new RdSupportingPropertyBagStructurePart();
            }
            
            if (typeof(T) == typeof(RibbonAndBackstageCustomizationsPart))
            {
                return (T)(object)new RibbonAndBackstageCustomizationsPart();
            }
            
            if (typeof(T) == typeof(RibbonExtensibilityPart))
            {
                return (T)(object)new RibbonExtensibilityPart();
            }
            
            if (typeof(T) == typeof(RichStylesPart))
            {
                return (T)(object)new RichStylesPart();
            }
            
            if (typeof(T) == typeof(SharedStringTablePart))
            {
                return (T)(object)new SharedStringTablePart();
            }
            
            if (typeof(T) == typeof(SingleCellTablePart))
            {
                return (T)(object)new SingleCellTablePart();
            }
            
            if (typeof(T) == typeof(SlicerCachePart))
            {
                return (T)(object)new SlicerCachePart();
            }
            
            if (typeof(T) == typeof(SlicersPart))
            {
                return (T)(object)new SlicersPart();
            }
            
            if (typeof(T) == typeof(SlideCommentsPart))
            {
                return (T)(object)new SlideCommentsPart();
            }
            
            if (typeof(T) == typeof(SlideLayoutPart))
            {
                return (T)(object)new SlideLayoutPart();
            }
            
            if (typeof(T) == typeof(SlideMasterPart))
            {
                return (T)(object)new SlideMasterPart();
            }
            
            if (typeof(T) == typeof(SlidePart))
            {
                return (T)(object)new SlidePart();
            }
            
            if (typeof(T) == typeof(SlideSyncDataPart))
            {
                return (T)(object)new SlideSyncDataPart();
            }
            
            if (typeof(T) == typeof(SpreadsheetPrinterSettingsPart))
            {
                return (T)(object)new SpreadsheetPrinterSettingsPart();
            }
            
            if (typeof(T) == typeof(StyleDefinitionsPart))
            {
                return (T)(object)new StyleDefinitionsPart();
            }
            
            if (typeof(T) == typeof(StylesWithEffectsPart))
            {
                return (T)(object)new StylesWithEffectsPart();
            }
            
            if (typeof(T) == typeof(TableDefinitionPart))
            {
                return (T)(object)new TableDefinitionPart();
            }
            
            if (typeof(T) == typeof(TableStylesPart))
            {
                return (T)(object)new TableStylesPart();
            }
            
            if (typeof(T) == typeof(ThemeOverridePart))
            {
                return (T)(object)new ThemeOverridePart();
            }
            
            if (typeof(T) == typeof(ThemePart))
            {
                return (T)(object)new ThemePart();
            }
            
            if (typeof(T) == typeof(ThumbnailPart))
            {
                return (T)(object)new ThumbnailPart();
            }
            
            if (typeof(T) == typeof(TimeLineCachePart))
            {
                return (T)(object)new TimeLineCachePart();
            }
            
            if (typeof(T) == typeof(TimeLinePart))
            {
                return (T)(object)new TimeLinePart();
            }
            
            if (typeof(T) == typeof(UserDefinedTagsPart))
            {
                return (T)(object)new UserDefinedTagsPart();
            }
            
            if (typeof(T) == typeof(VbaDataPart))
            {
                return (T)(object)new VbaDataPart();
            }
            
            if (typeof(T) == typeof(VbaProjectPart))
            {
                return (T)(object)new VbaProjectPart();
            }
            
            if (typeof(T) == typeof(ViewPropertiesPart))
            {
                return (T)(object)new ViewPropertiesPart();
            }
            
            if (typeof(T) == typeof(VmlDrawingPart))
            {
                return (T)(object)new VmlDrawingPart();
            }
            
            if (typeof(T) == typeof(VolatileDependenciesPart))
            {
                return (T)(object)new VolatileDependenciesPart();
            }
            
            if (typeof(T) == typeof(WebExTaskpanesPart))
            {
                return (T)(object)new WebExTaskpanesPart();
            }
            
            if (typeof(T) == typeof(WebExtensionPart))
            {
                return (T)(object)new WebExtensionPart();
            }
            
            if (typeof(T) == typeof(WebSettingsPart))
            {
                return (T)(object)new WebSettingsPart();
            }
            
            if (typeof(T) == typeof(WordAttachedToolbarsPart))
            {
                return (T)(object)new WordAttachedToolbarsPart();
            }
            
            if (typeof(T) == typeof(WordCommentsExtensiblePart))
            {
                return (T)(object)new WordCommentsExtensiblePart();
            }
            
            if (typeof(T) == typeof(WordprocessingCommentsExPart))
            {
                return (T)(object)new WordprocessingCommentsExPart();
            }
            
            if (typeof(T) == typeof(WordprocessingCommentsIdsPart))
            {
                return (T)(object)new WordprocessingCommentsIdsPart();
            }
            
            if (typeof(T) == typeof(WordprocessingCommentsPart))
            {
                return (T)(object)new WordprocessingCommentsPart();
            }
            
            if (typeof(T) == typeof(WordprocessingPeoplePart))
            {
                return (T)(object)new WordprocessingPeoplePart();
            }
            
            if (typeof(T) == typeof(WordprocessingPrinterSettingsPart))
            {
                return (T)(object)new WordprocessingPrinterSettingsPart();
            }
            
            if (typeof(T) == typeof(WorkbookPart))
            {
                return (T)(object)new WorkbookPart();
            }
            
            if (typeof(T) == typeof(WorkbookPersonPart))
            {
                return (T)(object)new WorkbookPersonPart();
            }
            
            if (typeof(T) == typeof(WorkbookRevisionHeaderPart))
            {
                return (T)(object)new WorkbookRevisionHeaderPart();
            }
            
            if (typeof(T) == typeof(WorkbookRevisionLogPart))
            {
                return (T)(object)new WorkbookRevisionLogPart();
            }
            
            if (typeof(T) == typeof(WorkbookStylesPart))
            {
                return (T)(object)new WorkbookStylesPart();
            }
            
            if (typeof(T) == typeof(WorkbookUserDataPart))
            {
                return (T)(object)new WorkbookUserDataPart();
            }
            
            if (typeof(T) == typeof(WorksheetCommentsPart))
            {
                return (T)(object)new WorksheetCommentsPart();
            }
            
            if (typeof(T) == typeof(WorksheetPart))
            {
                return (T)(object)new WorksheetPart();
            }
            
            if (typeof(T) == typeof(WorksheetSortMapPart))
            {
                return (T)(object)new WorksheetSortMapPart();
            }
            
            if (typeof(T) == typeof(WorksheetThreadedCommentsPart))
            {
                return (T)(object)new WorksheetThreadedCommentsPart();
            }
            
            if (typeof(T) == typeof(XmlSignaturePart))
            {
                return (T)(object)new XmlSignaturePart();
            }
            
            return default;
        }
    }
}
