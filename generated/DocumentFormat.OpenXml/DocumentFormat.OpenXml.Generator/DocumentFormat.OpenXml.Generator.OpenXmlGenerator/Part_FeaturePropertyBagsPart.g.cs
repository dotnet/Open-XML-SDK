// <auto-generated/>

// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

#nullable enable

using DocumentFormat.OpenXml.Features;
using DocumentFormat.OpenXml.Framework;
using System;
using System.Collections.Generic;

namespace DocumentFormat.OpenXml.Packaging
{
    /// <summary>
    /// Defines the FeaturePropertyBagsPart
    /// </summary>
    public partial class FeaturePropertyBagsPart : OpenXmlPart,
        IFixedContentTypePart
    {
        internal const string ContentTypeConstant = "application/vnd.ms-excel.featurepropertybag+xml";
        internal const string RelationshipTypeConstant = "http://schemas.microsoft.com/office/2022/11/relationships/FeaturePropertyBag";
        private DocumentFormat.OpenXml.Office.Y2022.FeaturePropertyBag.FeaturePropertyBags? _rootElement;

        /// <summary>
        /// Creates an instance of the FeaturePropertyBagsPart OpenXmlType
        /// </summary>
        internal FeaturePropertyBagsPart()
        {
        }

        /// <inheritdoc/>
        public sealed override string ContentType => ContentTypeConstant;

        /// <summary>
        /// Gets or sets the root element of this part.
        /// </summary>
        public DocumentFormat.OpenXml.Office.Y2022.FeaturePropertyBag.FeaturePropertyBags FeaturePropertyBags
        {
            get
            {
                if (_rootElement is null)
                {
                    LoadDomTree<DocumentFormat.OpenXml.Office.Y2022.FeaturePropertyBag.FeaturePropertyBags>();
                }

                return _rootElement!;
            }

            set
            {
                if (value is null)
                {
                    throw new ArgumentNullException(nameof(value));
                }

                SetDomTree(value);
            }
        }

        private protected override OpenXmlPartRootElement? InternalRootElement
        {
            get
            {
                return _rootElement;
            }

            set
            {
                _rootElement = value as DocumentFormat.OpenXml.Office.Y2022.FeaturePropertyBag.FeaturePropertyBags;
            }
        }

        internal override OpenXmlPartRootElement? PartRootElement => FeaturePropertyBags;

        /// <inheritdoc/>
        public sealed override string RelationshipType => RelationshipTypeConstant;

        internal override bool IsInVersion(FileFormatVersions version)
        {
            return version.AtLeast(FileFormatVersions.Microsoft365);
        }
        
        /// <inheritdoc/>
        public override IFeatureCollection Features => _features ??= new GeneratedFeatures(this);
        
        private sealed class GeneratedFeatures : TypedPartFeatureCollection, ITargetFeature
        {
            public GeneratedFeatures(OpenXmlPart part) : base(part) { }
            string ITargetFeature.Name => "featurePropertyBag";
            string ITargetFeature.Path => "featurePropertyBag";
        }
    
    }
}
